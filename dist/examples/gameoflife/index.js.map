{"version":3,"file":"index.js","sources":["../../../node_modules/fjl/dist/es6-module/fjl.js","../../../src/functor/Functor.js","../../../src/utils.js","../../../src/functor/Apply.js","../../../src/functor/Applicative.js","../../../src/monad/Monad.js","../../../src/io/IO.js","../../../src/examples/gameoflife/index.js"],"sourcesContent":["/**\r\n * Created by elyde on 12/18/2016.\r\n * @memberOf _objectOps\r\n */\r\nconst _Number = Number.name;\nconst _NaN = 'NaN';\nconst _Null = 'Null';\nconst _Undefined = 'Undefined';\r\n\r\n/**\r\n * Returns the constructor/class/type name of a value.\r\n * @note Returns 'NaN' if value is of type `Number` and value is `isNaN`.\r\n * @note Returns 'Undefined' if value is `undefined`\r\n * @note Returns 'Null' if value is `null`\r\n * For values that have no concrete constructors and/or casters\r\n * (null, NaN, and undefined) we returned normalized names for them ('Null', 'NaN', 'Number')\r\n * @function module:_objectOps.typeOf\r\n * @param value {*}\r\n * @returns {string} - Constructor's name or derived name (in the case of `null`, `undefined`, or `NaN` (whose\r\n *  normalized names are 'Null', 'Undefined', 'NaN' respectively).\r\n */\r\nfunction typeOf (value) {\r\n    let retVal;\r\n    if (value === undefined) {\r\n        retVal = _Undefined;\r\n    }\r\n    else if (value === null) {\r\n        retVal = _Null;\r\n    }\r\n    else {\r\n        let constructorName = (value).constructor.name;\r\n        retVal = constructorName === _Number && isNaN(value) ?\r\n            _NaN : constructorName;\r\n    }\r\n    return retVal;\r\n}\n\nconst fPureTakesOne = name => (arg, f) => f[name](arg);\nconst fPureTakes2 = name => (arg1, arg2, f) => f[name](arg1, arg2);\nconst fPureTakes3 = name => (arg1, arg2, arg3, f) => f[name](arg1, arg2, arg3);\nconst fPureTakes4 = name => (arg1, arg2, arg3, arg4, f) => f[name](arg1, arg2, arg3, arg4);\nconst fPureTakes5 = name => (arg1, arg2, arg3, arg4, arg5, f) => f[name](arg1, arg2, arg3, arg4, arg5);\nconst fPureTakesOneOrMore = name => (f, ...args) => f[name](...args);\nconst fnOrError = (symbolName, f) => {\r\n        if (!f || f.constructor !== Function) {\r\n            throw new Error (`${symbolName} should be a function. ` +\r\n                `Type received: ${typeOf(f)};  Value received: ${f}.`);\r\n        }\r\n        return f;\r\n    };\n\n/**\r\n * Created by elydelacruz on 9/6/2017.\r\n * Defines some of the platform methods for objects (the ones used within `fjl`) uncurried for use\r\n * throughout the library.  @note Doesn't include all methods for objects just the ones used in\r\n *  the library.\r\n * @todo change all files named '*UnCurried' to '*_'.\r\n */\r\n\r\nconst instanceOf$1 = (instanceConstructor, instance) =>\r\n        instance instanceof instanceConstructor;\nconst hasOwnProperty$1 = fPureTakesOne('hasOwnProperty');\nconst length = x => x.length;\nconst keys = obj => Object.keys(obj);\nconst assign$1 = (() => Object.assign ?\r\n            (obj0, ...objs) => Object.assign(obj0, ...objs) :\r\n            (obj0, ...objs) => objs.reduce((topAgg, obj) => {\r\n                return keys(obj).reduce((agg, key) => {\r\n                    agg[key] = obj[key];\r\n                    return agg;\r\n                }, topAgg);\r\n            }, obj0)\r\n        )();\n\n/**\r\n * Created by elyde on 7/20/2017.\r\n * Functional versions of common array methods (`map`, `filter`, etc.) (un-curried);\r\n * @module _jsPlatform_arrayOps\r\n * @private\r\n * @todo updated doc blocks to list correct/updated module name.\r\n */\r\n\r\nconst defineReverse = () =>\r\n        Array.prototype.reverse ? x => x.reverse() :\r\n            x => x.reduceRight((agg, item) => {\r\n                agg.push(item);\r\n                return agg;\r\n            }, []);\nconst map = fPureTakesOne('map');\nconst filter = fPureTakesOne('filter');\nconst reduceRight = fPureTakes2('reduceRight');\nconst reverse = defineReverse();\n\n/**\r\n *  List operations that overlap (apart from globally overlapping props and functions like `length`)\r\n *      on both strings and arrays.\r\n */\r\n\r\nconst concat = fPureTakesOneOrMore('concat');\nconst slice = fPureTakes2('slice');\nconst includes = (() => 'includes' in Array.prototype ?\r\n            fPureTakesOne('includes') :\r\n            (value, xs) => xs.indexOf(value) > -1)();\nconst indexOf = fPureTakesOne('indexOf');\nconst lastIndexOf = fPureTakesOne('lastIndexOf');\n\n/**\r\n * Created by elydelacruz on 9/6/2017.\r\n */\r\n\r\n/**\r\n * Functional version of `String.prototype.split`.\r\n * @function module:_stringOps.split\r\n * @param separator {String|RegExp}\r\n * @param str {String}\r\n * @returns {Array}\r\n */\r\nconst split = fPureTakesOne('split');\n\n/**\r\n * Created by elydelacruz on 9/7/2017.\r\n * @module _jsPlatform_function\r\n * @private\r\n */\r\nconst apply = (fn, args) => fn.apply(null, args);\nconst call = (fn, ...args) => apply(fn, args);\n\n/**\r\n * @module jsPlatform_\r\n * @private\r\n */\n\n/**\r\n * @author elydelacruz\r\n * @created 12/6/2016.\r\n * @memberOf _functionOps\r\n * @description \"Curry strict\" and \"curry arbitrarily\" functions (`curry`, `curryN`).\r\n */\r\nconst notFnErrPrefix = '`fn` in `curry(fn, ...args)`';\r\n\r\nconst curry = (fn, ...argsToCurry) => curryN(fnOrError(notFnErrPrefix, fn).length, fn, ...argsToCurry);\nconst curryN = (executeArity, fn, ...curriedArgs) => {\r\n        return (...args) => {\r\n            let concatedArgs = concat(curriedArgs, args),\r\n                canBeCalled = (length(concatedArgs) >= executeArity) || !executeArity;\r\n            return !canBeCalled ? apply(curryN, concat([executeArity, fnOrError(notFnErrPrefix, fn)], concatedArgs)) :\r\n                apply(fnOrError(notFnErrPrefix, fn), concatedArgs);\r\n        };\r\n    };\nconst curry2 = fn => curryN(2, fn);\nconst curry3 = fn => curryN(3, fn);\nconst curry4 = fn => curryN(4, fn);\nconst curry5 = fn => curryN(5, fn);\n\n/**\r\n * @memberOf _objectOps\r\n */\r\n\r\n/**\r\n * Returns property value if found; Else `undefined`.\r\n * @function module:_objectOps.prop\r\n * @param name {String} - Key to search on `obj`\r\n * @param obj {Object} - Object to search `name` on.\r\n * @returns {*}\r\n */\r\nconst prop$1 = (name, obj) => obj[name];\n\n/**\r\n * Created by elyde on 12/18/2016.\r\n * @memberOf _objectOps\r\n */\r\n\r\nlet _String = String.name;\nlet _Number$1 = Number.name;\nlet _Object = Object.name;\nlet _Boolean = Boolean.name;\nlet _Function = Function.name;\nlet _Array = Array.name;\nlet _Symbol = 'Symbol';\nlet _Map = 'Map';\nlet _Set = 'Set';\nlet _WeakMap = 'WeakMap';\nlet _WeakSet = 'WeakSet';\nlet _Null$1 = 'Null';\nlet _Undefined$1 = 'Undefined';\r\n\r\nconst isFunction = value => instanceOf$1(Function, value);\nconst isType$1 = (type, obj) => typeOf(obj) === (isFunction(type) ? type.name : type);\nconst isClass = x => x && /^\\s{0,3}class\\s{1,3}/.test((x + '').substr(0, 10));\nconst isCallable = x => isFunction(x) && !isClass(x);\nconst {isArray} = Array;\nconst isObject = value => isType$1(_Object, value);\nconst isBoolean = value => isType$1(_Boolean, value);\nconst isNumber = value => isType$1(_Number$1, value);\nconst isString = value => isType$1(_String, value);\nconst isMap = value => isType$1(_Map, value);\nconst isSet = value => isType$1(_Set, value);\nconst isWeakMap = value => isType$1(_WeakMap, value);\nconst isWeakSet = value => isType$1(_WeakSet, value);\nconst isUndefined = value => isType$1(_Undefined$1, value);\nconst isNull = value => isType$1(_Null$1, value);\nconst isSymbol = value => isType$1(_Symbol, value);\nconst isUsableImmutablePrimitive = x => {\r\n        const typeOfX = typeOf(x);\r\n        return isset(x) &&\r\n            [_String, _Number$1, _Boolean, _Symbol]\r\n                .some(Type => Type === typeOfX);\r\n    };\nconst isEmptyList = x => !length(x);\nconst isEmptyObject = obj => isEmptyList(keys(obj));\nconst isEmptyCollection = x => x.size === 0;\nconst isEmpty = value => {\r\n        let typeOfValue = typeOf(value),\r\n            retVal;\r\n        if (!value) { // if '', 0, `null`, `undefined`, or `false` then is empty\r\n            retVal = true;\r\n        }\r\n        else if (typeOfValue === _Array || typeOfValue === _Function) {\r\n            retVal = isEmptyList(value);\r\n        }\r\n        else if (typeOfValue === _Number$1) {\r\n            retVal = false;\r\n        }\r\n        else if (typeOfValue === _Object) {\r\n            retVal = isEmptyObject(value);\r\n        }\r\n        else if (hasOwnProperty$1('size', value) && isNumber(value.size)) {\r\n            retVal = isEmptyCollection(value);\r\n        }\r\n        else {\r\n            retVal = !value;\r\n        }\r\n        return retVal;\r\n    };\nconst isset = x => x !== null && x !== undefined;\n\nconst assignDeep$1 = (obj0, ...objs) =>\r\n        objs.reduce((topAgg, obj) =>\r\n                keys(obj).reduce((agg, key) => {\r\n                    let propDescription = Object.getOwnPropertyDescriptor(agg, key);\r\n                    // If property is not writable move to next item in collection\r\n                    if (hasOwnProperty$1(key, agg) && propDescription &&\r\n                        !(propDescription.get && propDescription.set) &&\r\n                        !propDescription.writable) {\r\n                        return agg;\r\n                    }\r\n                    if (isObject(agg[key]) && isObject(obj[key])) {\r\n                        assignDeep$1(agg[key], obj[key]);\r\n                    }\r\n                    else { agg[key] = obj[key]; }\r\n                    return agg;\r\n                }, topAgg)\r\n            , obj0);\n\n/**\r\n * @memberOf _functionOps\r\n */\r\n\r\nconst negateF = fn => (a, b) => !fn(a, b);\nconst negateF3 = fn => (a, b, c) => !fn(a, b, c);\nconst negateF4 = fn => (a, b, c, d) => !fn(a, b, c, d);\nconst negateF5 = fn => (a, b, c, d, e) => !fn(a, b, c, d, e);\nconst negateP = negateF3;\nconst negateFMany = fn => (...args) => !apply(fn, args);\n\n/**\r\n * Created by elyde on 7/15/2017.\r\n * @module booleanOps\r\n */\r\n\r\nconst isTruthy = value => !!value;\nconst isFalsy = value => !value;\nconst alwaysTrue = () => true;\nconst alwaysFalse = () => false;\n\n/**\r\n * Checks if given `x` is set and of one of\r\n *  [String, Boolean, Number, or Symbol] (null and undefined are immutable\r\n *   but are not \"usable\" or 'not what we usually want to operate on'.\r\n * @private\r\n * @param x {*}\r\n * @returns {Boolean}\r\n */\r\nfunction isUsableImmutablePrimitive$1 (x) {\r\n    const typeOfX = typeOf(x);\r\n    return isset(x) &&\r\n        [String.name, Number.name, Boolean.name, Symbol.name]\r\n            .some(Type => Type === typeOfX);\r\n}\r\n\r\n/**\r\n * Creates a value `of` given type;  Checks for one of the following construction strategies (in order listed):\r\n * ```\r\n * // - If exists `(value).constructor.of` uses this.\r\n * // - If value is of one String, Boolean, Symbol, or Number types calls it's\r\n * //      constructor as a function (in cast form;  E.g., `constructor(...args)` )\r\n * // - Else if constructor is a function, thus far, then calls constructor using\r\n * //      the `new` keyword (with any passed in args).\r\n * ```\r\n * @function module:_objectOps.of\r\n * @param x {*} - Value to derive returned value's type from.\r\n * @param [args] {...*} - Any args to pass in to matched construction strategy.\r\n * @returns {*|undefined} - New value of given value's type else `undefined`.\r\n */\r\nconst of = (x, ...args) => {\r\n    if (!isset(x)) { return undefined; }\r\n    const constructor = x.constructor;\r\n    if (hasOwnProperty$1('of', constructor)) {\r\n        return apply(constructor.of, args);\r\n    }\r\n    else if (isUsableImmutablePrimitive$1(x)) {\r\n        return apply(constructor, args);\r\n    }\r\n    else if (isFunction(constructor)) {\r\n        return new constructor(...args);\r\n    }\r\n    return undefined;\r\n};\n\n/**\r\n * @module _objectOps\r\n * @description Object operations (uncurried).\r\n * @private\r\n */\n\n/**\r\n * @function module:_listOps.map\r\n * @param fn {Function} - Function to map on array.\r\n * @param xs {Array}\r\n * @returns {Array}\r\n */\r\nfunction _map (fn, xs) {\r\n    let ind = 0,\r\n        limit = length(xs),\r\n        out = [];\r\n    if (!limit) { return out; }\r\n    while (ind < limit) {\r\n        out.push(fn(xs[ind], ind, xs));\r\n        ind += 1;\r\n    }\r\n    return out;\r\n}\n\nconst aggregateStr = (agg, item) => agg + item;\nconst aggregateArr = (agg, item) => {\r\n        agg.push(item);\r\n        return agg;\r\n    };\nconst aggregateObj = (agg, item, ind) => {\r\n        agg[ind] = item;\r\n        return agg;\r\n    };\nconst aggregatorByType = x => {\r\n        switch (typeOf(x)) {\r\n            case 'String': return aggregateStr;\r\n            case 'Array': return aggregateArr;\r\n            case 'Object':\r\n            default: return aggregateObj;\r\n        }\r\n    };\n\n/**\r\n * List operator utils module.\r\n * @module _listOpUtils\r\n * @private\r\n */\r\nconst sliceFrom = (startInd, arr) => slice(startInd, undefined, arr);\nconst sliceTo = (toInd, xs) => slice(0, toInd, xs);\nconst copy = xs => sliceFrom(0, xs);\nconst sliceCopy = copy;\nconst genericAscOrdering = (a, b) => {\r\n        if (a > b) { return 1; }\r\n        else if (a < b) { return -1; }\r\n        return 0;\r\n    };\nconst lengths = (...lists) => length(lists) ? _map(length, lists) : [];\nconst lengthsToSmallest = (...lists) => {\r\n        const listLengths = apply(lengths, lists),\r\n            smallLen = Math.min.apply(Math, listLengths);\r\n        return _map((list, ind) => listLengths[ind] > smallLen ?\r\n            sliceTo(smallLen, list) : copy(list), lists);\r\n    };\nconst reduceUntil = (pred, op, agg, arr) => {\r\n        const limit = length(arr);\r\n        if (!limit) { return agg; }\r\n        let ind = 0,\r\n            result = agg;\r\n        for (; ind < limit; ind++) {\r\n            if (pred(arr[ind], ind, arr)) { break; }\r\n            result = op(result, arr[ind], ind, arr);\r\n        }\r\n        return result;\r\n    };\nconst reduceRightUntil = (pred, op, agg, arr) => {\r\n        const limit = length(arr);\r\n        if (!limit) { return agg; }\r\n        let ind = limit - 1,\r\n            result = agg;\r\n        for (; ind >= 0; ind--) {\r\n            if (pred(arr[ind], ind, arr)) { break; }\r\n            result = op(result, arr[ind], ind, arr);\r\n        }\r\n        return result;\r\n    };\nconst reduce$1 = (operation, agg, arr) =>\r\n        reduceUntil(\r\n            alwaysFalse,            // until-predicate\r\n            operation,              // operation\r\n            agg,                    // aggregator\r\n            arr);\nconst reduceRight$1 = (operation, agg, arr) =>\r\n        reduceRightUntil(\r\n            alwaysFalse,            // until-predicate\r\n            operation,              // operation\r\n            agg,                    // aggregator\r\n            arr);\nconst lastIndex = x => { const len = length(x); return len ? len - 1 : 0; };\nconst findIndexWhere = (pred, arr) => {\r\n        let ind = -1,\r\n            predicateFulfilled = false;\r\n        const limit = length(arr);\r\n        while (ind < limit && !predicateFulfilled) {\r\n            predicateFulfilled = pred(arr[++ind], ind, arr);\r\n        }\r\n        return ind;\r\n    };\nconst findIndexWhereRight = (pred, arr) => {\r\n        const limit = length(arr);\r\n        let ind = limit,\r\n            predicateFulfilled = false;\r\n        for (; ind >= 0 && !predicateFulfilled; --ind) {\r\n            predicateFulfilled = pred(arr[ind], ind, arr);\r\n        }\r\n        return ind;\r\n    };\nconst findIndicesWhere = (pred, xs) => {\r\n        if (!xs || !xs.length) { return undefined; }\r\n        const limit = length(xs);\r\n        let ind = 0,\r\n            out = [];\r\n        for (; ind < limit; ind++) {\r\n            if (pred(xs[ind], ind, xs)) { out.push(ind); }\r\n        }\r\n        return out.length ? out : undefined;\r\n    };\nconst findWhere = (pred, xs) => {\r\n        let ind = 0,\r\n            limit = length(xs);\r\n        if (!limit) { return; }\r\n        for (; ind < limit; ind++) {\r\n            let elm = xs[ind];\r\n            if (pred(elm, ind, xs)) { return elm; }\r\n        }\r\n    };\n\n/**\r\n * List operations module.\r\n * @module _listOps\r\n * @todo decide whether to throw errors where functions cannot function without a specific type or to return undefined (and also determine which cases are ok for just returning undefined).\r\n * @private\r\n */\r\n// Exported internals\r\nconst _append = concat;\nconst _appendMany = (...args) => {\r\n        if (length(args)) { return apply(concat, args); }\r\n        throw new Error('`_appendMany` requires at least one arg.');\r\n    };\nconst _head = x => x[0];\nconst _last = xs => xs[lastIndex(xs)];\nconst _tail = xs => sliceFrom(1, xs);\nconst _init = xs => sliceTo(lastIndex(xs), xs);\nconst _uncons = xs =>\r\n        !xs || length(xs) === 0 ? undefined : [_head(xs), _tail(xs)];\nconst _unconsr = xs => !xs || length(xs) === 0 ? undefined : [_init(xs), _last(xs)];\nconst _concat = xs => !length(xs) ? copy(xs) : apply(_appendMany, xs);\nconst _concatMap = (fn, foldableOfA) => _concat(_map(fn, foldableOfA));\nconst _reverse = x => _foldr((agg, item) => (agg.push(item), agg), [], x);\nconst _intersperse = (between, arr) => {\r\n        const limit = length(arr),\r\n            lastInd = limit - 1,\r\n            out = [];\r\n        if (!limit) {\r\n            return out;\r\n        }\r\n        return _foldl((agg, item, ind) => (\r\n                ind === lastInd ?\r\n                    agg.push(item) :\r\n                    agg.push(item, between),\r\n                agg\r\n            ), out, arr);\r\n    };\nconst _intercalate = (xs, xss) => _concat(_intersperse(xs, xss));\nconst _transpose = xss => {\r\n        let numLists = length(xss),\r\n            ind = 0, ind2;\r\n        if (!numLists) {\r\n            return [];\r\n        }\r\n        const listLengths = apply(lengths, xss),\r\n            longestListLen = _maximum(listLengths),\r\n            outLists = [];\r\n        for (; ind < longestListLen; ind += 1) {\r\n            const outList = [];\r\n            for (ind2 = 0; ind2 < numLists; ind2 += 1) {\r\n                if (listLengths[ind2] < ind + 1) {\r\n                    continue;\r\n                }\r\n                outList.push(xss[ind2][ind]);\r\n            }\r\n            outLists.push(outList);\r\n        }\r\n        return _filter(x => length(x), outLists);\r\n    };\nconst _subsequences = xs => {\r\n        const listLen = length(xs),\r\n            len = Math.pow(2, listLen),\r\n            out = [];\r\n        for (let i = 0; i < len; i += 1) {\r\n            let entry = [];\r\n            for (let j = 0; j < listLen; j += 1) {\r\n                if (i & (1 << j)) {\r\n                    entry.push(xs[j]);\r\n                }\r\n            }\r\n            out.push(entry);\r\n        }\r\n        return out;\r\n    };\nconst _subsequences1 = xs => {\r\n        const listLen = length(xs),\r\n            len = Math.pow(2, listLen),\r\n            out = [];\r\n        for (let i = 0; i < len; i += 1) {\r\n            let entry = [];\r\n            for (let j = 0; j < listLen; j += 1) {\r\n                if (i & (1 << j)) {\r\n                    entry.push(xs[j]);\r\n                }\r\n            }\r\n            out.push(entry);\r\n        }\r\n        return out;\r\n    };\nconst _swapped = (ind1, ind2, list) => {\r\n        const out = copy(list),\r\n            tmp = out[ind1];\r\n        out[ind1] = out[ind2];\r\n        out[ind2] = tmp;\r\n        return out;\r\n    };\nconst _permutations = xs => {\r\n        const limit = length(xs);\r\n\r\n        if (!limit || limit === 1) {\r\n            return [xs];\r\n        }\r\n\r\n        let list = copy(xs),\r\n            c = _repeat(limit, 0),\r\n            i = 0;\r\n\r\n        const out = [list];\r\n\r\n        for (; i < limit; i++) {\r\n            if (c[i] < i) {\r\n                list = _swapped(i % 2 === 0 ? 0 : c[i], i, list);\r\n                out.push(list);\r\n                c[i] += 1;\r\n                i = 0;\r\n                continue;\r\n            }\r\n            c[i] = 0;\r\n        }\r\n\r\n        return out;\r\n    };\nconst _foldl = reduce$1;\nconst _foldr = reduceRight$1;\nconst _foldl1 = (op, xs) => {\r\n        const parts = _uncons(xs);\r\n        return !parts ? [] : reduce$1(op, parts[0], parts[1]);\r\n    };\nconst _foldr1 = (op, xs) => {\r\n        const parts = _unconsr(xs);\r\n        return !parts ? [] : reduceRight$1(op, parts[1], parts[0]);\r\n    };\nconst _mapAccumL = (op, zero, xs) => {\r\n        const list = copy(xs),\r\n            limit = length(xs);\r\n        if (!limit) {\r\n            return [zero, list];\r\n        }\r\n        let ind = 0,\r\n            agg = zero,\r\n            mapped = [],\r\n            tuple;\r\n        for (; ind < limit; ind++) {\r\n            tuple = op(agg, list[ind], ind);\r\n            agg = tuple[0];\r\n            mapped = tuple[1];\r\n        }\r\n        return [agg, mapped];\r\n    };\nconst _mapAccumR = (op, zero, xs) => {\r\n        const list = copy(xs),\r\n            limit = length(xs);\r\n        if (!limit) {\r\n            return [zero, list];\r\n        }\r\n        let ind = limit - 1,\r\n            agg = zero,\r\n            mapped = [],\r\n            tuple;\r\n        for (; ind >= 0; ind--) {\r\n            tuple = op(agg, list[ind], ind);\r\n            agg = tuple[0];\r\n            mapped = tuple[1];\r\n        }\r\n        return [agg, mapped];\r\n    };\nconst _iterate = (limit, op, x) => {\r\n        let ind = 0,\r\n            out = [],\r\n            lastX = x;\r\n        for (; ind < limit; ind += 1) {\r\n            out.push(lastX);\r\n            lastX = op(lastX);\r\n        }\r\n        return out;\r\n    };\nconst _repeat = (limit, x) => _iterate(limit, a => a, x);\nconst _replicate = _repeat;\nconst _cycle = (limit, xs) => _concat(_replicate(limit, xs));\nconst _unfoldr = (op, x) => {\r\n        let ind = 0,\r\n            out = [],\r\n            resultTuple = op(x, ind, out);\r\n        while (resultTuple) {\r\n            out.push(resultTuple[0]);\r\n            resultTuple = op(resultTuple[1], ++ind, out);\r\n        }\r\n        return out;\r\n    };\nconst _findIndex = findIndexWhere;\nconst _findIndices = findIndicesWhere;\nconst _elemIndex = (x, xs) => {\r\n        const foundInd = indexOf(x, xs);\r\n        return foundInd !== -1 ? foundInd : undefined;\r\n    };\nconst _elemIndices = (value, xs) => _findIndices(x => x === value, xs);\nconst _take = (limit, list) => sliceTo(limit, list);\nconst _drop = (count, list) => sliceFrom(count, list);\nconst _splitAt = (ind, list) => [ sliceTo(ind, list), sliceFrom(ind, list) ];\nconst _takeWhile = (pred, list) =>\r\n        reduceUntil(\r\n            negateP(pred),  // predicate\r\n            aggregateArr,   // operation\r\n            [],             // aggregator\r\n            list\r\n        );\nconst _dropWhile = (pred, list) => {\r\n        const limit = length(list),\r\n            splitPoint =\r\n                findIndexWhere((item, ind, list2) =>\r\n                    !pred(list[ind], ind, list2), list);\r\n\r\n        return splitPoint === -1 ?\r\n            sliceTo(limit, list) :\r\n            slice(splitPoint, limit, list);\r\n    };\nconst _dropWhileEnd = (pred, list) => {\r\n        const limit = length(list),\r\n            splitPoint =\r\n                findIndexWhereRight((item, ind, list2) =>\r\n                    !pred(list[ind], ind, list2), list);\r\n\r\n        return splitPoint === -1 ?\r\n            sliceTo(limit, list) :\r\n            sliceTo(splitPoint + 1, list);\r\n    };\nconst _span = (pred, list) => {\r\n        const splitPoint = findIndexWhere(negateP(pred), list);\r\n        return splitPoint === -1 ?\r\n            _splitAt(0, list) : _splitAt(splitPoint, list);\r\n    };\nconst _breakOnList = (pred, list) => {\r\n        const splitPoint = findIndexWhere(pred, list);\r\n        return splitPoint === -1 ?\r\n            _splitAt(0, list) : _splitAt(splitPoint, list);\r\n    };\nconst _at = prop$1;\nconst _find = findWhere;\nconst _filter = (pred, xs) => {\r\n        let ind = 0,\r\n            limit = length(xs),\r\n            out = [];\r\n        if (!limit) {\r\n            return out;\r\n        }\r\n        for (; ind < limit; ind++) {\r\n            if (pred(xs[ind], ind, xs)) {\r\n                out.push(xs[ind]);\r\n            }\r\n        }\r\n        return out;\r\n    };\nconst _partition = (pred, list) =>\r\n        !length(list) ?\r\n            [[], []] :\r\n                [_filter(pred, list), _filter(negateP(pred), list)];\nconst _elem = includes;\nconst _notElem = negateF(includes);\nconst _lookup = _at;\nconst _isPrefixOf = (xs1, xs2) => {\r\n        const limit1 = length(xs1),\r\n            limit2 = length(xs2);\r\n        if (limit2 < limit1 || !limit1 || !limit2 || indexOf(xs1[0], xs2) === -1) {\r\n            return false;\r\n        }\r\n        let ind = 0;\r\n        for (; ind < limit1; ind++) {\r\n            if (xs1[ind] !== xs2[ind]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\nconst _isSuffixOf = (xs1, xs2) => {\r\n        const limit1 = length(xs1),\r\n            limit2 = length(xs2);\r\n        if (limit2 < limit1 || !limit1 || !limit2 || indexOf(xs1[0], xs2) === -1) {\r\n            return false;\r\n        }\r\n        let ind1 = limit1 - 1,\r\n            ind2 = limit2 - 1;\r\n        for (; ind1 >= 0; ind1--) {\r\n            if (xs1[ind1] !== xs2[ind2]) {\r\n                return false;\r\n            }\r\n            ind2 -= 1;\r\n        }\r\n        return true;\r\n    };\nconst _isInfixOf = (xs1, xs2) => {\r\n        const limit1 = length(xs1),\r\n            limit2 = length(xs2);\r\n        if (limit2 < limit1 || !limit1 || !limit2) {\r\n            return false;\r\n        }\r\n        let ind1,\r\n            foundLen,\r\n            ind = 0;\r\n        for (; ind < limit2; ind += 1) {\r\n            foundLen = 0;\r\n            for (ind1 = 0; ind1 < limit1; ind1 += 1) {\r\n                if (xs2[ind1 + ind] === xs1[ind1]) {\r\n                    foundLen += 1;\r\n                }\r\n                if (foundLen === limit1) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\nconst _isSubsequenceOf = (xs1, xs2) => {\r\n        const len = Math.pow(2, length(xs2)),\r\n            lenXs1 = length(xs1);\r\n        let foundLen,\r\n            i;\r\n        for (i = 0; i < len; i += 1) {\r\n            foundLen = 0;\r\n            for (let j = 0; j < len; j += 1) {\r\n                if (i & (1 << j) && indexOf(xs2[j], xs1) > -1) {\r\n                    foundLen += 1;\r\n                }\r\n                if (foundLen === lenXs1) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\nconst _group = xs => _groupBy((a, b) => a === b, xs);\nconst _groupBy = (equalityOp, xs) => {\r\n        const limit = length(xs);\r\n        if (!limit) {\r\n            return copy(xs);\r\n        }\r\n        let ind = 0,\r\n            prevItem,\r\n            item,\r\n            predOp = x => {\r\n                if (equalityOp(x, prevItem)) {\r\n                    ind++;\r\n                }\r\n                if (equalityOp(x, item)) {\r\n                    prevItem = x;\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n            agg = [];\r\n        for (; ind < limit; ind += 1) {\r\n            item = xs[ind];\r\n            agg.push(_takeWhile(predOp, slice(ind, limit, xs)));\r\n        }\r\n        return agg;\r\n    };\nconst _inits = xs => {\r\n        let limit = length(xs),\r\n            ind = 0,\r\n            agg = [];\r\n        if (!limit) {\r\n            return [];\r\n        }\r\n        for (; ind <= limit; ind += 1) {\r\n            agg.push(sliceTo(ind, xs));\r\n        }\r\n        return agg;\r\n    };\nconst _tails = xs => {\r\n        let limit = length(xs),\r\n            ind = 0,\r\n            agg = [];\r\n        if (!limit) {\r\n            return [];\r\n        }\r\n        for (; ind <= limit; ind += 1) {\r\n            agg.push(slice(ind, limit, xs));\r\n        }\r\n        return agg;\r\n    };\nconst _stripPrefix = (prefix, list) =>\r\n        _isPrefixOf(prefix, list) ?\r\n            _splitAt(length(prefix), list)[1] :\r\n            copy(list);\nconst _zip = (arr1, arr2) => {\r\n        if (!length(arr1) || !length(arr2)) {\r\n            return [];\r\n        }\r\n        const [a1, a2] = lengthsToSmallest(arr1, arr2);\r\n        return reduce$1((agg, item, ind) =>\r\n                aggregateArr(agg, [item, a2[ind]]),\r\n            [], a1);\r\n    };\nconst _zipN = (...lists) => {\r\n        const trimmedLists = apply(lengthsToSmallest, _filter(length, lists)),\r\n            lenOfTrimmed = length(trimmedLists);\r\n        if (!lenOfTrimmed) {\r\n            return [];\r\n        }\r\n        else if (lenOfTrimmed === 1) {\r\n            return sliceTo(length(trimmedLists[0]), trimmedLists[0]);\r\n        }\r\n        return reduce$1((agg, item, ind) =>\r\n                aggregateArr(agg, _map(xs => xs[ind], trimmedLists)),\r\n            [], trimmedLists[0]);\r\n    };\nconst _zip3 = (arr1, arr2, arr3) => _zipN(arr1, arr2, arr3);\nconst _zip4 = (arr1, arr2, arr3, arr4) => _zipN(arr1, arr2, arr3, arr4);\nconst _zip5 = (arr1, arr2, arr3, arr4, arr5) => _zipN(arr1, arr2, arr3, arr4, arr5);\nconst _zipWith = (op, xs1, xs2) => {\r\n        if (!length(xs1) || !length(xs2)) {\r\n            return [];\r\n        }\r\n        const [a1, a2] = lengthsToSmallest(xs1, xs2);\r\n        return reduce$1((agg, item, ind) =>\r\n                aggregateArr(agg, op(item, a2[ind])),\r\n            [], a1);\r\n    };\nconst _zipWithN = (op, ...lists) => {\r\n        const trimmedLists = apply(lengthsToSmallest, lists),\r\n            lenOfTrimmed = length(trimmedLists);\r\n        if (!lenOfTrimmed) {\r\n            return [];\r\n        }\r\n        else if (lenOfTrimmed === 1) {\r\n            return sliceTo(length(trimmedLists[0]), trimmedLists[0]);\r\n        }\r\n        return reduce$1((agg, item, ind) =>\r\n                aggregateArr(agg, apply(op, _map(xs => xs[ind], trimmedLists))),\r\n            [], trimmedLists[0]);\r\n    };\nconst _zipWith3 = (op, xs1, xs2, xs3) => _zipWithN(op, xs1, xs2, xs3);\nconst _zipWith4 = (op, xs1, xs2, xs3, xs4) => _zipWithN(op, xs1, xs2, xs3, xs4);\nconst _zipWith5 = (op, xs1, xs2, xs3, xs4, xs5) => _zipWithN(op, xs1, xs2, xs3, xs4, xs5);\nconst _unzip = arr =>\r\n        _foldl((agg, item) => {\r\n            agg[0].push(item[0]);\r\n            agg[1].push(item[1]);\r\n            return agg;\r\n        }, [[], []], arr);\nconst _unzipN = list => {\r\n        if (!length(list)) {\r\n            return [];\r\n        }\r\n        const lenItem0 = length(list[0]);\r\n        let zero = lenItem0 ?\r\n            _unfoldr(numLists => numLists-- ? [[], numLists] : undefined, lenItem0) :\r\n            [];\r\n        return _foldl((agg, item) => {\r\n            agg.forEach((outList, ind) => outList.push(item[ind]));\r\n            return agg;\r\n        }, zero, list);\r\n    };\nconst _any = (p, xs) => {\r\n        let ind = 0,\r\n            limit = length(xs);\r\n        if (!limit) {\r\n            return false;\r\n        }\r\n        for (; ind < limit; ind += 1) {\r\n            if (p(xs[ind])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\nconst _all = (p, xs) => {\r\n        const limit = length(xs);\r\n        let ind = 0;\r\n        if (limit === 0) {\r\n            return false;\r\n        }\r\n        for (; ind < limit; ind++) {\r\n            if (!p(xs[ind], ind, xs)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\nconst _and = xs => _all(isTruthy, xs);\nconst _or = xs => _any(isTruthy, xs);\nconst _not = xs => _all(isFalsy, xs);\nconst _sum = list => _foldl((agg, x) => agg + x, 0, list);\nconst _product = list => _foldl((agg, x) => agg * x, 1, list);\nconst _maximum = list => _last(_sortBy(genericAscOrdering, list));\nconst _minimum = list => _head(_sortBy(genericAscOrdering, list));\nconst _scanl = (fn, zero, xs) => {\r\n        if (!xs || !length(xs)) {\r\n            return [];\r\n        }\r\n        const limit = length(xs);\r\n        let ind = 0,\r\n            result = zero,\r\n            out = [];\r\n        while (ind < limit) {\r\n            result = fn(result, xs[ind], ind, xs);\r\n            out.push(result);\r\n            ind++;\r\n        }\r\n        return out;\r\n    };\nconst _scanl1 = (fn, xs) => {\r\n        if (!xs || !xs.length) { return []; }\r\n        return _scanl(fn, _head(xs), _tail(xs));\r\n    };\nconst _scanr = (fn, zero, xs) => {\r\n        if (!xs || !length(xs)) {\r\n            return [];\r\n        }\r\n        const limit = length(xs);\r\n        let ind = limit - 1,\r\n            result = xs[0],\r\n            out = [];\r\n        while (ind > -1) {\r\n            result = fn(result, xs[ind], ind, xs);\r\n            out.push(result);\r\n            ind--;\r\n        }\r\n        return out;\r\n    };\nconst _scanr1 = (fn, xs) => {\r\n        if (!xs || !xs.length) { return []; }\r\n        return _scanr(fn, _last(xs), _init(xs));\r\n    };\nconst _nub = list => _nubBy((a, b) => a === b, list);\nconst _remove = (x, list) => _removeBy((a, b) => a === b, x, list);\nconst _sort = xs => _sortBy(genericAscOrdering, xs);\nconst _sortOn = (valueFn, xs) =>\r\n\r\n        // Un-decorate\r\n        _map(decorated => decorated[1],\r\n\r\n            // Decorate and sort\r\n            _sortBy(\r\n                // Ordering\r\n                ([a0], [b0]) => genericAscOrdering(a0, b0),\r\n\r\n                // Decorate\r\n                _map(item => [valueFn(item), item], xs)\r\n            )\r\n        );\nconst _sortBy = (orderingFn, xs) => copy(xs).sort(orderingFn || genericAscOrdering);\nconst _insert = (x, xs) => {\r\n        if (!length(xs)) {\r\n            return [x];\r\n        }\r\n        const foundIndex = _findIndex(item => x <= item, xs);\r\n        return foundIndex === -1 ? [x] :\r\n            _concat(_intersperse([x], _splitAt(foundIndex, xs)));\r\n    };\nconst _insertBy = (orderingFn, x, xs) => {\r\n        const limit = length(xs);\r\n        if (!limit) {\r\n            return [x];\r\n        }\r\n        let ind = 0;\r\n        for (; ind < limit; ind += 1) {\r\n            if (orderingFn(x, xs[ind]) <= 0) {\r\n                const parts = _splitAt(ind, xs);\r\n                return _concat([parts[0], [x], parts[1]]);\r\n            }\r\n        }\r\n        return aggregateArr(copy(xs), x);\r\n    };\nconst _nubBy = (pred, list) => {\r\n        if (!length(list)) {\r\n            return [];\r\n        }\r\n        const limit = length(list);\r\n        let ind = 0,\r\n            currItem,\r\n            out = [],\r\n            anyOp = storedItem => pred(currItem, storedItem);\r\n        for (; ind < limit; ind += 1) {\r\n            currItem = list[ind];\r\n            if (_any(anyOp, out)) {\r\n                continue;\r\n            }\r\n            out.push(currItem);\r\n        }\r\n        return out;\r\n    };\nconst _removeBy = (pred, x, list) => { // @todo optimize this implementation\r\n        const foundIndex = _findIndex(item => pred(x, item), list),\r\n            parts = _splitAt(foundIndex > -1 ? foundIndex : 0, list); // @todo correct this implementation\r\n        return _append(parts[0], _tail(parts[1]));\r\n    };\nconst _removeFirstsBy = (pred, xs1, xs2) =>\r\n        _foldl((agg, item) => _removeBy(pred, item, agg), xs1, xs2);\nconst _unionBy = (pred, arr1, arr2) =>\r\n        _foldl((agg, b) => {\r\n                const alreadyAdded = _any(a => pred(a, b), agg);\r\n                return !alreadyAdded ? (agg.push(b), agg) : agg;\r\n            }, copy(arr1), arr2\r\n        );\nconst _union = (arr1, arr2) =>\r\n        _append(arr1,\r\n            _filter(elm => !includes(elm, arr1), arr2));\nconst _intersect = (arr1, arr2) =>\r\n        !arr1 || !arr2 || (!arr1 && !arr2) ? [] :\r\n            _filter(elm => includes(elm, arr2), arr1);\nconst _intersectBy = (pred, list1, list2) =>\r\n        _foldl((agg, a) =>\r\n                _any(b => pred(a, b), list2) ? (agg.push(a), agg) : agg\r\n            , [], list1);\nconst _difference = (array1, array2) => { // augment this with max length and min length ordering on op\r\n        if (array1 && !array2) {\r\n            return copy(array1);\r\n        }\r\n        else if (!array1 && array2 || (!array1 && !array2)) {\r\n            return [];\r\n        }\r\n        return reduce$1((agg, elm) =>\r\n                !includes(elm, array2) ? (agg.push(elm), agg) : agg\r\n            , [], array1);\r\n    };\nconst _complement = (arr0, ...arrays) =>\r\n        reduce$1((agg, arr) => _append(agg, _difference(arr, arr0)), [], arrays);\n\nconst objUnion$1 = (obj1, obj2) => assignDeep$1(obj1, obj2);\nconst objIntersect$1 = (obj1, obj2) => _foldl((agg, key) => {\r\n        if (hasOwnProperty$1(key, obj2)) {\r\n            agg[key] = obj2[key];\r\n        }\r\n        return agg;\r\n    }, {}, keys(obj1));\nconst objDifference$1 = (obj1, obj2) => _foldl((agg, key) => {\r\n        if (!hasOwnProperty$1(key, obj2)) {\r\n            agg[key] = obj1[key];\r\n        }\r\n        return agg;\r\n    }, {}, keys(obj1));\nconst objComplement$1 = (obj0, ...objs) => _foldl((agg, obj) =>\r\n        assignDeep$1(agg, objDifference$1(obj, obj0)), {}, objs);\n\n/**\r\n * @module objectOps\r\n */\r\nconst prop$$1 = curry(prop$1);\nconst instanceOf$$1 = curry(instanceOf$1);\nconst hasOwnProperty$$1 = curry(hasOwnProperty$1);\nconst assign$$1 = curry2(assign$1);\nconst assignDeep$$1 = curry2(assignDeep$1);\nconst objUnion$$1 = curry(objUnion$1);\nconst objIntersect$$1 = curry(objIntersect$1);\nconst objDifference$$1 = curry(objDifference$1);\nconst objComplement$$1 = curry2(objComplement$1);\nconst isType$$1 = curry(isType$1);\r\n\r\n    /**\r\n     * Returns whether a value is a function or not.\r\n     * @function module:objectOps.isFunction\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if `value` is an es2015 `class`.\r\n     * @function module:objectOps.isClass\r\n     * @param x {*}\r\n     * @returns {boolean}\r\n     */\r\n\r\n    /**\r\n     * Returns a boolean depicting whether a value is callable or not.\r\n     * @function module:objectOps.isCallable\r\n     * @tentative\r\n     * @private\r\n     * @param x {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if value is an array.\r\n     * @function module:objectOps.isArray\r\n     * @param value {*}\r\n     * @returns {boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks whether value is an object or not.\r\n     * @function module:objectOps.isObject\r\n     * @param value\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if value is a boolean.\r\n     * @function module:objectOps.isBoolean\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if value is a valid number (also checks if isNaN so that you don't have to).\r\n     * @function module:objectOps.isNumber\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks whether value is a string or not.\r\n     * @function module:objectOps.isString\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks whether value is of `Map` or not.\r\n     * @function module:objectOps.isMap\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks whether value is of `Set` or not.\r\n     * @function module:objectOps.isSet\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks whether value is of `WeakMap` or not.\r\n     * @function module:objectOps.isWeakMap\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks whether value is of `WeakSet` or not.\r\n     * @function module:objectOps.isWeakSet\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if value is undefined.\r\n     * @function module:objectOps.isUndefined\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if value is null.\r\n     * @function module:objectOps.isNull\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if value is a `Symbol`.\r\n     * @function module:objectOps.isSymbol\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * @tentative\r\n     * @private\r\n     */\r\n\r\n    /**\r\n     * Checks if given `x` is one of the four\r\n     * \"usable\" immutable JS primitives; I.e.,\r\n     *  One of [String, Boolean, Number, Symbol]\r\n     * @function module:objectOps.isUsableImmutablePrimitive\r\n     * @param x {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if !length.\r\n     * @function module:objectOps.isEmptyList\r\n     * @param x {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if object has own properties/enumerable-props or not.\r\n     * @function module:objectOps.isEmptyObject\r\n     * @param obj {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if collection is empty or not (Map, WeakMap, WeakSet, Set etc.).\r\n     * @function module:objectOps.isEmptyCollection\r\n     * @param x {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks to see if passed in argument is empty.\r\n     * @function module:objectOps.isEmpty\r\n     * @param value {*} - Value to check.\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Returns whether passed in values is defined and not null.\r\n     * @function module:objectOps.isset\r\n     * @param x {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Returns the constructor/class/type name of a value.\r\n     * @note Returns 'NaN' if value is of type `Number` and value is `isNaN`.\r\n     * @note Returns 'Undefined' if value is `undefined`\r\n     * @note Returns 'Null' if value is `null`\r\n     * For values that have no concrete constructors and/or casters\r\n     * (null, NaN, and undefined) we returned normalized names for them ('Null', 'NaN', 'Number')\r\n     * @function module:objectOps.typeOf\r\n     * @param value {*}\r\n     * @returns {string} - Constructor's name or derived name (in the case of `null`, `undefined`, or `NaN` (whose\r\n     *  normalized names are 'Null', 'Undefined', 'NaN' respectively).\r\n     */\r\n\r\n    /**\r\n     * Creates a value `of` given type;  Checks for one of the following construction strategies (in order listed):\r\n     * - If exists `(value).constructor.of` uses this.\r\n     * - If value is of one String, Boolean, Symbol, or Number types calls it's constructor as a function (in cast form;  E.g., `constructor(...args)` )\r\n     * - Else if constructor is a function, thus far, then calls constructor using the `new` keyword (with any passed in args).\r\n     * @function module:objectOps.of\r\n     * @param x {*} - Value to derive returned value's type from.\r\n     * @param [args] {...*} - Any args to pass in to matched construction strategy.\r\n     * @returns {*|undefined} - New value of given value's type else `undefined`.\r\n     */\r\n\r\n    /**\r\n     * @function module:objectOps.length\r\n     * @param x {*}\r\n     * @returns {Number}\r\n     * @throws {Error} - Throws an error if value doesn't have a `length` property (\r\n     *  `null`, `undefined`, {Boolean}, Symbol, et. al.).\r\n     */\r\n\r\n    /**\r\n     * Gets own enumerable keys of passed in object (same as `Object.keys`).\r\n     * @function module:objectOps.keys\r\n     * @param obj {*}\r\n     * @returns {Array<String>}\r\n     */\n\nconst until$1 = (predicate, operation, typeInstance) => {\r\n        let result = typeInstance;\r\n        while (!predicate(result)) {\r\n            result = operation(result);\r\n        }\r\n        return result;\r\n    };\n\nconst flipN$1 = fn => (...args) => apply(fn, reverse(args));\nconst flip3$1 = fn => (a, b, c) => call(fn, c, b, a);\nconst flip4$1 = fn => (a, b, c, d) => call(fn, d, c, b, a);\nconst flip5$1 = fn => (a, b, c, d, e) => call(fn, e, d, c, b, a);\nconst flip$1 = fn => (b, a) => call(fn, a, b);\n\n/**\r\n * @memberOf _functionOps\r\n * @author elydelacruz\r\n * @created 12/6/2016.\r\n * @description Curry implementation with place holder concept (`__`).\r\n * @todo Make code here more minimal (reuse small parts here).\r\n */\r\n\r\n/**\r\n * PlaceHolder (__) constructor.\r\n * @constructor PlaceHolder\r\n * @private\r\n */\r\nconst PlaceHolder = function PlaceHolder() {};\nconst notFnErrPrefix$1 = '`fn` in `curry_(fn, ...args)`';\nconst placeHolderInstance = new PlaceHolder();\r\n\r\n/**\r\n * Checks to see if value is a `PlaceHolder`.\r\n * @param instance {*}\r\n * @returns {boolean}\r\n * @private\r\n */\r\nfunction isPlaceHolder (instance) {\r\n    return instance instanceof PlaceHolder;\r\n}\r\n\r\n/**\r\n * Replaces `placeholder` values in `_listOps`.\r\n * @function replacePlaceHolder\r\n * @private\r\n * @param array {Array} - Array to replace placeholders in.\r\n * @param args {Array} - Args from to choose from to replace placeholders.\r\n * @returns {Array|*} - Returns passed in `_listOps` with placeholders replaced by values in `args`.\r\n */\r\nfunction replacePlaceHolders (array, args) {\r\n    let out = map(element => {\r\n            if (!isPlaceHolder(element)) { return element; }\r\n            else if (length(args)) { return args.shift(); }\r\n            return element;\r\n        }, array);\r\n    return length(args) ? concat(out, args) : out;\r\n}\r\n\r\n/**\r\n * Curries passed in functionOps up to given arguments length (can enforce arity via placeholder values (`__`)).\r\n * @function module:_functionOps.curry_\r\n * @param fn {Function}\r\n * @param argsToCurry {...*}\r\n * @returns {Function}\r\n */\r\nfunction curry_ (fn, ...argsToCurry) {\r\n    return curryN_(fnOrError(notFnErrPrefix$1, fn).length, fn, ...argsToCurry);\r\n}\r\n\r\n/**\r\n * Curries a _functionOps up to given arity also enforces arity via placeholder values (`__`).\r\n * @function module:_functionOps.curryN_\r\n * @param executeArity {Number}\r\n * @param fn {Function}\r\n * @param curriedArgs {...*} - Allows `Placeholder` (`__`) values.\r\n * @returns {Function} - Passed in _functionOps wrapped in a _functionOps for currying.\r\n */\r\nfunction curryN_ (executeArity, fn, ...curriedArgs) {\r\n    return (...args) => {\r\n        let concatedArgs = replacePlaceHolders(curriedArgs, args),\r\n            placeHolders = filter(isPlaceHolder, concatedArgs),\r\n            canBeCalled = (length(concatedArgs) - length(placeHolders) >= executeArity) || !executeArity;\r\n        return !canBeCalled ?\r\n            apply(curryN_, concat([executeArity, fnOrError(notFnErrPrefix$1, fn)], concatedArgs)) :\r\n            apply(fnOrError(notFnErrPrefix$1, fn), concatedArgs);\r\n    };\r\n}\r\n\r\n/**\r\n * Place holder object (frozen) used by curry.\r\n * @memberOf _functionOps\r\n * @type {PlaceHolder}\r\n */\r\nlet __ = Object.freeze ? Object.freeze(placeHolderInstance) : placeHolderInstance;\nlet curry2_ = fn => curryN_(2, fn);\nlet curry3_ = fn => curryN_(3, fn);\nlet curry4_ = fn => curryN_(4, fn);\nlet curry5_ = fn => curryN_(5, fn);\n\n/**\r\n * @memberOf _functionOps\r\n */\r\n\r\n/**\r\n * Returns passed in parameter.\r\n * @haskellType `id :: a -> a`\r\n * @function module:_functionOps.id\r\n * @param x {*}\r\n * @returns {*}\r\n */\r\nconst id = x => x;\n\n/**\r\n * Composes all functions passed in from right to left passing each functions return value to\r\n * the functionOps on the left of itself.\r\n * @function module:_functionOps.compose\r\n * @type {Function}\r\n * @param args {...{Function}}\r\n * @returns {Function}\r\n */\r\nconst compose = (...args) =>\r\n        arg0 => reduceRight((value, fn) => fn(value), arg0, args);\n\n/**\r\n * Function operations: `\r\n * @module functionOps\r\n */\r\n\r\nconst apply$1 = curry(apply);\nconst call$1 = curry2(call);\nconst until$$1 = curry(until$1);\nconst flipN$$1 = fn => curry3((...args) => apply$1(fn, reverse(args)));\nconst flip$$1 = fn => curry(flip$1(fn));\nconst flip3$$1 = fn => curry(flip3$1(fn));\nconst flip4$$1 = fn => curry(flip4$1(fn));\nconst flip5$$1 = fn => curry(flip5$1(fn));\r\n\r\n    /**\r\n     * Curries a function based on it's defined arity (argument's arrayOps expected length).\r\n     * @function module:functionOps.curry\r\n     * @param fn {Function}\r\n     * @param argsToCurry {...*}\r\n     * @returns {Function}\r\n     * @curried\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to a given arity.\r\n     * @function module:functionOps.curryN\r\n     * @param executeArity {Number}\r\n     * @param fn {Function}\r\n     * @param curriedArgs {...*}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 2 (won't call function until 2 or more args).\r\n     * @function module:functionOps.curry2\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 3 (won't call function until 3 or more args).\r\n     * @function module:functionOps.curry3\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 4 (won't call function until 4 or more args).\r\n     * @function module:functionOps.curry4\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 5 (won't call function until 5 or more args).\r\n     * @function module:functionOps.curry5\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries passed in function up to given arguments length (can enforce arity via placeholder values (`__`)).\r\n     * @function module:functionOps.curry_\r\n     * @param fn {Function}\r\n     * @param argsToCurry {...*}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to given arity also enforces arity via placeholder values (`__`).\r\n     * @function module:functionOps.curryN_\r\n     * @param executeArity {Number}\r\n     * @param fn {Function}\r\n     * @param curriedArgs {...*} - Allows `Placeholder` (`__`) values.\r\n     * @returns {Function} - Passed in function wrapped in a function for currying.\r\n     */\r\n\r\n    /**\r\n     * Place holder object (frozen) used by curry.\r\n     * @memberOf functionOps\r\n     * @type {PlaceHolder}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 2 (takes into account placeholders `__` (arity enforcers))\r\n     * (won't call function until 2 or more args (not counting placeholder (`__`) value).\r\n     * @function module:functionOps.curry2_\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 3 (takes into account placeholders `__` (arity enforcers))\r\n     * (won't call function until 3 or more args (not counting placeholder (`__`) value).\r\n     * @function module:functionOps.curry3_\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 4 (takes into account placeholders `__` (arity enforcers))\r\n     * (won't call function until 4 or more args (not counting placeholder (`__`) value).\r\n     * @function module:functionOps.curry4_\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 5  (takes into account placeholders `__` (arity enforcers))\r\n     * (won't call function until 5 or more args (not counting placeholder (`__`) value).\r\n     * @function module:functionOps.curry5_\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Takes a function that takes two parameters and returns a negated version of given\r\n     * function.\r\n     * @function module:functionOps.negateF\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Takes a function that takes three parameters and returns a\r\n     * negated version of given function.\r\n     * @function module:functionOps.negateF3\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Takes a function that takes four parameters and returns a\r\n     * negated version of given function.\r\n     * @function module:functionOps.negateF4\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Takes a function that takes four parameters and returns a\r\n     * negated version of given function.\r\n     * @function module:functionOps.negateF5\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Negates a javascript-'generic' predicate; `Function<element, index, list>`.\r\n     * @function module:functionOps.negateP\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Returns a new function which is the dual of `fn` (or the negated version of `fn`).\r\n     * @function module:functionOps.negateFMany\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Returns passed in parameter.\r\n     * @haskellType `id :: a -> a`\r\n     * @function module:functionOps.id\r\n     * @param x {*}\r\n     * @returns {*}\r\n     */\r\n\r\n    /**\r\n     * Composes all functions passed in from right to left passing each functions return value to\r\n     * the function on the left of itself.\r\n     * @function module:functionOps.compose\r\n     * @param args {...Function}\r\n     * @returns {Function}\r\n     */\n\n/**\r\n * @module _functionOps\r\n * @private\r\n */\n\n/**\r\n * Created by elydelacruz on 7/22/2017.\r\n * @module utils\r\n * @private\r\n */\r\n\r\nconst fPureTakesOne_ = name => curry((arg, f) => f[name](arg));\nconst fPureTakes2_ = name => curry((arg1, arg2, f) => f[name](arg1, arg2));\nconst fPureTakesOneOrMore_ = name => curry2((f, ...args) => f[name](...args));\n\n/**\r\n * Created by elyde on 7/20/2017.\r\n * Curried functional versions of common array methods (`filter`, `map`, etc.).\r\n * @module jsPlatform_array\r\n * @private\r\n */\r\n\r\nconst push$1 = fPureTakesOneOrMore_('push');\n\n/**\r\n * List operations that overlap (apart from globally overlapping props and functions like `length`)\r\n * on both strings and arrays.\r\n * @module jsPlatform_list\r\n * @private\r\n */\r\n\r\nconst slice$1 = curry(slice);\nconst includes$1 = curry(includes);\nconst indexOf$1 = curry(indexOf);\nconst lastIndexOf$1 = curry(lastIndexOf);\n\n/**\r\n * Created by elydelacruz on 9/6/2017.\r\n * @module jsPlatform_string\r\n * @private\r\n */\r\n\r\n/**\r\n * Functional version of `String.prototype.split`.\r\n * @curried\r\n * @function module:jsPlatform_string.split\r\n * @param separator {String|RegExp}\r\n * @param str {String}\r\n * @returns {Array}\r\n */\r\nconst split$1 = curry(split);\n\n/**\n * @module jsPlatform\n * @private\n */\n\n/**\r\n * List operators.\r\n * @module listOps\r\n * @todo decide whether to throw errors where functions cannot function without a specific type or to\r\n *  return undefined (and also determine which cases are ok for just returning undefined).\r\n */\r\nconst append = curry(_append);\nconst appendMany = curry2(_appendMany);\nconst concatMap = curry2(_concatMap);\nconst map$1 = curry(_map);\nconst intersperse = curry(_intersperse);\nconst intercalate = curry(_intercalate);\nconst foldl = curry(_foldl);\nconst foldr = curry(_foldr);\nconst foldl1 = curry(_foldl1);\nconst foldr1 = curry(_foldr1);\nconst mapAccumL = curry(_mapAccumL);\nconst mapAccumR = curry(_mapAccumR);\nconst iterate = curry(_iterate);\nconst repeat = curry(_repeat);\nconst replicate = curry(_replicate);\nconst cycle = curry(_cycle);\nconst unfoldr = curry(_unfoldr);\nconst findIndex = curry(_findIndex);\nconst findIndices = curry(_findIndices);\nconst elemIndex = curry(_elemIndex);\nconst elemIndices = curry(_elemIndices);\nconst take = curry(_take);\nconst drop = curry(_drop);\nconst splitAt = curry(_splitAt);\nconst takeWhile = curry(_takeWhile);\nconst dropWhile = curry(_dropWhile);\nconst dropWhileEnd = curry(_dropWhileEnd);\nconst span = curry(_span);\nconst breakOnList = curry(_breakOnList);\nconst at = curry(_at);\nconst find = curry(_find);\nconst filter$1 = curry(_filter);\nconst partition = curry(_partition);\nconst elem = curry(_elem);\nconst notElem = curry2(_notElem);\nconst lookup = curry(_lookup);\nconst isPrefixOf = curry(_isPrefixOf);\nconst isSuffixOf = curry(_isSuffixOf);\nconst isInfixOf = curry(_isInfixOf);\nconst isSubsequenceOf = curry(_isSubsequenceOf);\nconst groupBy = curry(_groupBy);\nconst stripPrefix = curry(_stripPrefix);\nconst zip = curry(_zip);\nconst zip3 = curry(_zip3);\nconst zip4 = curry(_zip4);\nconst zip5 = curry(_zip5);\nconst zipWith = curry(_zipWith);\nconst zipWithN = curry(_zipWithN);\nconst zipWith3 = curry(_zipWith3);\nconst zipWith4 = curry(_zipWith4);\nconst zipWith5 = curry(_zipWith5);\nconst any = curry(_any);\nconst all = curry(_all);\nconst scanl = curry(_scanl);\nconst scanl1 = curry(_scanl1);\nconst scanr = curry(_scanr);\nconst scanr1 = curry(_scanr1);\nconst remove = curry(_remove);\nconst sortOn = curry(_sortOn);\nconst sortBy = curry(_sortBy);\nconst insert = curry(_insert);\nconst insertBy = curry(_insertBy);\nconst nubBy = curry(_nubBy);\nconst removeBy = curry(_removeBy);\nconst removeFirstsBy = curry(_removeFirstsBy);\nconst unionBy = curry(_unionBy);\nconst union = curry(_union);\nconst intersect = curry(_intersect);\nconst intersectBy = curry(_intersectBy);\nconst difference = curry(_difference);\nconst complement = curry2(_complement);\n\n/**\r\n * Contains functions for operating strings.\r\n * @author elyde\r\n * @created 7/9/2017.\r\n * @module stringOps\r\n */\r\nconst lines = split$1(/[\\n\\r]/gm);\nconst words = split$1(/[\\s\\t]/gm);\nconst unwords = intercalate(' ');\nconst unlines = intercalate('\\n');\nconst lcaseFirst = xs => xs[0].toLowerCase() + xs.substring(1);\nconst ucaseFirst = xs => xs[0].toUpperCase() + xs.substring(1);\nconst camelCase = (xs, pattern) => _map(ucaseFirst, _splitAt(pattern || /[^a-z\\d]/i, xs));\n\n/**\r\n * Created by elyde on 12/6/2016.\r\n * @file fjl.js\r\n * @goal to include everything from haskell's Prelude where it makes sense in order to create\r\n *  a subset of functions which can make the javascript developer more efficient and make his/her\r\n *  code more concise (and functional).\r\n * @description Includes operations from haskell's Prelude.\r\n * @motivation preludejs, lodash/fp, RamdaJs, Haskell.\r\n * @see http://hackage.haskell.org/package/base-4.10.0.0/docs/Prelude.html\r\n * @see http://hackage.haskell.org/package/base-4.10.0.0/docs/Data-List.html\r\n * @module fjl\r\n */\n\nexport { instanceOf$1 as _instanceOf, isType$1 as _isType, hasOwnProperty$1 as _hasOwnProperty, assign$1 as _assign, prop$1 as _prop, assignDeep$1 as _assignDeep, objUnion$1 as _objUnion, objComplement$1 as _objComplement, objIntersect$1 as _objIntersect, objDifference$1 as _objDifference, prop$$1 as prop, instanceOf$$1 as instanceOf, hasOwnProperty$$1 as hasOwnProperty, assign$$1 as assign, assignDeep$$1 as assignDeep, objUnion$$1 as objUnion, objIntersect$$1 as objIntersect, objDifference$$1 as objDifference, objComplement$$1 as objComplement, isType$$1 as isType, length, keys, isFunction, isClass, isCallable, isArray, isObject, isBoolean, isNumber, isString, isMap, isSet, isWeakMap, isWeakSet, isUndefined, isNull, isSymbol, isUsableImmutablePrimitive, isEmptyList, isEmptyObject, isEmptyCollection, isEmpty, isset, typeOf, of, isTruthy, isFalsy, alwaysTrue, alwaysFalse, apply as _apply, call as _call, until$1 as _until, flip$1 as _flip, flip3$1 as _flip3, flip4$1 as _flip4, flip5$1 as _flip5, flipN$1 as _flipN, apply$1 as apply, call$1 as call, until$$1 as until, flipN$$1 as flipN, flip$$1 as flip, flip3$$1 as flip3, flip4$$1 as flip4, flip5$$1 as flip5, curry, curryN, curry2, curry3, curry4, curry5, curry_, curryN_, __, curry2_, curry3_, curry4_, curry5_, negateF, negateF3, negateF4, negateF5, negateP, negateFMany, id, compose, _and as and, _or as or, _not as not, _zipN as zipN, _unzip as unzip, _unzipN as unzipN, _concat as concat, _reverse as reverse, _transpose as transpose, _subsequences as subsequences, _permutations as permutations, _group as group, _tails as tails, _sum as sum, _product as product, _maximum as maximum, _minimum as minimum, _sort as sort, _nub as nub, _head as head, _last as last, _tail as tail, _init as init, _inits as inits, _uncons as uncons, _unconsr as unconsr, _subsequences1 as subsequences1, _swapped as swapped, append, appendMany, concatMap, map$1 as map, intersperse, intercalate, foldl, foldr, foldl1, foldr1, mapAccumL, mapAccumR, iterate, repeat, replicate, cycle, unfoldr, findIndex, findIndices, elemIndex, elemIndices, take, drop, splitAt, takeWhile, dropWhile, dropWhileEnd, span, breakOnList, at, find, filter$1 as filter, partition, elem, notElem, lookup, isPrefixOf, isSuffixOf, isInfixOf, isSubsequenceOf, groupBy, stripPrefix, zip, zip3, zip4, zip5, zipWith, zipWithN, zipWith3, zipWith4, zipWith5, any, all, scanl, scanl1, scanr, scanr1, remove, sortOn, sortBy, insert, insertBy, nubBy, removeBy, removeFirstsBy, unionBy, union, intersect, intersectBy, difference, complement, slice$1 as slice, includes$1 as includes, indexOf$1 as indexOf, lastIndexOf$1 as lastIndexOf, split$1 as split, push$1 as push, _map, _append, _appendMany, _head, _last, _tail, _init, _uncons, _unconsr, _concat, _concatMap, _reverse, _intersperse, _intercalate, _transpose, _subsequences, _subsequences1, _swapped, _permutations, _foldl, _foldr, _foldl1, _foldr1, _mapAccumL, _mapAccumR, _iterate, _repeat, _replicate, _cycle, _unfoldr, _findIndex, _findIndices, _elemIndex, _elemIndices, _take, _drop, _splitAt, _takeWhile, _dropWhile, _dropWhileEnd, _span, _breakOnList, _at, _find, _filter, _partition, _elem, _notElem, _lookup, _isPrefixOf, _isSuffixOf, _isInfixOf, _isSubsequenceOf, _group, _groupBy, _inits, _tails, _stripPrefix, _zip, _zipN, _zip3, _zip4, _zip5, _zipWith, _zipWithN, _zipWith3, _zipWith4, _zipWith5, _unzip, _unzipN, _any, _all, _and, _or, _not, _sum, _product, _maximum, _minimum, _scanl, _scanl1, _scanr, _scanr1, _nub, _remove, _sort, _sortOn, _sortBy, _insert, _insertBy, _nubBy, _removeBy, _removeFirstsBy, _unionBy, _union, _intersect, _intersectBy, _difference, _complement, lines, words, unwords, unlines, lcaseFirst, ucaseFirst, camelCase, fPureTakesOne_, fPureTakes2_, fPureTakesOneOrMore_, fPureTakesOne, fPureTakes2, fPureTakes3, fPureTakes4, fPureTakes5, fPureTakesOneOrMore, fnOrError, sliceFrom, sliceTo, copy, sliceCopy, genericAscOrdering, lengths, lengthsToSmallest, reduceUntil, reduceRightUntil, reduce$1 as reduce, reduceRight$1 as reduceRight, lastIndex, findIndexWhere, findIndexWhereRight, findIndicesWhere, findWhere, aggregateStr, aggregateArr, aggregateObj, aggregatorByType };\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\nexport default class Functor {\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n    valueOf() {\r\n        return this.value;\r\n    }\r\n    map(fn) {\r\n        return new this.constructor(fn(this.valueOf()));\r\n    }\r\n    fmap (fn) {\r\n        return this.map(fn);\r\n    }\r\n}\r\n","import {isFunction} from 'fjl';\r\nimport Functor from './functor/Functor';\r\n\r\nexport const\r\n    toFunction = x => isFunction(x) ? x : () => x,\r\n    alwaysFunctor = x => !x.map ? new Functor(x) : x\r\n;\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\n\r\nimport {toFunction} from '../utils';\r\nimport Functor from './Functor';\r\n\r\nexport default class Apply extends Functor {\r\n    ap (x) {\r\n        return x.map(toFunction(this.valueOf()));\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\nimport Apply from './Apply';\r\n\r\nexport default class Applicative extends Apply {\r\n    static of (value) {\r\n        return new Applicative(value);\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n * Basic `Monad` class.  Used to extend from to create `Maybe` and `Either` module/classes.\r\n * @module Monad\r\n * @see `Maybe` reference: http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Maybe.html\r\n * @see `Either` reference: http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Either.html\r\n */\r\n\r\nimport {apply, isset, curry, isFunction, instanceOf} from 'fjl';\r\nimport Applicative from '../functor/Applicative';\r\n\r\nexport const\r\n    isMonad = value => value instanceof Monad,\r\n    valueOf = x => x.valueOf(),\r\n    join = x => x.join(),\r\n    fmap = curry((fn, x) => x.map(fn)),\r\n    ap = curry((applicative, functor) => applicative.ap(functor)),\r\n    flatMap = curry((fn, monad) => monad.flatMap(fn)),\r\n\r\n    getMonadUnWrapper = Type => {\r\n        const isTypeToUnWrap = instanceOf(Type);\r\n        return function unWrapMonadByType (monad) {\r\n            return isTypeToUnWrap(monad) ? function trampolineCall () {\r\n                return unWrapMonadByType(monad.valueOf());\r\n            } : monad;\r\n        };\r\n    },\r\n\r\n    trampoline = fn => {\r\n        return (...args) => {\r\n            let result = apply(fn, args);\r\n            while (isset(result) &&\r\n                result.name === 'trampolineCall' &&\r\n                isFunction(result)\r\n            ) {\r\n                result = result();\r\n            }\r\n            return result;\r\n        };\r\n    };\r\n\r\nexport default class Monad extends Applicative {\r\n    static unWrapMonadByType (Type, monad) {\r\n        if (!isset(monad)) { return monad; }\r\n        const unwrap = trampoline(getMonadUnWrapper(Type));\r\n        return unwrap(monad);\r\n    }\r\n    join () {\r\n        return Monad.unWrapMonadByType(this.constructor, this);\r\n    }\r\n    flatMap (fn) {\r\n        const out = Monad.unWrapMonadByType(this.constructor, fn(this.join()));\r\n        return this.constructor.of(out);\r\n    }\r\n    chain (fn) {\r\n        return this.flatMap(fn);\r\n    }\r\n    static of (x) { return new Monad(x); }\r\n    static isMonad (x) { return isMonad(x); }\r\n}\r\n","/**\r\n * Created by elydelacruz on 2/19/2017.\r\n */\r\n\r\nimport Monad from '../monad/Monad';\r\nimport {toFunction} from '../utils';\r\nimport {compose} from 'fjl';\r\n// import {defineEnumProps} from 'fjl-mutable';\r\n\r\nexport default class IO extends Monad {\r\n    static unWrapIO (io) {\r\n        if (!IO.isIO(io)) { return io; }\r\n        return Monad.unWrapMonadByType(IO, io);\r\n    }\r\n    static of(fn) {\r\n        return new IO(fn);\r\n    }\r\n    static isIO (x) {\r\n        return x instanceof IO;\r\n    }\r\n    static do (io, ...args) {\r\n        const instance = !IO.isIO(io) ? new IO(io) : io;\r\n        return compose(\r\n            IO.of,\r\n            IO.unWrapIO\r\n        )(\r\n            toFunction(instance.join())(...args)\r\n        );\r\n    }\r\n\r\n    constructor(fn) {\r\n        super(toFunction(fn));\r\n        // Enforce `value` field validation\r\n        // defineEnumProps([[Function, 'value', this.value]], this);\r\n    }\r\n\r\n    flatMap (fn) {\r\n        return compose(\r\n            this.constructor.of,\r\n            IO.unWrapIO, fn,\r\n            IO.unWrapIO\r\n        )(\r\n            toFunction(this.join())()\r\n        );\r\n    }\r\n\r\n    map (fn) {\r\n        return compose(\r\n            this.constructor.of,\r\n            fn\r\n        )(\r\n            toFunction(this.valueOf())()\r\n        );\r\n    }\r\n}\r\n","import {curry, isset, map, filter, length, id} from 'fjl';\r\n\r\nimport IO from '../../io/IO';\r\n\r\nclass Pos {\r\n    constructor(x, y) {\r\n        this.x = isset(x) ? x : 0;\r\n        this.y = isset(y) ? y : 0;\r\n    }\r\n}\r\n\r\nclass Pointer {\r\n    constructor (board, pos) {\r\n        this.board = board || [];\r\n        this.pos = pos || new Pos();\r\n    }\r\n    updatePos (pos) {\r\n        return new Pointer(this.board, pos);\r\n    }\r\n    extract () {\r\n        return this.board[this.pos.x][this.pos.y];\r\n    }\r\n    extend (f) {\r\n        let board = [], x, y;\r\n        for (x = 0; x < this.board.length; x++) {\r\n            board[x] = [];\r\n            for (y = 0; y < this.board[x].length; y++) {\r\n                board[x][y] = f(new Pointer(this.board, new Pos(x, y)));\r\n            }\r\n        }\r\n        return new Pointer(board, this.pos);\r\n    }\r\n}\r\n\r\nconst\r\n    SIZE = 100,\r\n    SCALE = 8,\r\n\r\n    posInBounds = pos =>\r\n        pos.x >= 0 && pos.y >= 0 &&\r\n        pos.x < SIZE && pos.y < SIZE,\r\n\r\n    pointerNeighbours = pointer => {\r\n        let offsets = [\r\n                new Pos(-1, -1),\r\n                new Pos(-1, 0),\r\n                new Pos(-1, 1),\r\n                new Pos(0, -1),\r\n                new Pos(0, 1),\r\n                new Pos(1, -1),\r\n                new Pos(1, 0),\r\n                new Pos(1, 1)\r\n            ],\r\n            positions = filter(\r\n                posInBounds,\r\n                map(offset => new Pos(\r\n                        pointer.pos.x + offset.x,\r\n                        pointer.pos.y + offset.y\r\n                    ),\r\n                    offsets\r\n                )\r\n            );\r\n        return map(pos => pointer.updatePos(pos).extract(), positions);\r\n    },\r\n\r\n    liveNeighbours = pointer =>\r\n        length(filter(id, pointerNeighbours(pointer))),\r\n\r\n    rules = pointer => {\r\n        let c = pointer.extract(),\r\n            n = liveNeighbours(pointer);\r\n\r\n        return c && (n < 2 || n > 3) ?\r\n            false : (c && n === 2) || n === 3 || c;\r\n    },\r\n\r\n    step = board =>\r\n        new Pointer(board, new Pos(0, 0)).extend(rules).board,\r\n\r\n    generateBoard = () =>\r\n        IO.do(IO.of(() => {\r\n            let board = [], x, y;\r\n            for (x = 0; x < SIZE; x++) {\r\n                board[x] = [];\r\n                for (y = 0; y < SIZE; y++) {\r\n                    board[x][y] = Math.random() > 0.5;\r\n                }\r\n            }\r\n            return board;\r\n        })),\r\n\r\n    drawBoard = (canvas, board) =>\r\n        IO.do(IO.of(() => {\r\n            let x, y;\r\n            for (x = 0; x < board.length; x++) {\r\n                for (y = 0; y < board[x].length; y++) {\r\n                    if (board[x][y]) {\r\n                        canvas.fillRect(x, y, 1, 1);\r\n                    } else {\r\n                        canvas.clearRect(x, y, 1, 1);\r\n                    }\r\n                }\r\n            }\r\n        })),\r\n\r\n    loop = (canvas, board) =>\r\n        drawBoard(canvas, board)\r\n            .flatMap(() => requestAnimationFrame(() => loop(canvas, step(board)))),\r\n\r\n    main = () => {\r\n        const\r\n            element = document.getElementById('game-of-comonads'),\r\n            canvas = element.getContext('2d');\r\n\r\n        return IO.do(\r\n            IO.of(() => {\r\n                element.width = SIZE * SCALE;\r\n                element.height = SIZE * SCALE;\r\n                canvas.scale(SCALE, SCALE);\r\n            })\r\n            .flatMap(generateBoard)\r\n            .flatMap(board => loop(canvas, board))\r\n        );\r\n    };\r\n\r\nwindow.addEventListener('load', main);\r\n"],"names":["Functor","value","fn","constructor","valueOf","map","toFunction","isFunction","x","Apply","Applicative","isMonad","Monad","fmap","curry","ap","applicative","functor","flatMap","monad","getMonadUnWrapper","isTypeToUnWrap","instanceOf","Type","unWrapMonadByType","trampolineCall","trampoline","args","result","apply","isset","name","out","join","of","unwrap","IO","io","isIO","instance","compose","unWrapIO","Pos","y","Pointer","board","pos","f","length","SIZE","SCALE","posInBounds","pointerNeighbours","offsets","positions","filter","pointer","offset","updatePos","extract","liveNeighbours","id","rules","c","n","step","extend","generateBoard","do","Math","random","drawBoard","canvas","fillRect","clearRect","loop","requestAnimationFrame","main","element","document","getElementById","getContext","width","height","scale","window","addEventListener"],"mappings":"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"}