{"version":3,"file":"index.js","sources":["../../../node_modules/fjl/dist/es6-module/fjl.js","../../../src/functor/Functor.js","../../../src/utils.js","../../../src/functor/Apply.js","../../../src/functor/Applicative.js","../../../src/monad/Monad.js","../../../src/io/IO.js","../../../src/examples/gameoflife/index.js"],"sourcesContent":["/**\r\n * Created by elyde on 12/18/2016.\r\n * @memberOf _objectOps\r\n */\r\nconst _Number = Number.name;\nconst _NaN = 'NaN';\nconst _Null = 'Null';\nconst _Undefined = 'Undefined';\r\n\r\n/**\r\n * Returns the constructor/class/type name of a value.\r\n * @note Returns 'NaN' if value is of type `Number` and value is `isNaN`.\r\n * @note Returns 'Undefined' if value is `undefined`\r\n * @note Returns 'Null' if value is `null`\r\n * For values that have no concrete constructors and/or casters\r\n * (null, NaN, and undefined) we returned normalized names for them ('Null', 'NaN', 'Number')\r\n * @function module:_objectOps.typeOf\r\n * @param value {*}\r\n * @returns {string} - Constructor's name or derived name (in the case of `null`, `undefined`, or `NaN` (whose\r\n *  normalized names are 'Null', 'Undefined', 'NaN' respectively).\r\n */\r\nfunction typeOf (value) {\r\n    let retVal;\r\n    if (value === undefined) {\r\n        retVal = _Undefined;\r\n    }\r\n    else if (value === null) {\r\n        retVal = _Null;\r\n    }\r\n    else {\r\n        let constructorName = (value).constructor.name;\r\n        retVal = constructorName === _Number && isNaN(value) ?\r\n            _NaN : constructorName;\r\n    }\r\n    return retVal;\r\n}\n\nconst fPureTakesOne = name => (arg, f) => f[name](arg);\nconst fPureTakes2 = name => (arg1, arg2, f) => f[name](arg1, arg2);\nconst fPureTakes3 = name => (arg1, arg2, arg3, f) => f[name](arg1, arg2, arg3);\nconst fPureTakes4 = name => (arg1, arg2, arg3, arg4, f) => f[name](arg1, arg2, arg3, arg4);\nconst fPureTakes5 = name => (arg1, arg2, arg3, arg4, arg5, f) => f[name](arg1, arg2, arg3, arg4, arg5);\nconst fPureTakesOneOrMore = name => (f, ...args) => f[name](...args);\nconst fnOrError = (symbolName, f) => {\r\n        if (!f || f.constructor !== Function) {\r\n            throw new Error (`${symbolName} should be a function. ` +\r\n                `Type received: ${typeOf(f)};  Value received: ${f}.`);\r\n        }\r\n        return f;\r\n    };\n\n/**\r\n * Created by elydelacruz on 9/6/2017.\r\n * Defines some of the platform methods for objects (the ones used within `fjl`) uncurried for use\r\n * throughout the library.  @note Doesn't include all methods for objects just the ones used in\r\n *  the library.\r\n * @todo change all files named '*UnCurried' to '*_'.\r\n */\r\n\r\nconst instanceOf$1 = (instanceConstructor, instance) =>\r\n        instance instanceof instanceConstructor;\nconst hasOwnProperty$1 = fPureTakesOne('hasOwnProperty');\nconst length = x => x.length;\nconst keys = obj => Object.keys(obj);\nconst assign$1 = (() => Object.assign ?\r\n            (obj0, ...objs) => Object.assign(obj0, ...objs) :\r\n            (obj0, ...objs) => objs.reduce((topAgg, obj) => {\r\n                return keys(obj).reduce((agg, key) => {\r\n                    agg[key] = obj[key];\r\n                    return agg;\r\n                }, topAgg);\r\n            }, obj0)\r\n        )();\n\n/**\r\n * Created by elyde on 7/20/2017.\r\n * Functional versions of common array methods (`map`, `filter`, etc.) (un-curried);\r\n * @module _jsPlatform_arrayOps\r\n * @private\r\n * @todo updated doc blocks to list correct/updated module name.\r\n */\r\n\r\nconst defineReverse = () =>\r\n        Array.prototype.reverse ? x => x.reverse() :\r\n            x => x.reduceRight((agg, item) => {\r\n                agg.push(item);\r\n                return agg;\r\n            }, []);\nconst map = fPureTakesOne('map');\nconst filter = fPureTakesOne('filter');\nconst reduceRight = fPureTakes2('reduceRight');\nconst reverse = defineReverse();\n\n/**\r\n *  List operations that overlap (apart from globally overlapping props and functions like `length`)\r\n *      on both strings and arrays.\r\n */\r\n\r\nconst concat = fPureTakesOneOrMore('concat');\nconst slice = fPureTakes2('slice');\nconst includes = (() => 'includes' in Array.prototype ?\r\n            fPureTakesOne('includes') :\r\n            (value, xs) => xs.indexOf(value) > -1)();\nconst indexOf = fPureTakesOne('indexOf');\nconst lastIndexOf = fPureTakesOne('lastIndexOf');\n\n/**\r\n * Created by elydelacruz on 9/6/2017.\r\n */\r\n\r\n/**\r\n * Functional version of `String.prototype.split`.\r\n * @function module:_stringOps.split\r\n * @param separator {String|RegExp}\r\n * @param str {String}\r\n * @returns {Array}\r\n */\r\nconst split = fPureTakesOne('split');\n\n/**\r\n * Created by elydelacruz on 9/7/2017.\r\n * @module _jsPlatform_function\r\n * @private\r\n */\r\nconst apply = (fn, args) => fn.apply(null, args);\nconst call = (fn, ...args) => apply(fn, args);\n\n/**\r\n * @module jsPlatform_\r\n * @private\r\n */\n\n/**\r\n * @author elydelacruz\r\n * @created 12/6/2016.\r\n * @memberOf _functionOps\r\n * @description \"Curry strict\" and \"curry arbitrarily\" functions (`curry`, `curryN`).\r\n */\r\nconst notFnErrPrefix = '`fn` in `curry(fn, ...args)`';\r\n\r\nconst curry = (fn, ...argsToCurry) => curryN(fnOrError(notFnErrPrefix, fn).length, fn, ...argsToCurry);\nconst curryN = (executeArity, fn, ...curriedArgs) => {\r\n        return (...args) => {\r\n            let concatedArgs = concat(curriedArgs, args),\r\n                canBeCalled = (length(concatedArgs) >= executeArity) || !executeArity;\r\n            return !canBeCalled ? apply(curryN, concat([executeArity, fnOrError(notFnErrPrefix, fn)], concatedArgs)) :\r\n                apply(fnOrError(notFnErrPrefix, fn), concatedArgs);\r\n        };\r\n    };\nconst curry2 = fn => curryN(2, fn);\nconst curry3 = fn => curryN(3, fn);\nconst curry4 = fn => curryN(4, fn);\nconst curry5 = fn => curryN(5, fn);\n\n/**\r\n * @memberOf _objectOps\r\n */\r\n\r\n/**\r\n * Returns property value if found; Else `undefined`.\r\n * @function module:_objectOps.prop\r\n * @param name {String} - Key to search on `obj`\r\n * @param obj {Object} - Object to search `name` on.\r\n * @returns {*}\r\n */\r\nconst prop$1 = (name, obj) => obj[name];\n\n/**\r\n * Created by elyde on 12/18/2016.\r\n * @memberOf _objectOps\r\n */\r\n\r\nlet _String = String.name;\nlet _Number$1 = Number.name;\nlet _Object = Object.name;\nlet _Boolean = Boolean.name;\nlet _Function = Function.name;\nlet _Array = Array.name;\nlet _Symbol = 'Symbol';\nlet _Map = 'Map';\nlet _Set = 'Set';\nlet _WeakMap = 'WeakMap';\nlet _WeakSet = 'WeakSet';\nlet _Null$1 = 'Null';\nlet _Undefined$1 = 'Undefined';\r\n\r\nconst isFunction = value => instanceOf$1(Function, value);\nconst isType$1 = (type, obj) => typeOf(obj) === (isFunction(type) ? type.name : type);\nconst isClass = x => x && /^\\s{0,3}class\\s{1,3}/.test((x + '').substr(0, 10));\nconst isCallable = x => isFunction(x) && !isClass(x);\nconst {isArray} = Array;\nconst isObject = value => isType$1(_Object, value);\nconst isBoolean = value => isType$1(_Boolean, value);\nconst isNumber = value => isType$1(_Number$1, value);\nconst isString = value => isType$1(_String, value);\nconst isMap = value => isType$1(_Map, value);\nconst isSet = value => isType$1(_Set, value);\nconst isWeakMap = value => isType$1(_WeakMap, value);\nconst isWeakSet = value => isType$1(_WeakSet, value);\nconst isUndefined = value => isType$1(_Undefined$1, value);\nconst isNull = value => isType$1(_Null$1, value);\nconst isSymbol = value => isType$1(_Symbol, value);\nconst isUsableImmutablePrimitive = x => {\r\n        const typeOfX = typeOf(x);\r\n        return isset(x) &&\r\n            [_String, _Number$1, _Boolean, _Symbol]\r\n                .some(Type => Type === typeOfX);\r\n    };\nconst isEmptyList = x => !length(x);\nconst isEmptyObject = obj => isEmptyList(keys(obj));\nconst isEmptyCollection = x => x.size === 0;\nconst isEmpty = value => {\r\n        let typeOfValue = typeOf(value),\r\n            retVal;\r\n        if (!value) { // if '', 0, `null`, `undefined`, or `false` then is empty\r\n            retVal = true;\r\n        }\r\n        else if (typeOfValue === _Array || typeOfValue === _Function) {\r\n            retVal = isEmptyList(value);\r\n        }\r\n        else if (typeOfValue === _Number$1) {\r\n            retVal = false;\r\n        }\r\n        else if (typeOfValue === _Object) {\r\n            retVal = isEmptyObject(value);\r\n        }\r\n        else if (hasOwnProperty$1('size', value) && isNumber(value.size)) {\r\n            retVal = isEmptyCollection(value);\r\n        }\r\n        else {\r\n            retVal = !value;\r\n        }\r\n        return retVal;\r\n    };\nconst isset = x => x !== null && x !== undefined;\n\nconst assignDeep$1 = (obj0, ...objs) =>\r\n        objs.reduce((topAgg, obj) =>\r\n                keys(obj).reduce((agg, key) => {\r\n                    let propDescription = Object.getOwnPropertyDescriptor(agg, key);\r\n                    // If property is not writable move to next item in collection\r\n                    if (hasOwnProperty$1(key, agg) && propDescription &&\r\n                        !(propDescription.get && propDescription.set) &&\r\n                        !propDescription.writable) {\r\n                        return agg;\r\n                    }\r\n                    if (isObject(agg[key]) && isObject(obj[key])) {\r\n                        assignDeep$1(agg[key], obj[key]);\r\n                    }\r\n                    else { agg[key] = obj[key]; }\r\n                    return agg;\r\n                }, topAgg)\r\n            , obj0);\n\n/**\r\n * @memberOf _functionOps\r\n */\r\n\r\nconst negateF = fn => (a, b) => !fn(a, b);\nconst negateF3 = fn => (a, b, c) => !fn(a, b, c);\nconst negateF4 = fn => (a, b, c, d) => !fn(a, b, c, d);\nconst negateF5 = fn => (a, b, c, d, e) => !fn(a, b, c, d, e);\nconst negateP = negateF3;\nconst negateFMany = fn => (...args) => !apply(fn, args);\n\n/**\r\n * Created by elyde on 7/15/2017.\r\n * @module booleanOps\r\n */\r\n\r\nconst isTruthy = value => !!value;\nconst isFalsy = value => !value;\nconst alwaysTrue = () => true;\nconst alwaysFalse = () => false;\n\n/**\r\n * Checks if given `x` is set and of one of\r\n *  [String, Boolean, Number, or Symbol] (null and undefined are immutable\r\n *   but are not \"usable\" or 'not what we usually want to operate on'.\r\n * @private\r\n * @param x {*}\r\n * @returns {Boolean}\r\n */\r\nfunction isUsableImmutablePrimitive$1 (x) {\r\n    const typeOfX = typeOf(x);\r\n    return isset(x) &&\r\n        [String.name, Number.name, Boolean.name, Symbol.name]\r\n            .some(Type => Type === typeOfX);\r\n}\r\n\r\n/**\r\n * Creates a value `of` given type;  Checks for one of the following construction strategies (in order listed):\r\n * ```\r\n * // - If exists `(value).constructor.of` uses this.\r\n * // - If value is of one String, Boolean, Symbol, or Number types calls it's\r\n * //      constructor as a function (in cast form;  E.g., `constructor(...args)` )\r\n * // - Else if constructor is a function, thus far, then calls constructor using\r\n * //      the `new` keyword (with any passed in args).\r\n * ```\r\n * @function module:_objectOps.of\r\n * @param x {*} - Value to derive returned value's type from.\r\n * @param [args] {...*} - Any args to pass in to matched construction strategy.\r\n * @returns {*|undefined} - New value of given value's type else `undefined`.\r\n */\r\nconst of = (x, ...args) => {\r\n    if (!isset(x)) { return undefined; }\r\n    const constructor = x.constructor;\r\n    if (hasOwnProperty$1('of', constructor)) {\r\n        return apply(constructor.of, args);\r\n    }\r\n    else if (isUsableImmutablePrimitive$1(x)) {\r\n        return apply(constructor, args);\r\n    }\r\n    else if (isFunction(constructor)) {\r\n        return new constructor(...args);\r\n    }\r\n    return undefined;\r\n};\n\n/**\r\n * @module _objectOps\r\n * @description Object operations (uncurried).\r\n * @private\r\n */\n\n/**\r\n * @function module:_listOps.map\r\n * @param fn {Function} - Function to map on array.\r\n * @param xs {Array}\r\n * @returns {Array}\r\n */\r\nfunction _map (fn, xs) {\r\n    let ind = 0,\r\n        limit = length(xs),\r\n        out = [];\r\n    if (!limit) { return out; }\r\n    while (ind < limit) {\r\n        out.push(fn(xs[ind], ind, xs));\r\n        ind += 1;\r\n    }\r\n    return out;\r\n}\n\nconst aggregateStr = (agg, item) => agg + item;\nconst aggregateArr = (agg, item) => {\r\n        agg.push(item);\r\n        return agg;\r\n    };\nconst aggregateObj = (agg, item, ind) => {\r\n        agg[ind] = item;\r\n        return agg;\r\n    };\nconst aggregatorByType = x => {\r\n        switch (typeOf(x)) {\r\n            case 'String': return aggregateStr;\r\n            case 'Array': return aggregateArr;\r\n            case 'Object':\r\n            default: return aggregateObj;\r\n        }\r\n    };\n\n/**\r\n * List operator utils module.\r\n * @module _listOpUtils\r\n * @private\r\n */\r\nconst sliceFrom = (startInd, arr) => slice(startInd, undefined, arr);\nconst sliceTo = (toInd, xs) => slice(0, toInd, xs);\nconst copy = xs => sliceFrom(0, xs);\nconst sliceCopy = copy;\nconst genericAscOrdering = (a, b) => {\r\n        if (a > b) { return 1; }\r\n        else if (a < b) { return -1; }\r\n        return 0;\r\n    };\nconst lengths = (...lists) => length(lists) ? _map(length, lists) : [];\nconst lengthsToSmallest = (...lists) => {\r\n        const listLengths = apply(lengths, lists),\r\n            smallLen = Math.min.apply(Math, listLengths);\r\n        return _map((list, ind) => listLengths[ind] > smallLen ?\r\n            sliceTo(smallLen, list) : copy(list), lists);\r\n    };\nconst reduceUntil = (pred, op, agg, arr) => {\r\n        const limit = length(arr);\r\n        if (!limit) { return agg; }\r\n        let ind = 0,\r\n            result = agg;\r\n        for (; ind < limit; ind++) {\r\n            if (pred(arr[ind], ind, arr)) { break; }\r\n            result = op(result, arr[ind], ind, arr);\r\n        }\r\n        return result;\r\n    };\nconst reduceRightUntil = (pred, op, agg, arr) => {\r\n        const limit = length(arr);\r\n        if (!limit) { return agg; }\r\n        let ind = limit - 1,\r\n            result = agg;\r\n        for (; ind >= 0; ind--) {\r\n            if (pred(arr[ind], ind, arr)) { break; }\r\n            result = op(result, arr[ind], ind, arr);\r\n        }\r\n        return result;\r\n    };\nconst reduce$1 = (operation, agg, arr) =>\r\n        reduceUntil(\r\n            alwaysFalse,            // until-predicate\r\n            operation,              // operation\r\n            agg,                    // aggregator\r\n            arr);\nconst reduceRight$1 = (operation, agg, arr) =>\r\n        reduceRightUntil(\r\n            alwaysFalse,            // until-predicate\r\n            operation,              // operation\r\n            agg,                    // aggregator\r\n            arr);\nconst lastIndex = x => { const len = length(x); return len ? len - 1 : 0; };\nconst findIndexWhere = (pred, arr) => {\r\n        let ind = -1,\r\n            predicateFulfilled = false;\r\n        const limit = length(arr);\r\n        while (ind < limit && !predicateFulfilled) {\r\n            predicateFulfilled = pred(arr[++ind], ind, arr);\r\n        }\r\n        return ind;\r\n    };\nconst findIndexWhereRight = (pred, arr) => {\r\n        const limit = length(arr);\r\n        let ind = limit,\r\n            predicateFulfilled = false;\r\n        for (; ind >= 0 && !predicateFulfilled; --ind) {\r\n            predicateFulfilled = pred(arr[ind], ind, arr);\r\n        }\r\n        return ind;\r\n    };\nconst findIndicesWhere = (pred, xs) => {\r\n        if (!xs || !xs.length) { return undefined; }\r\n        const limit = length(xs);\r\n        let ind = 0,\r\n            out = [];\r\n        for (; ind < limit; ind++) {\r\n            if (pred(xs[ind], ind, xs)) { out.push(ind); }\r\n        }\r\n        return out.length ? out : undefined;\r\n    };\nconst findWhere = (pred, xs) => {\r\n        let ind = 0,\r\n            limit = length(xs);\r\n        if (!limit) { return; }\r\n        for (; ind < limit; ind++) {\r\n            let elm = xs[ind];\r\n            if (pred(elm, ind, xs)) { return elm; }\r\n        }\r\n    };\n\n/**\r\n * List operations module.\r\n * @module _listOps\r\n * @todo decide whether to throw errors where functions cannot function without a specific type or to return undefined (and also determine which cases are ok for just returning undefined).\r\n * @private\r\n */\r\n// Exported internals\r\nconst _append = concat;\nconst _appendMany = (...args) => {\r\n        if (length(args)) { return apply(concat, args); }\r\n        throw new Error('`_appendMany` requires at least one arg.');\r\n    };\nconst _head = x => x[0];\nconst _last = xs => xs[lastIndex(xs)];\nconst _tail = xs => sliceFrom(1, xs);\nconst _init = xs => sliceTo(lastIndex(xs), xs);\nconst _uncons = xs =>\r\n        !xs || length(xs) === 0 ? undefined : [_head(xs), _tail(xs)];\nconst _unconsr = xs => !xs || length(xs) === 0 ? undefined : [_init(xs), _last(xs)];\nconst _concat = xs => !length(xs) ? copy(xs) : apply(_appendMany, xs);\nconst _concatMap = (fn, foldableOfA) => _concat(_map(fn, foldableOfA));\nconst _reverse = x => _foldr((agg, item) => (agg.push(item), agg), [], x);\nconst _intersperse = (between, arr) => {\r\n        const limit = length(arr),\r\n            lastInd = limit - 1,\r\n            out = [];\r\n        if (!limit) {\r\n            return out;\r\n        }\r\n        return _foldl((agg, item, ind) => (\r\n                ind === lastInd ?\r\n                    agg.push(item) :\r\n                    agg.push(item, between),\r\n                agg\r\n            ), out, arr);\r\n    };\nconst _intercalate = (xs, xss) => _concat(_intersperse(xs, xss));\nconst _transpose = xss => {\r\n        let numLists = length(xss),\r\n            ind = 0, ind2;\r\n        if (!numLists) {\r\n            return [];\r\n        }\r\n        const listLengths = apply(lengths, xss),\r\n            longestListLen = _maximum(listLengths),\r\n            outLists = [];\r\n        for (; ind < longestListLen; ind += 1) {\r\n            const outList = [];\r\n            for (ind2 = 0; ind2 < numLists; ind2 += 1) {\r\n                if (listLengths[ind2] < ind + 1) {\r\n                    continue;\r\n                }\r\n                outList.push(xss[ind2][ind]);\r\n            }\r\n            outLists.push(outList);\r\n        }\r\n        return _filter(x => length(x), outLists);\r\n    };\nconst _subsequences = xs => {\r\n        const listLen = length(xs),\r\n            len = Math.pow(2, listLen),\r\n            out = [];\r\n        for (let i = 0; i < len; i += 1) {\r\n            let entry = [];\r\n            for (let j = 0; j < listLen; j += 1) {\r\n                if (i & (1 << j)) {\r\n                    entry.push(xs[j]);\r\n                }\r\n            }\r\n            out.push(entry);\r\n        }\r\n        return out;\r\n    };\nconst _subsequences1 = xs => {\r\n        const listLen = length(xs),\r\n            len = Math.pow(2, listLen),\r\n            out = [];\r\n        for (let i = 0; i < len; i += 1) {\r\n            let entry = [];\r\n            for (let j = 0; j < listLen; j += 1) {\r\n                if (i & (1 << j)) {\r\n                    entry.push(xs[j]);\r\n                }\r\n            }\r\n            out.push(entry);\r\n        }\r\n        return out;\r\n    };\nconst _swapped = (ind1, ind2, list) => {\r\n        const out = copy(list),\r\n            tmp = out[ind1];\r\n        out[ind1] = out[ind2];\r\n        out[ind2] = tmp;\r\n        return out;\r\n    };\nconst _permutations = xs => {\r\n        const limit = length(xs);\r\n\r\n        if (!limit || limit === 1) {\r\n            return [xs];\r\n        }\r\n\r\n        let list = copy(xs),\r\n            c = _repeat(limit, 0),\r\n            i = 0;\r\n\r\n        const out = [list];\r\n\r\n        for (; i < limit; i++) {\r\n            if (c[i] < i) {\r\n                list = _swapped(i % 2 === 0 ? 0 : c[i], i, list);\r\n                out.push(list);\r\n                c[i] += 1;\r\n                i = 0;\r\n                continue;\r\n            }\r\n            c[i] = 0;\r\n        }\r\n\r\n        return out;\r\n    };\nconst _foldl = reduce$1;\nconst _foldr = reduceRight$1;\nconst _foldl1 = (op, xs) => {\r\n        const parts = _uncons(xs);\r\n        return !parts ? [] : reduce$1(op, parts[0], parts[1]);\r\n    };\nconst _foldr1 = (op, xs) => {\r\n        const parts = _unconsr(xs);\r\n        return !parts ? [] : reduceRight$1(op, parts[1], parts[0]);\r\n    };\nconst _mapAccumL = (op, zero, xs) => {\r\n        const list = copy(xs),\r\n            limit = length(xs);\r\n        if (!limit) {\r\n            return [zero, list];\r\n        }\r\n        let ind = 0,\r\n            agg = zero,\r\n            mapped = [],\r\n            tuple;\r\n        for (; ind < limit; ind++) {\r\n            tuple = op(agg, list[ind], ind);\r\n            agg = tuple[0];\r\n            mapped = tuple[1];\r\n        }\r\n        return [agg, mapped];\r\n    };\nconst _mapAccumR = (op, zero, xs) => {\r\n        const list = copy(xs),\r\n            limit = length(xs);\r\n        if (!limit) {\r\n            return [zero, list];\r\n        }\r\n        let ind = limit - 1,\r\n            agg = zero,\r\n            mapped = [],\r\n            tuple;\r\n        for (; ind >= 0; ind--) {\r\n            tuple = op(agg, list[ind], ind);\r\n            agg = tuple[0];\r\n            mapped = tuple[1];\r\n        }\r\n        return [agg, mapped];\r\n    };\nconst _iterate = (limit, op, x) => {\r\n        let ind = 0,\r\n            out = [],\r\n            lastX = x;\r\n        for (; ind < limit; ind += 1) {\r\n            out.push(lastX);\r\n            lastX = op(lastX);\r\n        }\r\n        return out;\r\n    };\nconst _repeat = (limit, x) => _iterate(limit, a => a, x);\nconst _replicate = _repeat;\nconst _cycle = (limit, xs) => _concat(_replicate(limit, xs));\nconst _unfoldr = (op, x) => {\r\n        let ind = 0,\r\n            out = [],\r\n            resultTuple = op(x, ind, out);\r\n        while (resultTuple) {\r\n            out.push(resultTuple[0]);\r\n            resultTuple = op(resultTuple[1], ++ind, out);\r\n        }\r\n        return out;\r\n    };\nconst _findIndex = findIndexWhere;\nconst _findIndices = findIndicesWhere;\nconst _elemIndex = (x, xs) => {\r\n        const foundInd = indexOf(x, xs);\r\n        return foundInd !== -1 ? foundInd : undefined;\r\n    };\nconst _elemIndices = (value, xs) => _findIndices(x => x === value, xs);\nconst _take = (limit, list) => sliceTo(limit, list);\nconst _drop = (count, list) => sliceFrom(count, list);\nconst _splitAt = (ind, list) => [ sliceTo(ind, list), sliceFrom(ind, list) ];\nconst _takeWhile = (pred, list) =>\r\n        reduceUntil(\r\n            negateP(pred),  // predicate\r\n            aggregateArr,   // operation\r\n            [],             // aggregator\r\n            list\r\n        );\nconst _dropWhile = (pred, list) => {\r\n        const limit = length(list),\r\n            splitPoint =\r\n                findIndexWhere((item, ind, list2) =>\r\n                    !pred(list[ind], ind, list2), list);\r\n\r\n        return splitPoint === -1 ?\r\n            sliceTo(limit, list) :\r\n            slice(splitPoint, limit, list);\r\n    };\nconst _dropWhileEnd = (pred, list) => {\r\n        const limit = length(list),\r\n            splitPoint =\r\n                findIndexWhereRight((item, ind, list2) =>\r\n                    !pred(list[ind], ind, list2), list);\r\n\r\n        return splitPoint === -1 ?\r\n            sliceTo(limit, list) :\r\n            sliceTo(splitPoint + 1, list);\r\n    };\nconst _span = (pred, list) => {\r\n        const splitPoint = findIndexWhere(negateP(pred), list);\r\n        return splitPoint === -1 ?\r\n            _splitAt(0, list) : _splitAt(splitPoint, list);\r\n    };\nconst _breakOnList = (pred, list) => {\r\n        const splitPoint = findIndexWhere(pred, list);\r\n        return splitPoint === -1 ?\r\n            _splitAt(0, list) : _splitAt(splitPoint, list);\r\n    };\nconst _at = prop$1;\nconst _find = findWhere;\nconst _filter = (pred, xs) => {\r\n        let ind = 0,\r\n            limit = length(xs),\r\n            out = [];\r\n        if (!limit) {\r\n            return out;\r\n        }\r\n        for (; ind < limit; ind++) {\r\n            if (pred(xs[ind], ind, xs)) {\r\n                out.push(xs[ind]);\r\n            }\r\n        }\r\n        return out;\r\n    };\nconst _partition = (pred, list) =>\r\n        !length(list) ?\r\n            [[], []] :\r\n                [_filter(pred, list), _filter(negateP(pred), list)];\nconst _elem = includes;\nconst _notElem = negateF(includes);\nconst _lookup = _at;\nconst _isPrefixOf = (xs1, xs2) => {\r\n        const limit1 = length(xs1),\r\n            limit2 = length(xs2);\r\n        if (limit2 < limit1 || !limit1 || !limit2 || indexOf(xs1[0], xs2) === -1) {\r\n            return false;\r\n        }\r\n        let ind = 0;\r\n        for (; ind < limit1; ind++) {\r\n            if (xs1[ind] !== xs2[ind]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\nconst _isSuffixOf = (xs1, xs2) => {\r\n        const limit1 = length(xs1),\r\n            limit2 = length(xs2);\r\n        if (limit2 < limit1 || !limit1 || !limit2 || indexOf(xs1[0], xs2) === -1) {\r\n            return false;\r\n        }\r\n        let ind1 = limit1 - 1,\r\n            ind2 = limit2 - 1;\r\n        for (; ind1 >= 0; ind1--) {\r\n            if (xs1[ind1] !== xs2[ind2]) {\r\n                return false;\r\n            }\r\n            ind2 -= 1;\r\n        }\r\n        return true;\r\n    };\nconst _isInfixOf = (xs1, xs2) => {\r\n        const limit1 = length(xs1),\r\n            limit2 = length(xs2);\r\n        if (limit2 < limit1 || !limit1 || !limit2) {\r\n            return false;\r\n        }\r\n        let ind1,\r\n            foundLen,\r\n            ind = 0;\r\n        for (; ind < limit2; ind += 1) {\r\n            foundLen = 0;\r\n            for (ind1 = 0; ind1 < limit1; ind1 += 1) {\r\n                if (xs2[ind1 + ind] === xs1[ind1]) {\r\n                    foundLen += 1;\r\n                }\r\n                if (foundLen === limit1) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\nconst _isSubsequenceOf = (xs1, xs2) => {\r\n        const len = Math.pow(2, length(xs2)),\r\n            lenXs1 = length(xs1);\r\n        let foundLen,\r\n            i;\r\n        for (i = 0; i < len; i += 1) {\r\n            foundLen = 0;\r\n            for (let j = 0; j < len; j += 1) {\r\n                if (i & (1 << j) && indexOf(xs2[j], xs1) > -1) {\r\n                    foundLen += 1;\r\n                }\r\n                if (foundLen === lenXs1) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\nconst _group = xs => _groupBy((a, b) => a === b, xs);\nconst _groupBy = (equalityOp, xs) => {\r\n        const limit = length(xs);\r\n        if (!limit) {\r\n            return copy(xs);\r\n        }\r\n        let ind = 0,\r\n            prevItem,\r\n            item,\r\n            predOp = x => {\r\n                if (equalityOp(x, prevItem)) {\r\n                    ind++;\r\n                }\r\n                if (equalityOp(x, item)) {\r\n                    prevItem = x;\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n            agg = [];\r\n        for (; ind < limit; ind += 1) {\r\n            item = xs[ind];\r\n            agg.push(_takeWhile(predOp, slice(ind, limit, xs)));\r\n        }\r\n        return agg;\r\n    };\nconst _inits = xs => {\r\n        let limit = length(xs),\r\n            ind = 0,\r\n            agg = [];\r\n        if (!limit) {\r\n            return [];\r\n        }\r\n        for (; ind <= limit; ind += 1) {\r\n            agg.push(sliceTo(ind, xs));\r\n        }\r\n        return agg;\r\n    };\nconst _tails = xs => {\r\n        let limit = length(xs),\r\n            ind = 0,\r\n            agg = [];\r\n        if (!limit) {\r\n            return [];\r\n        }\r\n        for (; ind <= limit; ind += 1) {\r\n            agg.push(slice(ind, limit, xs));\r\n        }\r\n        return agg;\r\n    };\nconst _stripPrefix = (prefix, list) =>\r\n        _isPrefixOf(prefix, list) ?\r\n            _splitAt(length(prefix), list)[1] :\r\n            copy(list);\nconst _zip = (arr1, arr2) => {\r\n        if (!length(arr1) || !length(arr2)) {\r\n            return [];\r\n        }\r\n        const [a1, a2] = lengthsToSmallest(arr1, arr2);\r\n        return reduce$1((agg, item, ind) =>\r\n                aggregateArr(agg, [item, a2[ind]]),\r\n            [], a1);\r\n    };\nconst _zipN = (...lists) => {\r\n        const trimmedLists = apply(lengthsToSmallest, _filter(length, lists)),\r\n            lenOfTrimmed = length(trimmedLists);\r\n        if (!lenOfTrimmed) {\r\n            return [];\r\n        }\r\n        else if (lenOfTrimmed === 1) {\r\n            return sliceTo(length(trimmedLists[0]), trimmedLists[0]);\r\n        }\r\n        return reduce$1((agg, item, ind) =>\r\n                aggregateArr(agg, _map(xs => xs[ind], trimmedLists)),\r\n            [], trimmedLists[0]);\r\n    };\nconst _zip3 = (arr1, arr2, arr3) => _zipN(arr1, arr2, arr3);\nconst _zip4 = (arr1, arr2, arr3, arr4) => _zipN(arr1, arr2, arr3, arr4);\nconst _zip5 = (arr1, arr2, arr3, arr4, arr5) => _zipN(arr1, arr2, arr3, arr4, arr5);\nconst _zipWith = (op, xs1, xs2) => {\r\n        if (!length(xs1) || !length(xs2)) {\r\n            return [];\r\n        }\r\n        const [a1, a2] = lengthsToSmallest(xs1, xs2);\r\n        return reduce$1((agg, item, ind) =>\r\n                aggregateArr(agg, op(item, a2[ind])),\r\n            [], a1);\r\n    };\nconst _zipWithN = (op, ...lists) => {\r\n        const trimmedLists = apply(lengthsToSmallest, lists),\r\n            lenOfTrimmed = length(trimmedLists);\r\n        if (!lenOfTrimmed) {\r\n            return [];\r\n        }\r\n        else if (lenOfTrimmed === 1) {\r\n            return sliceTo(length(trimmedLists[0]), trimmedLists[0]);\r\n        }\r\n        return reduce$1((agg, item, ind) =>\r\n                aggregateArr(agg, apply(op, _map(xs => xs[ind], trimmedLists))),\r\n            [], trimmedLists[0]);\r\n    };\nconst _zipWith3 = (op, xs1, xs2, xs3) => _zipWithN(op, xs1, xs2, xs3);\nconst _zipWith4 = (op, xs1, xs2, xs3, xs4) => _zipWithN(op, xs1, xs2, xs3, xs4);\nconst _zipWith5 = (op, xs1, xs2, xs3, xs4, xs5) => _zipWithN(op, xs1, xs2, xs3, xs4, xs5);\nconst _unzip = arr =>\r\n        _foldl((agg, item) => {\r\n            agg[0].push(item[0]);\r\n            agg[1].push(item[1]);\r\n            return agg;\r\n        }, [[], []], arr);\nconst _unzipN = list => {\r\n        if (!length(list)) {\r\n            return [];\r\n        }\r\n        const lenItem0 = length(list[0]);\r\n        let zero = lenItem0 ?\r\n            _unfoldr(numLists => numLists-- ? [[], numLists] : undefined, lenItem0) :\r\n            [];\r\n        return _foldl((agg, item) => {\r\n            agg.forEach((outList, ind) => outList.push(item[ind]));\r\n            return agg;\r\n        }, zero, list);\r\n    };\nconst _any = (p, xs) => {\r\n        let ind = 0,\r\n            limit = length(xs);\r\n        if (!limit) {\r\n            return false;\r\n        }\r\n        for (; ind < limit; ind += 1) {\r\n            if (p(xs[ind])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\nconst _all = (p, xs) => {\r\n        const limit = length(xs);\r\n        let ind = 0;\r\n        if (limit === 0) {\r\n            return false;\r\n        }\r\n        for (; ind < limit; ind++) {\r\n            if (!p(xs[ind], ind, xs)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\nconst _and = xs => _all(isTruthy, xs);\nconst _or = xs => _any(isTruthy, xs);\nconst _not = xs => _all(isFalsy, xs);\nconst _sum = list => _foldl((agg, x) => agg + x, 0, list);\nconst _product = list => _foldl((agg, x) => agg * x, 1, list);\nconst _maximum = list => _last(_sortBy(genericAscOrdering, list));\nconst _minimum = list => _head(_sortBy(genericAscOrdering, list));\nconst _scanl = (fn, zero, xs) => {\r\n        if (!xs || !length(xs)) {\r\n            return [];\r\n        }\r\n        const limit = length(xs);\r\n        let ind = 0,\r\n            result = zero,\r\n            out = [];\r\n        while (ind < limit) {\r\n            result = fn(result, xs[ind], ind, xs);\r\n            out.push(result);\r\n            ind++;\r\n        }\r\n        return out;\r\n    };\nconst _scanl1 = (fn, xs) => {\r\n        if (!xs || !xs.length) { return []; }\r\n        return _scanl(fn, _head(xs), _tail(xs));\r\n    };\nconst _scanr = (fn, zero, xs) => {\r\n        if (!xs || !length(xs)) {\r\n            return [];\r\n        }\r\n        const limit = length(xs);\r\n        let ind = limit - 1,\r\n            result = xs[0],\r\n            out = [];\r\n        while (ind > -1) {\r\n            result = fn(result, xs[ind], ind, xs);\r\n            out.push(result);\r\n            ind--;\r\n        }\r\n        return out;\r\n    };\nconst _scanr1 = (fn, xs) => {\r\n        if (!xs || !xs.length) { return []; }\r\n        return _scanr(fn, _last(xs), _init(xs));\r\n    };\nconst _nub = list => _nubBy((a, b) => a === b, list);\nconst _remove = (x, list) => _removeBy((a, b) => a === b, x, list);\nconst _sort = xs => _sortBy(genericAscOrdering, xs);\nconst _sortOn = (valueFn, xs) =>\r\n\r\n        // Un-decorate\r\n        _map(decorated => decorated[1],\r\n\r\n            // Decorate and sort\r\n            _sortBy(\r\n                // Ordering\r\n                ([a0], [b0]) => genericAscOrdering(a0, b0),\r\n\r\n                // Decorate\r\n                _map(item => [valueFn(item), item], xs)\r\n            )\r\n        );\nconst _sortBy = (orderingFn, xs) => copy(xs).sort(orderingFn || genericAscOrdering);\nconst _insert = (x, xs) => {\r\n        if (!length(xs)) {\r\n            return [x];\r\n        }\r\n        const foundIndex = _findIndex(item => x <= item, xs);\r\n        return foundIndex === -1 ? [x] :\r\n            _concat(_intersperse([x], _splitAt(foundIndex, xs)));\r\n    };\nconst _insertBy = (orderingFn, x, xs) => {\r\n        const limit = length(xs);\r\n        if (!limit) {\r\n            return [x];\r\n        }\r\n        let ind = 0;\r\n        for (; ind < limit; ind += 1) {\r\n            if (orderingFn(x, xs[ind]) <= 0) {\r\n                const parts = _splitAt(ind, xs);\r\n                return _concat([parts[0], [x], parts[1]]);\r\n            }\r\n        }\r\n        return aggregateArr(copy(xs), x);\r\n    };\nconst _nubBy = (pred, list) => {\r\n        if (!length(list)) {\r\n            return [];\r\n        }\r\n        const limit = length(list);\r\n        let ind = 0,\r\n            currItem,\r\n            out = [],\r\n            anyOp = storedItem => pred(currItem, storedItem);\r\n        for (; ind < limit; ind += 1) {\r\n            currItem = list[ind];\r\n            if (_any(anyOp, out)) {\r\n                continue;\r\n            }\r\n            out.push(currItem);\r\n        }\r\n        return out;\r\n    };\nconst _removeBy = (pred, x, list) => { // @todo optimize this implementation\r\n        const foundIndex = _findIndex(item => pred(x, item), list),\r\n            parts = _splitAt(foundIndex > -1 ? foundIndex : 0, list); // @todo correct this implementation\r\n        return _append(parts[0], _tail(parts[1]));\r\n    };\nconst _removeFirstsBy = (pred, xs1, xs2) =>\r\n        _foldl((agg, item) => _removeBy(pred, item, agg), xs1, xs2);\nconst _unionBy = (pred, arr1, arr2) =>\r\n        _foldl((agg, b) => {\r\n                const alreadyAdded = _any(a => pred(a, b), agg);\r\n                return !alreadyAdded ? (agg.push(b), agg) : agg;\r\n            }, copy(arr1), arr2\r\n        );\nconst _union = (arr1, arr2) =>\r\n        _append(arr1,\r\n            _filter(elm => !includes(elm, arr1), arr2));\nconst _intersect = (arr1, arr2) =>\r\n        !arr1 || !arr2 || (!arr1 && !arr2) ? [] :\r\n            _filter(elm => includes(elm, arr2), arr1);\nconst _intersectBy = (pred, list1, list2) =>\r\n        _foldl((agg, a) =>\r\n                _any(b => pred(a, b), list2) ? (agg.push(a), agg) : agg\r\n            , [], list1);\nconst _difference = (array1, array2) => { // augment this with max length and min length ordering on op\r\n        if (array1 && !array2) {\r\n            return copy(array1);\r\n        }\r\n        else if (!array1 && array2 || (!array1 && !array2)) {\r\n            return [];\r\n        }\r\n        return reduce$1((agg, elm) =>\r\n                !includes(elm, array2) ? (agg.push(elm), agg) : agg\r\n            , [], array1);\r\n    };\nconst _complement = (arr0, ...arrays) =>\r\n        reduce$1((agg, arr) => _append(agg, _difference(arr, arr0)), [], arrays);\n\nconst objUnion$1 = (obj1, obj2) => assignDeep$1(obj1, obj2);\nconst objIntersect$1 = (obj1, obj2) => _foldl((agg, key) => {\r\n        if (hasOwnProperty$1(key, obj2)) {\r\n            agg[key] = obj2[key];\r\n        }\r\n        return agg;\r\n    }, {}, keys(obj1));\nconst objDifference$1 = (obj1, obj2) => _foldl((agg, key) => {\r\n        if (!hasOwnProperty$1(key, obj2)) {\r\n            agg[key] = obj1[key];\r\n        }\r\n        return agg;\r\n    }, {}, keys(obj1));\nconst objComplement$1 = (obj0, ...objs) => _foldl((agg, obj) =>\r\n        assignDeep$1(agg, objDifference$1(obj, obj0)), {}, objs);\n\n/**\r\n * @module objectOps\r\n */\r\nconst prop$$1 = curry(prop$1);\nconst instanceOf$$1 = curry(instanceOf$1);\nconst hasOwnProperty$$1 = curry(hasOwnProperty$1);\nconst assign$$1 = curry2(assign$1);\nconst assignDeep$$1 = curry2(assignDeep$1);\nconst objUnion$$1 = curry(objUnion$1);\nconst objIntersect$$1 = curry(objIntersect$1);\nconst objDifference$$1 = curry(objDifference$1);\nconst objComplement$$1 = curry2(objComplement$1);\nconst isType$$1 = curry(isType$1);\r\n\r\n    /**\r\n     * Returns whether a value is a function or not.\r\n     * @function module:objectOps.isFunction\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if `value` is an es2015 `class`.\r\n     * @function module:objectOps.isClass\r\n     * @param x {*}\r\n     * @returns {boolean}\r\n     */\r\n\r\n    /**\r\n     * Returns a boolean depicting whether a value is callable or not.\r\n     * @function module:objectOps.isCallable\r\n     * @tentative\r\n     * @private\r\n     * @param x {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if value is an array.\r\n     * @function module:objectOps.isArray\r\n     * @param value {*}\r\n     * @returns {boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks whether value is an object or not.\r\n     * @function module:objectOps.isObject\r\n     * @param value\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if value is a boolean.\r\n     * @function module:objectOps.isBoolean\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if value is a valid number (also checks if isNaN so that you don't have to).\r\n     * @function module:objectOps.isNumber\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks whether value is a string or not.\r\n     * @function module:objectOps.isString\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks whether value is of `Map` or not.\r\n     * @function module:objectOps.isMap\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks whether value is of `Set` or not.\r\n     * @function module:objectOps.isSet\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks whether value is of `WeakMap` or not.\r\n     * @function module:objectOps.isWeakMap\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks whether value is of `WeakSet` or not.\r\n     * @function module:objectOps.isWeakSet\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if value is undefined.\r\n     * @function module:objectOps.isUndefined\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if value is null.\r\n     * @function module:objectOps.isNull\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if value is a `Symbol`.\r\n     * @function module:objectOps.isSymbol\r\n     * @param value {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * @tentative\r\n     * @private\r\n     */\r\n\r\n    /**\r\n     * Checks if given `x` is one of the four\r\n     * \"usable\" immutable JS primitives; I.e.,\r\n     *  One of [String, Boolean, Number, Symbol]\r\n     * @function module:objectOps.isUsableImmutablePrimitive\r\n     * @param x {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if !length.\r\n     * @function module:objectOps.isEmptyList\r\n     * @param x {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if object has own properties/enumerable-props or not.\r\n     * @function module:objectOps.isEmptyObject\r\n     * @param obj {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks if collection is empty or not (Map, WeakMap, WeakSet, Set etc.).\r\n     * @function module:objectOps.isEmptyCollection\r\n     * @param x {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Checks to see if passed in argument is empty.\r\n     * @function module:objectOps.isEmpty\r\n     * @param value {*} - Value to check.\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Returns whether passed in values is defined and not null.\r\n     * @function module:objectOps.isset\r\n     * @param x {*}\r\n     * @returns {Boolean}\r\n     */\r\n\r\n    /**\r\n     * Returns the constructor/class/type name of a value.\r\n     * @note Returns 'NaN' if value is of type `Number` and value is `isNaN`.\r\n     * @note Returns 'Undefined' if value is `undefined`\r\n     * @note Returns 'Null' if value is `null`\r\n     * For values that have no concrete constructors and/or casters\r\n     * (null, NaN, and undefined) we returned normalized names for them ('Null', 'NaN', 'Number')\r\n     * @function module:objectOps.typeOf\r\n     * @param value {*}\r\n     * @returns {string} - Constructor's name or derived name (in the case of `null`, `undefined`, or `NaN` (whose\r\n     *  normalized names are 'Null', 'Undefined', 'NaN' respectively).\r\n     */\r\n\r\n    /**\r\n     * Creates a value `of` given type;  Checks for one of the following construction strategies (in order listed):\r\n     * - If exists `(value).constructor.of` uses this.\r\n     * - If value is of one String, Boolean, Symbol, or Number types calls it's constructor as a function (in cast form;  E.g., `constructor(...args)` )\r\n     * - Else if constructor is a function, thus far, then calls constructor using the `new` keyword (with any passed in args).\r\n     * @function module:objectOps.of\r\n     * @param x {*} - Value to derive returned value's type from.\r\n     * @param [args] {...*} - Any args to pass in to matched construction strategy.\r\n     * @returns {*|undefined} - New value of given value's type else `undefined`.\r\n     */\r\n\r\n    /**\r\n     * @function module:objectOps.length\r\n     * @param x {*}\r\n     * @returns {Number}\r\n     * @throws {Error} - Throws an error if value doesn't have a `length` property (\r\n     *  `null`, `undefined`, {Boolean}, Symbol, et. al.).\r\n     */\r\n\r\n    /**\r\n     * Gets own enumerable keys of passed in object (same as `Object.keys`).\r\n     * @function module:objectOps.keys\r\n     * @param obj {*}\r\n     * @returns {Array<String>}\r\n     */\n\nconst until$1 = (predicate, operation, typeInstance) => {\r\n        let result = typeInstance;\r\n        while (!predicate(result)) {\r\n            result = operation(result);\r\n        }\r\n        return result;\r\n    };\n\nconst flipN$1 = fn => (...args) => apply(fn, reverse(args));\nconst flip3$1 = fn => (a, b, c) => call(fn, c, b, a);\nconst flip4$1 = fn => (a, b, c, d) => call(fn, d, c, b, a);\nconst flip5$1 = fn => (a, b, c, d, e) => call(fn, e, d, c, b, a);\nconst flip$1 = fn => (b, a) => call(fn, a, b);\n\n/**\r\n * @memberOf _functionOps\r\n * @author elydelacruz\r\n * @created 12/6/2016.\r\n * @description Curry implementation with place holder concept (`__`).\r\n * @todo Make code here more minimal (reuse small parts here).\r\n */\r\n\r\n/**\r\n * PlaceHolder (__) constructor.\r\n * @constructor PlaceHolder\r\n * @private\r\n */\r\nconst PlaceHolder = function PlaceHolder() {};\nconst notFnErrPrefix$1 = '`fn` in `curry_(fn, ...args)`';\nconst placeHolderInstance = new PlaceHolder();\r\n\r\n/**\r\n * Checks to see if value is a `PlaceHolder`.\r\n * @param instance {*}\r\n * @returns {boolean}\r\n * @private\r\n */\r\nfunction isPlaceHolder (instance) {\r\n    return instance instanceof PlaceHolder;\r\n}\r\n\r\n/**\r\n * Replaces `placeholder` values in `_listOps`.\r\n * @function replacePlaceHolder\r\n * @private\r\n * @param array {Array} - Array to replace placeholders in.\r\n * @param args {Array} - Args from to choose from to replace placeholders.\r\n * @returns {Array|*} - Returns passed in `_listOps` with placeholders replaced by values in `args`.\r\n */\r\nfunction replacePlaceHolders (array, args) {\r\n    let out = map(element => {\r\n            if (!isPlaceHolder(element)) { return element; }\r\n            else if (length(args)) { return args.shift(); }\r\n            return element;\r\n        }, array);\r\n    return length(args) ? concat(out, args) : out;\r\n}\r\n\r\n/**\r\n * Curries passed in functionOps up to given arguments length (can enforce arity via placeholder values (`__`)).\r\n * @function module:_functionOps.curry_\r\n * @param fn {Function}\r\n * @param argsToCurry {...*}\r\n * @returns {Function}\r\n */\r\nfunction curry_ (fn, ...argsToCurry) {\r\n    return curryN_(fnOrError(notFnErrPrefix$1, fn).length, fn, ...argsToCurry);\r\n}\r\n\r\n/**\r\n * Curries a _functionOps up to given arity also enforces arity via placeholder values (`__`).\r\n * @function module:_functionOps.curryN_\r\n * @param executeArity {Number}\r\n * @param fn {Function}\r\n * @param curriedArgs {...*} - Allows `Placeholder` (`__`) values.\r\n * @returns {Function} - Passed in _functionOps wrapped in a _functionOps for currying.\r\n */\r\nfunction curryN_ (executeArity, fn, ...curriedArgs) {\r\n    return (...args) => {\r\n        let concatedArgs = replacePlaceHolders(curriedArgs, args),\r\n            placeHolders = filter(isPlaceHolder, concatedArgs),\r\n            canBeCalled = (length(concatedArgs) - length(placeHolders) >= executeArity) || !executeArity;\r\n        return !canBeCalled ?\r\n            apply(curryN_, concat([executeArity, fnOrError(notFnErrPrefix$1, fn)], concatedArgs)) :\r\n            apply(fnOrError(notFnErrPrefix$1, fn), concatedArgs);\r\n    };\r\n}\r\n\r\n/**\r\n * Place holder object (frozen) used by curry.\r\n * @memberOf _functionOps\r\n * @type {PlaceHolder}\r\n */\r\nlet __ = Object.freeze ? Object.freeze(placeHolderInstance) : placeHolderInstance;\nlet curry2_ = fn => curryN_(2, fn);\nlet curry3_ = fn => curryN_(3, fn);\nlet curry4_ = fn => curryN_(4, fn);\nlet curry5_ = fn => curryN_(5, fn);\n\n/**\r\n * @memberOf _functionOps\r\n */\r\n\r\n/**\r\n * Returns passed in parameter.\r\n * @haskellType `id :: a -> a`\r\n * @function module:_functionOps.id\r\n * @param x {*}\r\n * @returns {*}\r\n */\r\nconst id = x => x;\n\n/**\r\n * Composes all functions passed in from right to left passing each functions return value to\r\n * the functionOps on the left of itself.\r\n * @function module:_functionOps.compose\r\n * @type {Function}\r\n * @param args {...{Function}}\r\n * @returns {Function}\r\n */\r\nconst compose = (...args) =>\r\n        arg0 => reduceRight((value, fn) => fn(value), arg0, args);\n\n/**\r\n * Function operations: `\r\n * @module functionOps\r\n */\r\n\r\nconst apply$1 = curry(apply);\nconst call$1 = curry2(call);\nconst until$$1 = curry(until$1);\nconst flipN$$1 = fn => curry3((...args) => apply$1(fn, reverse(args)));\nconst flip$$1 = fn => curry(flip$1(fn));\nconst flip3$$1 = fn => curry(flip3$1(fn));\nconst flip4$$1 = fn => curry(flip4$1(fn));\nconst flip5$$1 = fn => curry(flip5$1(fn));\r\n\r\n    /**\r\n     * Curries a function based on it's defined arity (argument's arrayOps expected length).\r\n     * @function module:functionOps.curry\r\n     * @param fn {Function}\r\n     * @param argsToCurry {...*}\r\n     * @returns {Function}\r\n     * @curried\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to a given arity.\r\n     * @function module:functionOps.curryN\r\n     * @param executeArity {Number}\r\n     * @param fn {Function}\r\n     * @param curriedArgs {...*}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 2 (won't call function until 2 or more args).\r\n     * @function module:functionOps.curry2\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 3 (won't call function until 3 or more args).\r\n     * @function module:functionOps.curry3\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 4 (won't call function until 4 or more args).\r\n     * @function module:functionOps.curry4\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 5 (won't call function until 5 or more args).\r\n     * @function module:functionOps.curry5\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries passed in function up to given arguments length (can enforce arity via placeholder values (`__`)).\r\n     * @function module:functionOps.curry_\r\n     * @param fn {Function}\r\n     * @param argsToCurry {...*}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to given arity also enforces arity via placeholder values (`__`).\r\n     * @function module:functionOps.curryN_\r\n     * @param executeArity {Number}\r\n     * @param fn {Function}\r\n     * @param curriedArgs {...*} - Allows `Placeholder` (`__`) values.\r\n     * @returns {Function} - Passed in function wrapped in a function for currying.\r\n     */\r\n\r\n    /**\r\n     * Place holder object (frozen) used by curry.\r\n     * @memberOf functionOps\r\n     * @type {PlaceHolder}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 2 (takes into account placeholders `__` (arity enforcers))\r\n     * (won't call function until 2 or more args (not counting placeholder (`__`) value).\r\n     * @function module:functionOps.curry2_\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 3 (takes into account placeholders `__` (arity enforcers))\r\n     * (won't call function until 3 or more args (not counting placeholder (`__`) value).\r\n     * @function module:functionOps.curry3_\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 4 (takes into account placeholders `__` (arity enforcers))\r\n     * (won't call function until 4 or more args (not counting placeholder (`__`) value).\r\n     * @function module:functionOps.curry4_\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Curries a function up to an arity of 5  (takes into account placeholders `__` (arity enforcers))\r\n     * (won't call function until 5 or more args (not counting placeholder (`__`) value).\r\n     * @function module:functionOps.curry5_\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Takes a function that takes two parameters and returns a negated version of given\r\n     * function.\r\n     * @function module:functionOps.negateF\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Takes a function that takes three parameters and returns a\r\n     * negated version of given function.\r\n     * @function module:functionOps.negateF3\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Takes a function that takes four parameters and returns a\r\n     * negated version of given function.\r\n     * @function module:functionOps.negateF4\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Takes a function that takes four parameters and returns a\r\n     * negated version of given function.\r\n     * @function module:functionOps.negateF5\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Negates a javascript-'generic' predicate; `Function<element, index, list>`.\r\n     * @function module:functionOps.negateP\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Returns a new function which is the dual of `fn` (or the negated version of `fn`).\r\n     * @function module:functionOps.negateFMany\r\n     * @param fn {Function}\r\n     * @returns {Function}\r\n     */\r\n\r\n    /**\r\n     * Returns passed in parameter.\r\n     * @haskellType `id :: a -> a`\r\n     * @function module:functionOps.id\r\n     * @param x {*}\r\n     * @returns {*}\r\n     */\r\n\r\n    /**\r\n     * Composes all functions passed in from right to left passing each functions return value to\r\n     * the function on the left of itself.\r\n     * @function module:functionOps.compose\r\n     * @param args {...Function}\r\n     * @returns {Function}\r\n     */\n\n/**\r\n * @module _functionOps\r\n * @private\r\n */\n\n/**\r\n * Created by elydelacruz on 7/22/2017.\r\n * @module utils\r\n * @private\r\n */\r\n\r\nconst fPureTakesOne_ = name => curry((arg, f) => f[name](arg));\nconst fPureTakes2_ = name => curry((arg1, arg2, f) => f[name](arg1, arg2));\nconst fPureTakesOneOrMore_ = name => curry2((f, ...args) => f[name](...args));\n\n/**\r\n * Created by elyde on 7/20/2017.\r\n * Curried functional versions of common array methods (`filter`, `map`, etc.).\r\n * @module jsPlatform_array\r\n * @private\r\n */\r\n\r\nconst push$1 = fPureTakesOneOrMore_('push');\n\n/**\r\n * List operations that overlap (apart from globally overlapping props and functions like `length`)\r\n * on both strings and arrays.\r\n * @module jsPlatform_list\r\n * @private\r\n */\r\n\r\nconst slice$1 = curry(slice);\nconst includes$1 = curry(includes);\nconst indexOf$1 = curry(indexOf);\nconst lastIndexOf$1 = curry(lastIndexOf);\n\n/**\r\n * Created by elydelacruz on 9/6/2017.\r\n * @module jsPlatform_string\r\n * @private\r\n */\r\n\r\n/**\r\n * Functional version of `String.prototype.split`.\r\n * @curried\r\n * @function module:jsPlatform_string.split\r\n * @param separator {String|RegExp}\r\n * @param str {String}\r\n * @returns {Array}\r\n */\r\nconst split$1 = curry(split);\n\n/**\n * @module jsPlatform\n * @private\n */\n\n/**\r\n * List operators.\r\n * @module listOps\r\n * @todo decide whether to throw errors where functions cannot function without a specific type or to\r\n *  return undefined (and also determine which cases are ok for just returning undefined).\r\n */\r\nconst append = curry(_append);\nconst appendMany = curry2(_appendMany);\nconst concatMap = curry2(_concatMap);\nconst map$1 = curry(_map);\nconst intersperse = curry(_intersperse);\nconst intercalate = curry(_intercalate);\nconst foldl = curry(_foldl);\nconst foldr = curry(_foldr);\nconst foldl1 = curry(_foldl1);\nconst foldr1 = curry(_foldr1);\nconst mapAccumL = curry(_mapAccumL);\nconst mapAccumR = curry(_mapAccumR);\nconst iterate = curry(_iterate);\nconst repeat = curry(_repeat);\nconst replicate = curry(_replicate);\nconst cycle = curry(_cycle);\nconst unfoldr = curry(_unfoldr);\nconst findIndex = curry(_findIndex);\nconst findIndices = curry(_findIndices);\nconst elemIndex = curry(_elemIndex);\nconst elemIndices = curry(_elemIndices);\nconst take = curry(_take);\nconst drop = curry(_drop);\nconst splitAt = curry(_splitAt);\nconst takeWhile = curry(_takeWhile);\nconst dropWhile = curry(_dropWhile);\nconst dropWhileEnd = curry(_dropWhileEnd);\nconst span = curry(_span);\nconst breakOnList = curry(_breakOnList);\nconst at = curry(_at);\nconst find = curry(_find);\nconst filter$1 = curry(_filter);\nconst partition = curry(_partition);\nconst elem = curry(_elem);\nconst notElem = curry2(_notElem);\nconst lookup = curry(_lookup);\nconst isPrefixOf = curry(_isPrefixOf);\nconst isSuffixOf = curry(_isSuffixOf);\nconst isInfixOf = curry(_isInfixOf);\nconst isSubsequenceOf = curry(_isSubsequenceOf);\nconst groupBy = curry(_groupBy);\nconst stripPrefix = curry(_stripPrefix);\nconst zip = curry(_zip);\nconst zip3 = curry(_zip3);\nconst zip4 = curry(_zip4);\nconst zip5 = curry(_zip5);\nconst zipWith = curry(_zipWith);\nconst zipWithN = curry(_zipWithN);\nconst zipWith3 = curry(_zipWith3);\nconst zipWith4 = curry(_zipWith4);\nconst zipWith5 = curry(_zipWith5);\nconst any = curry(_any);\nconst all = curry(_all);\nconst scanl = curry(_scanl);\nconst scanl1 = curry(_scanl1);\nconst scanr = curry(_scanr);\nconst scanr1 = curry(_scanr1);\nconst remove = curry(_remove);\nconst sortOn = curry(_sortOn);\nconst sortBy = curry(_sortBy);\nconst insert = curry(_insert);\nconst insertBy = curry(_insertBy);\nconst nubBy = curry(_nubBy);\nconst removeBy = curry(_removeBy);\nconst removeFirstsBy = curry(_removeFirstsBy);\nconst unionBy = curry(_unionBy);\nconst union = curry(_union);\nconst intersect = curry(_intersect);\nconst intersectBy = curry(_intersectBy);\nconst difference = curry(_difference);\nconst complement = curry2(_complement);\n\n/**\r\n * Contains functions for operating strings.\r\n * @author elyde\r\n * @created 7/9/2017.\r\n * @module stringOps\r\n */\r\nconst lines = split$1(/[\\n\\r]/gm);\nconst words = split$1(/[\\s\\t]/gm);\nconst unwords = intercalate(' ');\nconst unlines = intercalate('\\n');\nconst lcaseFirst = xs => xs[0].toLowerCase() + xs.substring(1);\nconst ucaseFirst = xs => xs[0].toUpperCase() + xs.substring(1);\nconst camelCase = (xs, pattern) => _map(ucaseFirst, _splitAt(pattern || /[^a-z\\d]/i, xs));\n\n/**\r\n * Created by elyde on 12/6/2016.\r\n * @file fjl.js\r\n * @goal to include everything from haskell's Prelude where it makes sense in order to create\r\n *  a subset of functions which can make the javascript developer more efficient and make his/her\r\n *  code more concise (and functional).\r\n * @description Includes operations from haskell's Prelude.\r\n * @motivation preludejs, lodash/fp, RamdaJs, Haskell.\r\n * @see http://hackage.haskell.org/package/base-4.10.0.0/docs/Prelude.html\r\n * @see http://hackage.haskell.org/package/base-4.10.0.0/docs/Data-List.html\r\n * @module fjl\r\n */\n\nexport { instanceOf$1 as _instanceOf, isType$1 as _isType, hasOwnProperty$1 as _hasOwnProperty, assign$1 as _assign, prop$1 as _prop, assignDeep$1 as _assignDeep, objUnion$1 as _objUnion, objComplement$1 as _objComplement, objIntersect$1 as _objIntersect, objDifference$1 as _objDifference, prop$$1 as prop, instanceOf$$1 as instanceOf, hasOwnProperty$$1 as hasOwnProperty, assign$$1 as assign, assignDeep$$1 as assignDeep, objUnion$$1 as objUnion, objIntersect$$1 as objIntersect, objDifference$$1 as objDifference, objComplement$$1 as objComplement, isType$$1 as isType, length, keys, isFunction, isClass, isCallable, isArray, isObject, isBoolean, isNumber, isString, isMap, isSet, isWeakMap, isWeakSet, isUndefined, isNull, isSymbol, isUsableImmutablePrimitive, isEmptyList, isEmptyObject, isEmptyCollection, isEmpty, isset, typeOf, of, isTruthy, isFalsy, alwaysTrue, alwaysFalse, apply as _apply, call as _call, until$1 as _until, flip$1 as _flip, flip3$1 as _flip3, flip4$1 as _flip4, flip5$1 as _flip5, flipN$1 as _flipN, apply$1 as apply, call$1 as call, until$$1 as until, flipN$$1 as flipN, flip$$1 as flip, flip3$$1 as flip3, flip4$$1 as flip4, flip5$$1 as flip5, curry, curryN, curry2, curry3, curry4, curry5, curry_, curryN_, __, curry2_, curry3_, curry4_, curry5_, negateF, negateF3, negateF4, negateF5, negateP, negateFMany, id, compose, _and as and, _or as or, _not as not, _zipN as zipN, _unzip as unzip, _unzipN as unzipN, _concat as concat, _reverse as reverse, _transpose as transpose, _subsequences as subsequences, _permutations as permutations, _group as group, _tails as tails, _sum as sum, _product as product, _maximum as maximum, _minimum as minimum, _sort as sort, _nub as nub, _head as head, _last as last, _tail as tail, _init as init, _inits as inits, _uncons as uncons, _unconsr as unconsr, _subsequences1 as subsequences1, _swapped as swapped, append, appendMany, concatMap, map$1 as map, intersperse, intercalate, foldl, foldr, foldl1, foldr1, mapAccumL, mapAccumR, iterate, repeat, replicate, cycle, unfoldr, findIndex, findIndices, elemIndex, elemIndices, take, drop, splitAt, takeWhile, dropWhile, dropWhileEnd, span, breakOnList, at, find, filter$1 as filter, partition, elem, notElem, lookup, isPrefixOf, isSuffixOf, isInfixOf, isSubsequenceOf, groupBy, stripPrefix, zip, zip3, zip4, zip5, zipWith, zipWithN, zipWith3, zipWith4, zipWith5, any, all, scanl, scanl1, scanr, scanr1, remove, sortOn, sortBy, insert, insertBy, nubBy, removeBy, removeFirstsBy, unionBy, union, intersect, intersectBy, difference, complement, slice$1 as slice, includes$1 as includes, indexOf$1 as indexOf, lastIndexOf$1 as lastIndexOf, split$1 as split, push$1 as push, _map, _append, _appendMany, _head, _last, _tail, _init, _uncons, _unconsr, _concat, _concatMap, _reverse, _intersperse, _intercalate, _transpose, _subsequences, _subsequences1, _swapped, _permutations, _foldl, _foldr, _foldl1, _foldr1, _mapAccumL, _mapAccumR, _iterate, _repeat, _replicate, _cycle, _unfoldr, _findIndex, _findIndices, _elemIndex, _elemIndices, _take, _drop, _splitAt, _takeWhile, _dropWhile, _dropWhileEnd, _span, _breakOnList, _at, _find, _filter, _partition, _elem, _notElem, _lookup, _isPrefixOf, _isSuffixOf, _isInfixOf, _isSubsequenceOf, _group, _groupBy, _inits, _tails, _stripPrefix, _zip, _zipN, _zip3, _zip4, _zip5, _zipWith, _zipWithN, _zipWith3, _zipWith4, _zipWith5, _unzip, _unzipN, _any, _all, _and, _or, _not, _sum, _product, _maximum, _minimum, _scanl, _scanl1, _scanr, _scanr1, _nub, _remove, _sort, _sortOn, _sortBy, _insert, _insertBy, _nubBy, _removeBy, _removeFirstsBy, _unionBy, _union, _intersect, _intersectBy, _difference, _complement, lines, words, unwords, unlines, lcaseFirst, ucaseFirst, camelCase, fPureTakesOne_, fPureTakes2_, fPureTakesOneOrMore_, fPureTakesOne, fPureTakes2, fPureTakes3, fPureTakes4, fPureTakes5, fPureTakesOneOrMore, fnOrError, sliceFrom, sliceTo, copy, sliceCopy, genericAscOrdering, lengths, lengthsToSmallest, reduceUntil, reduceRightUntil, reduce$1 as reduce, reduceRight$1 as reduceRight, lastIndex, findIndexWhere, findIndexWhereRight, findIndicesWhere, findWhere, aggregateStr, aggregateArr, aggregateObj, aggregatorByType };\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\nexport default class Functor {\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n    valueOf() {\r\n        return this.value;\r\n    }\r\n    map(fn) {\r\n        return new this.constructor(fn(this.valueOf()));\r\n    }\r\n    fmap (fn) {\r\n        return this.map(fn);\r\n    }\r\n}\r\n","import {isFunction} from 'fjl';\r\nimport Functor from './functor/Functor';\r\n\r\nexport const\r\n    toFunction = x => isFunction(x) ? x : () => x,\r\n    alwaysFunctor = x => !x.map ? new Functor(x) : x\r\n;\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\n\r\nimport {toFunction} from '../utils';\r\nimport Functor from './Functor';\r\n\r\nexport default class Apply extends Functor {\r\n    ap (x) {\r\n        return x.map(toFunction(this.valueOf()));\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\nimport Apply from './Apply';\r\n\r\nexport default class Applicative extends Apply {\r\n    static of (value) {\r\n        return new Applicative(value);\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n * Basic `Monad` class.  Used to extend from to create `Maybe` and `Either` module/classes.\r\n * @module Monad\r\n * @see `Maybe` reference: http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Maybe.html\r\n * @see `Either` reference: http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Either.html\r\n */\r\n\r\nimport {curry} from 'fjl';\r\nimport Applicative from '../functor/Applicative';\r\n\r\nexport const\r\n    isMonad = value => value instanceof Monad,\r\n    valueOf = x => x.valueOf(),\r\n    join = x => x.join(),\r\n    fmap = curry((fn, x) => x.map(fn)),\r\n    ap = curry((applicative, functor) => applicative.ap(functor)),\r\n    flatMap = curry((fn, monad) => monad.flatMap(fn));\r\n\r\nexport default class Monad extends Applicative {\r\n    join () {\r\n        return this.valueOf();\r\n    }\r\n    flatMap (fn) {\r\n        const out = fn(this.join());\r\n        return !(out instanceof this.constructor) ?\r\n            this.constructor.of(out) : out;\r\n    }\r\n    chain (fn) {\r\n        return this.flatMap(fn);\r\n    }\r\n    static of (x) { return new Monad(x); }\r\n    static isMonad (x) { return isMonad(x); }\r\n}\r\n","/**\r\n * Created by elydelacruz on 2/19/2017.\r\n */\r\n\r\n'use strict';\r\n\r\nimport Monad from '../monad/Monad';\r\nimport {toFunction} from '../utils';\r\n\r\nexport default class IO extends Monad {\r\n    constructor(fn) {\r\n        super(toFunction(fn));\r\n    }\r\n\r\n    static of(fn) {\r\n        return new IO(fn);\r\n    }\r\n\r\n    static isIO (x) {\r\n        return x instanceof IO;\r\n    }\r\n\r\n    fork () {\r\n        return this.map(fn => fn());\r\n    }\r\n\r\n    do (...args) {\r\n        return IO.of(this.join()(...args));\r\n    }\r\n\r\n    unsafePerformIO (...args) {\r\n        return this.do(...args);\r\n    }\r\n}\r\n","import {map, filter, length, id} from 'fjl';\r\n\r\nimport IO from '../../io/IO';\r\n\r\nclass Pos {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nclass Pointer {\r\n    constructor (board, pos) {\r\n        this.board = board;\r\n        this.pos = pos;\r\n    }\r\n    updatePos (pos) {\r\n        return new Pointer(this.board, pos);\r\n    }\r\n    extract () {\r\n        return this.board[this.pos.x][this.pos.y];\r\n    }\r\n    extend (f) {\r\n        let board = [], x, y;\r\n        for (x = 0; x < this.board.length; x++) {\r\n            board[x] = [];\r\n            for (y = 0; y < this.board[x].length; y++) {\r\n                board[x][y] = f(new Pointer(this.board, new Pos(x, y)));\r\n            }\r\n        }\r\n        return new Pointer(board, this.pos);\r\n    }\r\n}\r\n\r\nconst\r\n    SIZE = 100,\r\n    SCALE = 8,\r\n\r\n    posInBounds = pos =>\r\n        pos.x >= 0 && pos.y >= 0 &&\r\n        pos.x < SIZE && pos.y < SIZE,\r\n\r\n    pointerNeighbours = pointer => {\r\n        let offsets = [\r\n                new Pos(-1, -1),\r\n                new Pos(-1, 0),\r\n                new Pos(-1, 1),\r\n                new Pos(0, -1),\r\n                new Pos(0, 1),\r\n                new Pos(1, -1),\r\n                new Pos(1, 0),\r\n                new Pos(1, 1)\r\n            ],\r\n            positions = filter(\r\n                map(offset =>\r\n                    new Pos(\r\n                        pointer.pos.x + offset.x,\r\n                        pointer.pos.y + offset.y\r\n                    ),\r\n                    offsets\r\n                ),\r\n                posInBounds\r\n            );\r\n        return map(pos => pointer.updatePos(pos).extract(), positions);\r\n    },\r\n\r\n    liveNeighbours = pointer =>\r\n        length(filter(id, pointerNeighbours(pointer))),\r\n\r\n    rules = pointer => {\r\n        let c = pointer.extract(),\r\n            n = liveNeighbours(pointer);\r\n\r\n        return c && (n < 2 || n > 3) ?\r\n            false : (c && n === 2) || n === 3 || c;\r\n    },\r\n\r\n    step = board =>\r\n        new Pointer(board, new Pos(0, 0)).extend(rules).board,\r\n\r\n    generateBoard = () =>\r\n        IO.of(() => {\r\n            let board = [], x, y;\r\n            for (x = 0; x < SIZE; x++) {\r\n                board[x] = [];\r\n                for (y = 0; y < SIZE; y++) {\r\n                    board[x][y] = Math.random() > 0.5;\r\n                }\r\n            }\r\n            return board;\r\n        }),\r\n\r\n    drawBoard = (canvas, board) =>\r\n        IO.of(() => {\r\n            let x, y;\r\n            for (x = 0; x < board.length; x++) {\r\n                for (y = 0; y < board[x].length; y++) {\r\n                    if (board[x][y]) {\r\n                        canvas.fillRect(x, y, 1, 1);\r\n                    } else {\r\n                        canvas.clearRect(x, y, 1, 1);\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n    loop = (canvas, board) =>\r\n        drawBoard(canvas, board)\r\n            .flatMap(() => loop(canvas, step(board)).fork()),\r\n\r\n    main = () => {\r\n        const\r\n            element = document.getElementById('game-of-comonads'),\r\n            canvas = element.getContext('2d');\r\n\r\n        return IO.of(() => {\r\n            element.width = SIZE * SCALE;\r\n            element.height = SIZE * SCALE;\r\n            canvas.scale(SCALE, SCALE);\r\n        })\r\n            .flatMap(generateBoard)\r\n            .flatMap(loop)\r\n\r\n            // Perform effects!\r\n            .unsafePerformIO(); // Could also call `do` here (instead)\r\n    };\r\n\r\nwindow.addEventListener('load', main);\r\n"],"names":["_Number","Number","name","_NaN","_Null","_Undefined","typeOf","value","retVal","undefined","constructorName","constructor","isNaN","fPureTakesOne","arg","f","fPureTakes2","arg1","arg2","fPureTakesOneOrMore","args","fnOrError","symbolName","Function","Error","instanceOf$1","instanceConstructor","instance","hasOwnProperty$1","length","x","keys","Object","obj","assign$1","assign","obj0","objs","reduce","topAgg","agg","key","concat","slice","includes","Array","prototype","xs","indexOf","lastIndexOf","split","apply","fn","call","notFnErrPrefix","curry","argsToCurry","curryN","executeArity","curriedArgs","concatedArgs","canBeCalled","curry2","prop$1","_Object","_Function","isFunction","isType$1","type","isObject","assignDeep$1","propDescription","getOwnPropertyDescriptor","get","set","writable","negateF","a","b","negateF3","c","negateP","alwaysFalse","_map","ind","limit","out","push","aggregateArr","item","sliceFrom","startInd","arr","sliceTo","toInd","copy","genericAscOrdering","lengths","lists","lengthsToSmallest","listLengths","smallLen","Math","min","list","reduceUntil","pred","op","result","reduceRightUntil","reduce$1","operation","reduceRight$1","lastIndex","len","findIndexWhere","predicateFulfilled","findIndexWhereRight","findIndicesWhere","findWhere","elm","_append","_appendMany","_head","_last","_tail","_init","_uncons","_unconsr","_concat","_concatMap","foldableOfA","_intersperse","between","lastInd","_foldl","_intercalate","xss","_foldr","_foldl1","parts","_foldr1","_mapAccumL","zero","mapped","tuple","_mapAccumR","_iterate","lastX","_repeat","_replicate","_cycle","_unfoldr","resultTuple","_findIndex","_findIndices","_elemIndex","foundInd","_elemIndices","_take","_drop","count","_splitAt","_takeWhile","_dropWhile","splitPoint","list2","_dropWhileEnd","_span","_breakOnList","_at","_find","_filter","_partition","_elem","_notElem","_lookup","_isPrefixOf","xs1","xs2","limit1","limit2","_isSuffixOf","ind1","ind2","_isInfixOf","foundLen","_isSubsequenceOf","pow","lenXs1","i","j","_groupBy","equalityOp","prevItem","predOp","_stripPrefix","prefix","_zip","arr1","arr2","a1","a2","_zipN","trimmedLists","lenOfTrimmed","_zip3","arr3","_zip4","arr4","_zip5","arr5","_zipWith","_zipWithN","_zipWith3","xs3","_zipWith4","xs4","_zipWith5","xs5","_any","p","_all","_scanl","_scanl1","_scanr","_scanr1","_remove","_removeBy","_sortOn","valueFn","decorated","a0","b0","_sortBy","orderingFn","sort","_insert","foundIndex","_insertBy","_nubBy","currItem","anyOp","storedItem","_removeFirstsBy","_unionBy","alreadyAdded","_union","_intersect","_intersectBy","list1","_difference","array1","array2","_complement","arr0","arrays","objUnion$1","obj1","obj2","objIntersect$1","objDifference$1","objComplement$1","prop$$1","instanceOf$$1","hasOwnProperty$$1","assign$$1","assignDeep$$1","objUnion$$1","objIntersect$$1","objDifference$$1","objComplement$$1","isType$$1","until$1","predicate","typeInstance","PlaceHolder","placeHolderInstance","__","freeze","id","apply$1","call$1","until$$1","fPureTakesOneOrMore_","push$1","slice$1","includes$1","indexOf$1","lastIndexOf$1","split$1","append","appendMany","concatMap","map$1","intersperse","intercalate","foldl","foldr","foldl1","foldr1","mapAccumL","mapAccumR","iterate","repeat","replicate","cycle","unfoldr","findIndex","findIndices","elemIndex","elemIndices","take","drop","splitAt","takeWhile","dropWhile","dropWhileEnd","span","breakOnList","at","find","filter$1","partition","elem","notElem","lookup","isPrefixOf","isSuffixOf","isInfixOf","isSubsequenceOf","groupBy","stripPrefix","zip","zip3","zip4","zip5","zipWith","zipWithN","zipWith3","zipWith4","zipWith5","any","all","scanl","scanl1","scanr","scanr1","remove","sortOn","sortBy","insert","insertBy","nubBy","removeBy","removeFirstsBy","unionBy","union","intersect","intersectBy","difference","complement","lines","words","unwords","unlines","Functor","valueOf","map","toFunction","Apply","Applicative","isMonad","Monad","fmap","ap","applicative","functor","flatMap","monad","join","of","IO","do","Pos","y","Pointer","board","pos","SIZE","SCALE","posInBounds","pointerNeighbours","offsets","positions","filter","pointer","offset","updatePos","extract","liveNeighbours","rules","n","step","extend","generateBoard","random","drawBoard","canvas","fillRect","clearRect","loop","fork","main","element","document","getElementById","getContext","width","height","scale","unsafePerformIO","window","addEventListener"],"mappings":"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"}