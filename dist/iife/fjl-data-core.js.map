{"version":3,"file":"fjl-data-core.js","sources":["../../src/functor/Functor.js","../../src/utils.js","../../src/functor/Apply.js","../../src/functor/Applicative.js","../../src/functor/Bifunctor.js","../../src/monad/Monad.js","../../src/io/IO.js","../../src/maybe/Nothing.js","../../src/maybe/Just.js","../../src/maybe/Maybe.js","../../src/either/Either.js","../../src/fjlDataCore.js"],"sourcesContent":["/**\r\n * Created by edlc on 12/9/16.\r\n */\r\nexport default class Functor {\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n    valueOf() {\r\n        return this.value;\r\n    }\r\n    map(fn) {\r\n        return new this.constructor(fn(this.valueOf()));\r\n    }\r\n    fmap (fn) {\r\n        return this.map(fn);\r\n    }\r\n}\r\n","import {isFunction} from 'fjl';\r\nimport Functor from './functor/Functor';\r\n\r\nexport const\r\n    toFunction = x => isFunction(x) ? x : () => x,\r\n    alwaysFunctor = x => !x.map ? new Functor(x) : x\r\n;\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\n\r\nimport {toFunction} from '../utils';\r\nimport Functor from './Functor';\r\n\r\nexport default class Apply extends Functor {\r\n    ap (x) {\r\n        return x.map(toFunction(this.valueOf()));\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\nimport Apply from './Apply';\r\n\r\nexport default class Applicative extends Apply {\r\n    static of (value) {\r\n        return new Applicative(value);\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\nimport Functor from './Functor';\r\n\r\nexport default class Bifunctor extends Functor {\r\n    constructor(value1, value2) {\r\n        super(value1);\r\n        this.value2 = value2;\r\n    }\r\n\r\n    value2Of() {\r\n        return this.value2;\r\n    }\r\n\r\n    first (fn) {\r\n        return new this.constructor(fn(this.valueOf()), this.value2Of());\r\n    }\r\n\r\n    second (fn) {\r\n        return new this.constructor(this.valueOf(), fn(this.value2Of()));\r\n    }\r\n\r\n    bimap (fn1, fn2) {\r\n        return new this.constructor(\r\n            fn1(this.valueOf()),\r\n            fn2(this.value2Of())\r\n        );\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n * Basic `Monad` class.  Used to extend from to create `Maybe` and `Either` module/classes.\r\n * @module Monad\r\n * @see `Maybe` reference: http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Maybe.html\r\n * @see `Either` reference: http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Either.html\r\n */\r\n\r\nimport {apply, isset, curry, isFunction, instanceOf} from 'fjl';\r\nimport Applicative from '../functor/Applicative';\r\n\r\nexport const\r\n    isMonad = value => value instanceof Monad,\r\n    valueOf = x => x.valueOf(),\r\n    join = x => x.join(),\r\n    fmap = curry((fn, x) => x.map(fn)),\r\n    ap = curry((applicative, functor) => applicative.ap(functor)),\r\n    flatMap = curry((fn, monad) => monad.flatMap(fn)),\r\n\r\n    getMonadUnWrapper = Type => {\r\n        const isTypeToUnWrap = instanceOf(Type);\r\n        return function unWrapMonadByType (monad) {\r\n            return isTypeToUnWrap(monad) ? function trampolineCall () {\r\n                return unWrapMonadByType(monad.valueOf());\r\n            } : monad;\r\n        };\r\n    },\r\n\r\n    trampoline = fn => {\r\n        return (...args) => {\r\n            let result = apply(fn, args);\r\n            while (isset(result) &&\r\n                result.name === 'trampolineCall' &&\r\n                isFunction(result)\r\n            ) {\r\n                result = result();\r\n            }\r\n            return result;\r\n        };\r\n    };\r\n\r\nexport default class Monad extends Applicative {\r\n    static unWrapMonadByType (Type, monad) {\r\n        if (!isset(monad)) { return monad; }\r\n        const unwrap = trampoline(getMonadUnWrapper(Type));\r\n        return unwrap(monad);\r\n    }\r\n    join () {\r\n        return Monad.unWrapMonadByType(this.constructor, this);\r\n    }\r\n    flatMap (fn) {\r\n        const out = Monad.unWrapMonadByType(this.constructor, fn(this.join()));\r\n        return this.constructor.of(out);\r\n    }\r\n    chain (fn) {\r\n        return this.flatMap(fn);\r\n    }\r\n    static of (x) { return new Monad(x); }\r\n    static isMonad (x) { return isMonad(x); }\r\n}\r\n","/**\r\n * Created by elydelacruz on 2/19/2017.\r\n */\r\n\r\nimport Monad from '../monad/Monad';\r\nimport {toFunction} from '../utils';\r\nimport {compose} from 'fjl';\r\n// import {defineEnumProps} from 'fjl-mutable';\r\n\r\nexport default class IO extends Monad {\r\n    static unWrapIO (io) {\r\n        if (!IO.isIO(io)) { return io; }\r\n        return Monad.unWrapMonadByType(IO, io);\r\n    }\r\n    static of(fn) {\r\n        return new IO(fn);\r\n    }\r\n    static isIO (x) {\r\n        return x instanceof IO;\r\n    }\r\n    static do (io, ...args) {\r\n        const instance = !IO.isIO(io) ? new IO(io) : io;\r\n        return compose(\r\n            IO.of,\r\n            IO.unWrapIO\r\n        )(\r\n            toFunction(instance.join())(...args)\r\n        );\r\n    }\r\n\r\n    constructor(fn) {\r\n        super(toFunction(fn));\r\n        // Enforce `value` field validation\r\n        // defineEnumProps([[Function, 'value', this.value]], this);\r\n    }\r\n\r\n    flatMap (fn) {\r\n        return compose(\r\n            this.constructor.of,\r\n            IO.unWrapIO, fn,\r\n            IO.unWrapIO\r\n        )(\r\n            toFunction(this.join())()\r\n        );\r\n    }\r\n\r\n    map (fn) {\r\n        return compose(\r\n            this.constructor.of,\r\n            fn\r\n        )(\r\n            toFunction(this.valueOf())()\r\n        );\r\n    }\r\n}\r\n","let NothingSingleton;\r\n\r\nfunction Nothing () {\r\n    if (NothingSingleton) {\r\n        return NothingSingleton;\r\n    }\r\n    else if (!(this instanceof Nothing)) {\r\n        return new Nothing();\r\n    }\r\n    NothingSingleton = this;\r\n    Object.freeze(NothingSingleton);\r\n}\r\n\r\nconst isNothing = x => x === NothingSingleton,\r\n\r\n    nothing = () => new Nothing(),\r\n\r\n    // Prototypical stuff\r\n    returnThis = function () { return this; },\r\n    {prototype} = Nothing;\r\n\r\n// Methods\r\nprototype.valueOf   = returnThis;\r\nprototype.join      = returnThis;\r\nprototype.map       = returnThis;\r\nprototype.ap        = returnThis;\r\nprototype.flatMap   = returnThis;\r\n\r\n// Set statics\r\nNothing.of  = () => new Nothing();\r\nNothing.isNothing = isNothing;\r\nNothing.nothing = nothing;\r\n\r\n// Object.freeze makes properties on object immutable\r\n// @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\r\n// Saves us from having to do the following (great!):\r\n// Object.defineProperties(Nothing, {\r\n//     of: {value: () => new Nothing(), enumerable: true},\r\n//     isNothing: {value: isNothing, enumerable: true}\r\n// });\r\nObject.freeze(Nothing);\r\n\r\nexport {isNothing, nothing};\r\n\r\nexport default Nothing;\r\n","import Nothing, {isNothing} from './Nothing';\r\nimport Monad from '../monad/Monad';\r\nimport {isset} from 'fjl';\r\n\r\nexport const\r\n    isJust = x => x instanceof Just,\r\n    just = x => new Just(x)\r\n;\r\n\r\nexport default class Just extends Monad {\r\n    map (fn) {\r\n        const {constructor} = this,\r\n            value = this.valueOf();\r\n        return isset(value) && !isNothing(value) ? constructor.of(fn(value)) :\r\n            constructor.counterConstructor.of(value);\r\n    }\r\n    static of (x) { return just(x); }\r\n    static isJust (x) { return isJust(x); }\r\n}\r\n\r\nJust.counterConstructor = Nothing;\r\n","import Just, {isJust, just} from './Just';\r\nimport Nothing, {isNothing, nothing} from './Nothing';\r\nimport {isset, curry, id} from 'fjl';\r\n\r\nexport {Just, isJust, isNothing, Nothing, just, nothing};\r\n\r\nexport const\r\n    /**\r\n     * @param replacement {*}\r\n     * @param fn {Function} - Some operation.\r\n     * @param maybeInst {(Nothing|Just|*)} - Maybe instance or non\r\n     */\r\n    maybe = curry((replacement, fn, maybeInst) => {\r\n        const subject = isset(maybeInst) && isMaybe(maybeInst) ? maybeInst.map(id) : Nothing.of();\r\n        return isNothing(subject) ? replacement : subject.map(fn).join();\r\n    }),\r\n\r\n    isMaybe = x => isNothing(x) || isJust(x),\r\n\r\n    toMaybe = x => isset(x) ? just(x) : nothing()\r\n\r\n;\r\n","/**\r\n * Created by elyde on 12/10/2016.\r\n */\r\nimport {isset, curry, id} from 'fjl';\r\nimport {Just} from '../maybe/Maybe';\r\nimport Monad from '../monad/Monad';\r\nimport {alwaysFunctor, toFunction} from '../utils';\r\n\r\nexport class Left extends Monad {\r\n    static of (x) { return new Left(x); }\r\n}\r\n\r\nexport class Right extends Just {\r\n    map (fn) {\r\n        const value = this.valueOf();\r\n        if (isLeft(value)) {\r\n            return value;\r\n        }\r\n        else if (!isset(value)) {\r\n            return Left.of(\r\n                `TypeError: Cannot operate on \\`null\\` and/or \\`undefined\\`.  ` +\r\n                `Value given \\`${value}\\`.`\r\n            );\r\n        }\r\n        return Right.of(fn(value));\r\n    }\r\n\r\n    static of (x) { return new Right(x); }\r\n}\r\n\r\nexport const\r\n\r\n    isRight = x => x instanceof Right,\r\n\r\n    isLeft = x => x instanceof Left,\r\n\r\n    either = curry((leftCallback, rightCallback, monad) => {\r\n        const identity = alwaysFunctor(monad).map(id);\r\n        switch (identity.constructor) {\r\n            case Left:\r\n                return identity.map(toFunction(leftCallback)).join();\r\n            case Right:\r\n                return identity.map(toFunction(rightCallback)).join();\r\n            default:\r\n                return Left.of(monad).map(leftCallback).join();\r\n        }\r\n    });\r\n","/**\r\n * Created by elydelacruz on 2/19/2017.\r\n * @module fjlDataCore\r\n * Core monad types (useful for javascript).\r\n */\r\nimport Functor from './functor/Functor';\r\nimport Apply from './functor/Apply';\r\nimport Applicative from './functor/Applicative';\r\nimport Bifunctor from './functor/Bifunctor';\r\nimport Monad, {isMonad, valueOf, join, fmap,\r\n    ap, flatMap, getMonadUnWrapper, trampoline} from './monad/Monad';\r\nimport IO from './io/IO';\r\n\r\nexport {\r\n    Functor, Apply, Applicative, Bifunctor, IO, Monad,\r\n    isMonad, valueOf, join, fmap, ap, flatMap, getMonadUnWrapper,\r\n    trampoline\r\n};\r\n\r\nexport * from './maybe/Maybe';\r\nexport * from './either/Either';\r\nexport * from './utils';\r\n"],"names":["Functor","value","fn","constructor","valueOf","map","toFunction","x","isFunction","alwaysFunctor","Apply","Applicative","Bifunctor","value1","value2","value2Of","fn1","fn2","isMonad","Monad","join","fmap","curry","ap","applicative","functor","flatMap","monad","getMonadUnWrapper","Type","isTypeToUnWrap","instanceOf","unWrapMonadByType","trampolineCall","trampoline","args","result","apply","isset","name","out","of","unwrap","IO","io","isIO","instance","compose","unWrapIO","NothingSingleton","Nothing","Object","freeze","isNothing","nothing","returnThis","prototype","isJust","Just","just","counterConstructor","maybe","replacement","maybeInst","subject","isMaybe","id","toMaybe","Left","Right","isLeft","isRight","either","leftCallback","rightCallback","identity"],"mappings":"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"}