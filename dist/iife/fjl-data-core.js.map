{"version":3,"file":"fjl-data-core.js","sources":["../../src/functor/Functor.js","../../src/utils.js","../../src/functor/Apply.js","../../src/functor/Applicative.js","../../src/monad/Monad.js","../../src/maybe/Nothing.js","../../src/maybe/Just.js","../../src/maybe/Maybe.js","../../src/either/Either.js","../../src/io/IO.js","../../src/fjlDataCore.js"],"sourcesContent":["/**\r\n * Created by edlc on 12/9/16.\r\n */\r\nexport default class Functor {\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n    valueOf() {\r\n        return this.value;\r\n    }\r\n    map(fn) {\r\n        return new this.constructor(fn(this.valueOf()));\r\n    }\r\n    fmap (fn) {\r\n        return this.map(fn);\r\n    }\r\n}\r\n","import {isFunction} from 'fjl';\r\nimport Functor from './functor/Functor';\r\n\r\nexport const\r\n    toFunction = x => isFunction(x) ? x : () => x,\r\n    alwaysFunctor = x => !x.map ? new Functor(x) : x\r\n;\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\n\r\nimport {toFunction} from '../utils';\r\nimport Functor from './Functor';\r\n\r\nexport default class Apply extends Functor {\r\n    ap (x) {\r\n        return x.map(toFunction(this.valueOf()));\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\nimport Apply from './Apply';\r\n\r\nexport default class Applicative extends Apply {\r\n    static of (value) {\r\n        return new Applicative(value);\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n * Basic `Monad` class.  Used to extend from to create `Maybe` and `Either` module/classes.\r\n * @module Monad\r\n * @see `Maybe` reference: http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Maybe.html\r\n * @see `Either` reference: http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Either.html\r\n */\r\n\r\nimport {apply, isset, curry, isFunction, instanceOf} from 'fjl';\r\nimport Applicative from '../functor/Applicative';\r\n\r\nexport const\r\n    isMonad = value => value instanceof Monad,\r\n    valueOf = x => x.valueOf(),\r\n    join = x => x.join(),\r\n    fmap = curry((fn, x) => x.map(fn)),\r\n    ap = curry((applicative, functor) => applicative.ap(functor)),\r\n    flatMap = curry((fn, monad) => monad.flatMap(fn)),\r\n\r\n    getMonadUnWrapper = Type => {\r\n        const isTypeToUnWrap = instanceOf(Type);\r\n        return function unWrapMonadByType (monad) {\r\n            return isTypeToUnWrap(monad) ? function trampolineCall () {\r\n                return unWrapMonadByType(monad.valueOf());\r\n            } : monad;\r\n        };\r\n    },\r\n\r\n    trampoline = fn => {\r\n        return (...args) => {\r\n            let result = apply(fn, args);\r\n            while (isset(result) &&\r\n                result.name === 'trampolineCall' &&\r\n                isFunction(result)\r\n            ) {\r\n                result = result();\r\n            }\r\n            return result;\r\n        };\r\n    };\r\n\r\nexport default class Monad extends Applicative {\r\n    static unWrapMonadByType (Type, monad) {\r\n        if (!isset(monad)) { return monad; }\r\n        const unwrap = trampoline(getMonadUnWrapper(Type));\r\n        return unwrap(monad);\r\n    }\r\n    join () {\r\n        return Monad.unWrapMonadByType(this.constructor, this);\r\n    }\r\n    flatMap (fn) {\r\n        const out = Monad.unWrapMonadByType(this.constructor, fn(this.join()));\r\n        return this.constructor.of(out);\r\n    }\r\n    chain (fn) {\r\n        return this.flatMap(fn);\r\n    }\r\n    static of (x) { return new Monad(x); }\r\n    static isMonad (x) { return isMonad(x); }\r\n}\r\n","let NothingSingleton;\r\n\r\nfunction Nothing () {\r\n    if (NothingSingleton) {\r\n        return NothingSingleton;\r\n    }\r\n    else if (!(this instanceof Nothing)) {\r\n        return new Nothing();\r\n    }\r\n    NothingSingleton = this;\r\n    Object.freeze(NothingSingleton);\r\n}\r\n\r\nconst isNothing = x => x === NothingSingleton,\r\n\r\n    // Prototypical stuff\r\n    returnThis = function () { return this; },\r\n    {prototype} = Nothing;\r\n\r\n// Methods\r\nprototype.valueOf   = returnThis;\r\nprototype.join      = returnThis;\r\nprototype.map       = returnThis;\r\nprototype.ap        = returnThis;\r\nprototype.flatMap   = returnThis;\r\n\r\n// Set statics\r\nNothing.of  = () => new Nothing();\r\nNothing.isNothing = isNothing;\r\n\r\n// Object.freeze makes properties on object immutable\r\n// @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\r\n// Saves us from having to do the following (great!):\r\n// Object.defineProperties(Nothing, {\r\n//     of: {value: () => new Nothing(), enumerable: true},\r\n//     isNothing: {value: isNothing, enumerable: true}\r\n// });\r\nObject.freeze(Nothing);\r\n\r\nexport {isNothing};\r\n\r\nexport default Nothing;\r\n","import Nothing, {isNothing} from './Nothing';\r\nimport Monad from '../monad/Monad';\r\nimport {isset} from 'fjl';\r\n\r\nexport const isJust = x => x instanceof Just;\r\n\r\nexport default class Just extends Monad {\r\n    map (fn) {\r\n        const {constructor} = this,\r\n            value = this.valueOf();\r\n        return isset(value) && !isNothing(value) ? constructor.of(fn(value)) :\r\n            constructor.counterConstructor.of(value);\r\n    }\r\n    static of (x) { return new Just(x); }\r\n    static isJust (x) { return isJust(x); }\r\n}\r\n\r\nJust.counterConstructor = Nothing;\r\n","import Just, {isJust} from './Just';\r\nimport Nothing, {isNothing} from './Nothing';\r\nimport {isset, curry, id} from 'fjl';\r\n\r\nexport {Just, isJust, isNothing, Nothing};\r\n\r\nexport const\r\n    /**\r\n     * @param replacement {*}\r\n     * @param fn {Function} - Some operation.\r\n     * @param maybeInst {(Nothing|Just|*)} - Maybe instance or non\r\n     */\r\n    maybe = curry((replacement, fn, maybeInst) => {\r\n        const subject = isset(maybeInst) && isMaybe(maybeInst) ? maybeInst.map(id) : Nothing.of();\r\n        return isNothing(subject) ? replacement : subject.map(fn).join();\r\n    }),\r\n\r\n    isMaybe = x => isNothing(x) || isJust(x);\r\n\r\nfunction Maybe (x) {\r\n    return isset(x) ? Just.of(x) : Nothing.of();\r\n}\r\n\r\nMaybe.of = x => Maybe(x);\r\n\r\nexport default Maybe;\r\n","/**\r\n * Created by elyde on 12/10/2016.\r\n */\r\n\r\nimport {isset, curry, id} from 'fjl';\r\nimport {Just} from '../maybe/Maybe';\r\nimport Monad from '../monad/Monad';\r\nimport {alwaysFunctor, toFunction} from '../utils';\r\n\r\nclass Left extends Monad {\r\n    static of (x) { return new Left(x); }\r\n}\r\n\r\nclass Right extends Just {\r\n    map (fn) {\r\n        const value = this.valueOf();\r\n        if (isLeft(value)) {\r\n            return value;\r\n        }\r\n        else if (!isset(value)) {\r\n            return Left.of(\r\n                `TypeError: Cannot operate on \\`null\\` and/or \\`undefined\\`.  ` +\r\n                `Value given \\`${value}\\`.`\r\n            );\r\n        }\r\n        return Right.of(fn(value));\r\n    }\r\n\r\n    static of (x) { return new Right(x); }\r\n}\r\n\r\nexport const\r\n\r\n    isRight = x => x instanceof Right,\r\n\r\n    isLeft = x => x instanceof Left,\r\n\r\n    either = curry((leftCallback, rightCallback, monad) => {\r\n        const identity = alwaysFunctor(monad).map(id);\r\n        switch (identity.constructor) {\r\n            case Left:\r\n                return identity.map(toFunction(leftCallback)).join();\r\n            case Right:\r\n                return identity.map(toFunction(rightCallback)).join();\r\n            default:\r\n                return Left.of(monad).map(leftCallback).join();\r\n        }\r\n    });\r\n\r\nexport {Left, Right};\r\n","/**\r\n * Created by elydelacruz on 2/19/2017.\r\n */\r\n\r\nimport Monad from '../monad/Monad';\r\nimport {toFunction} from '../utils';\r\nimport {compose} from 'fjl';\r\n// import {defineEnumProps} from 'fjl-mutable';\r\n\r\nexport default class IO extends Monad {\r\n    static unWrapIO (io) {\r\n        if (!IO.isIO(io)) { return io; }\r\n        return Monad.unWrapMonadByType(IO, io);\r\n    }\r\n    static of(fn) {\r\n        return new IO(fn);\r\n    }\r\n    static isIO (x) {\r\n        return x instanceof IO;\r\n    }\r\n    static do (io, ...args) {\r\n        const instance = !IO.isIO(io) ? new IO(io) : io;\r\n        return compose(\r\n            IO.of,\r\n            IO.unWrapIO\r\n        )(\r\n            toFunction(instance.join())(...args)\r\n        );\r\n    }\r\n\r\n    constructor(fn) {\r\n        super(toFunction(fn));\r\n        // Enforce `value` field validation\r\n        // defineEnumProps([[Function, 'value', this.value]], this);\r\n    }\r\n\r\n    flatMap (fn) {\r\n        return compose(\r\n            this.constructor.of,\r\n            IO.unWrapIO, fn,\r\n            IO.unWrapIO\r\n        )(\r\n            toFunction(this.join())()\r\n        );\r\n    }\r\n\r\n    map (fn) {\r\n        return compose(\r\n            this.constructor.of,\r\n            fn\r\n        )(\r\n            toFunction(this.valueOf())()\r\n        );\r\n    }\r\n}\r\n","/**\r\n * Created by elydelacruz on 2/19/2017.\r\n * @module fjlDataCore\r\n * Core monad types (useful for javascript).\r\n */\r\nexport * from './monad/Monad';\r\nexport * from './maybe/Maybe';\r\nexport * from './either/Either';\r\nexport * from './io/IO';\r\nexport * from './utils';\r\n"],"names":["Functor","value","fn","constructor","valueOf","map","toFunction","isFunction","x","alwaysFunctor","Apply","Applicative","isMonad","Monad","join","fmap","curry","ap","applicative","functor","flatMap","monad","getMonadUnWrapper","isTypeToUnWrap","instanceOf","Type","unWrapMonadByType","trampolineCall","trampoline","args","result","apply","isset","name","out","of","unwrap","NothingSingleton","Nothing","freeze","isNothing","returnThis","prototype","Object","isJust","Just","counterConstructor","maybe","replacement","maybeInst","subject","isMaybe","id","Left","Right","isLeft","isRight","either","leftCallback","rightCallback","identity","IO","io","isIO","instance","compose","unWrapIO"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;IAGqBA;qBACLC,KAAZ,EAAmB;;;aACVA,KAAL,GAAaA,KAAb;;;;;kCAEM;mBACC,KAAKA,KAAZ;;;;4BAEAC,IAAI;mBACG,IAAI,KAAKC,WAAT,CAAqBD,GAAG,KAAKE,OAAL,EAAH,CAArB,CAAP;;;;6BAEEF,IAAI;mBACC,KAAKG,GAAL,CAASH,EAAT,CAAP;;;;;;ACXD,IACHI,aAAa,SAAbA,UAAa;WAAKC,eAAWC,CAAX,IAAgBA,CAAhB,GAAoB;eAAMA,CAAN;KAAzB;CADV;IAEHC,gBAAgB,SAAhBA,aAAgB;WAAK,CAACD,EAAEH,GAAH,GAAS,IAAIL,OAAJ,CAAYQ,CAAZ,CAAT,GAA0BA,CAA/B;CAFb;;ACHP;;;;AAIA,IAGqBE;;;;;;;;;;2BACbF,GAAG;mBACIA,EAAEH,GAAF,CAAMC,WAAW,KAAKF,OAAL,EAAX,CAAN,CAAP;;;;EAF2BJ;;ACPnC;;;AAGA,IAEqBW;;;;;;;;;;2BACNV,OAAO;mBACP,IAAIU,WAAJ,CAAgBV,KAAhB,CAAP;;;;EAFiCS;;ACLzC;;;;;;;;AAQA,AAGO,IACHE,WAAU,SAAVA,QAAU;WAASX,iBAAiBY,KAA1B;CADP;IAEHT,UAAU,SAAVA,OAAU;WAAKI,EAAEJ,OAAF,EAAL;CAFP;IAGHU,OAAO,SAAPA,IAAO;WAAKN,EAAEM,IAAF,EAAL;CAHJ;IAIHC,OAAOC,UAAM,UAACd,EAAD,EAAKM,CAAL;WAAWA,EAAEH,GAAF,CAAMH,EAAN,CAAX;CAAN,CAJJ;IAKHe,KAAKD,UAAM,UAACE,WAAD,EAAcC,OAAd;WAA0BD,YAAYD,EAAZ,CAAeE,OAAf,CAA1B;CAAN,CALF;IAMHC,UAAUJ,UAAM,UAACd,EAAD,EAAKmB,KAAL;WAAeA,MAAMD,OAAN,CAAclB,EAAd,CAAf;CAAN,CANP;IAQHoB,oBAAoB,SAApBA,iBAAoB,OAAQ;QAClBC,iBAAiBC,eAAWC,IAAX,CAAvB;WACO,SAASC,iBAAT,CAA4BL,KAA5B,EAAmC;eAC/BE,eAAeF,KAAf,IAAwB,SAASM,cAAT,GAA2B;mBAC/CD,kBAAkBL,MAAMjB,OAAN,EAAlB,CAAP;SADG,GAEHiB,KAFJ;KADJ;CAVD;IAiBHO,aAAa,SAAbA,UAAa,KAAM;WACR,YAAa;0CAATC,IAAS;gBAAA;;;YACZC,SAASC,UAAM7B,EAAN,EAAU2B,IAAV,CAAb;eACOG,UAAMF,MAAN,KACHA,OAAOG,IAAP,KAAgB,gBADb,IAEH1B,eAAWuB,MAAX,CAFJ,EAGE;qBACWA,QAAT;;eAEGA,MAAP;KARJ;CAlBD;;IA8BcjB;;;;;;;;;;+BAMT;mBACGA,MAAMa,iBAAN,CAAwB,KAAKvB,WAA7B,EAA0C,IAA1C,CAAP;;;;gCAEKD,IAAI;gBACHgC,MAAMrB,MAAMa,iBAAN,CAAwB,KAAKvB,WAA7B,EAA0CD,GAAG,KAAKY,IAAL,EAAH,CAA1C,CAAZ;mBACO,KAAKX,WAAL,CAAiBgC,EAAjB,CAAoBD,GAApB,CAAP;;;;8BAEGhC,IAAI;mBACA,KAAKkB,OAAL,CAAalB,EAAb,CAAP;;;;0CAbsBuB,MAAMJ,OAAO;gBAC/B,CAACW,UAAMX,KAAN,CAAL,EAAmB;uBAASA,KAAP;;gBACfe,SAASR,WAAWN,kBAAkBG,IAAlB,CAAX,CAAf;mBACOW,OAAOf,KAAP,CAAP;;;;2BAYOb,GAAG;mBAAS,IAAIK,KAAJ,CAAUL,CAAV,CAAP;;;;gCACAA,GAAG;mBAASI,SAAQJ,CAAR,CAAP;;;;EAjBUG;;ACzCnC,IAAI0B,yBAAJ;;AAEA,SAASC,OAAT,GAAoB;QACZD,gBAAJ,EAAsB;eACXA,gBAAP;KADJ,MAGK,IAAI,EAAE,gBAAgBC,OAAlB,CAAJ,EAAgC;eAC1B,IAAIA,OAAJ,EAAP;;uBAEe,IAAnB;WACOC,MAAP,CAAcF,gBAAd;;;AAGE,gBAAY,SAAZG,SAAY;WAAKhC,MAAM6B,gBAAX;CAAZ;IAGFI,UAHE,GAGW,SAAbA,UAAa,GAAY;WAAS,IAAP;CAHzB;IAIDC,SAJC,GAIYJ,OAJZ,CAIDI,SAJC;;;AAONA,UAAUtC,OAAV,GAAsBqC,UAAtB;AACAC,UAAU5B,IAAV,GAAsB2B,UAAtB;AACAC,UAAUrC,GAAV,GAAsBoC,UAAtB;AACAC,UAAUzB,EAAV,GAAsBwB,UAAtB;AACAC,UAAUtB,OAAV,GAAsBqB,UAAtB;;;AAGAH,QAAQH,EAAR,GAAc;WAAM,IAAIG,OAAJ,EAAN;CAAd;AACAA,QAAQE,SAAR,GAAoBA,SAApB;;;;;;;;;AASAG,OAAOJ,MAAP,CAAcD,OAAd;;ACjCO,IAAMM,UAAS,SAATA,OAAS;WAAKpC,aAAaqC,IAAlB;CAAf;;IAEcA;;;;;;;;;;4BACZ3C,IAAI;gBACEC,WAAD,GAAgB,IAAhB,CAACA,WAAD;gBACFF,KADE,GACM,KAAKG,OAAL,EADN;;mBAEC4B,UAAM/B,KAAN,KAAgB,CAACuC,UAAUvC,KAAV,CAAjB,GAAoCE,YAAYgC,EAAZ,CAAejC,GAAGD,KAAH,CAAf,CAApC,GACHE,YAAY2C,kBAAZ,CAA+BX,EAA/B,CAAkClC,KAAlC,CADJ;;;;2BAGOO,GAAG;mBAAS,IAAIqC,IAAJ,CAASrC,CAAT,CAAP;;;;+BACDA,GAAG;mBAASoC,QAAOpC,CAAP,CAAP;;;;EARUK;;AAWlCgC,KAAKC,kBAAL,GAA0BR,OAA1B;;ACXO,IAMHS,QAAQ/B,UAAM,UAACgC,WAAD,EAAc9C,EAAd,EAAkB+C,SAAlB,EAAgC;QACpCC,UAAUlB,UAAMiB,SAAN,KAAoBE,QAAQF,SAAR,CAApB,GAAyCA,UAAU5C,GAAV,CAAc+C,MAAd,CAAzC,GAA6Dd,QAAQH,EAAR,EAA7E;WACOK,UAAUU,OAAV,IAAqBF,WAArB,GAAmCE,QAAQ7C,GAAR,CAAYH,EAAZ,EAAgBY,IAAhB,EAA1C;CAFI,CANL;IAWHqC,UAAU,SAAVA,OAAU;WAAKX,UAAUhC,CAAV,KAAgBoC,QAAOpC,CAAP,CAArB;CAXP;;ACNP;;;;AAIA,IAKM6C;;;;;;;;;;2BACS7C,GAAG;mBAAS,IAAI6C,IAAJ,CAAS7C,CAAT,CAAP;;;;EADDK;;IAIbyC;;;;;;;;;;4BACGpD,IAAI;gBACCD,QAAQ,KAAKG,OAAL,EAAd;gBACImD,OAAOtD,KAAP,CAAJ,EAAmB;uBACRA,KAAP;aADJ,MAGK,IAAI,CAAC+B,UAAM/B,KAAN,CAAL,EAAmB;uBACboD,KAAKlB,EAAL,CACH,iFACiBlC,KADjB,QADG,CAAP;;mBAKGqD,MAAMnB,EAAN,CAASjC,GAAGD,KAAH,CAAT,CAAP;;;;2BAGOO,GAAG;mBAAS,IAAI8C,KAAJ,CAAU9C,CAAV,CAAP;;;;EAfAqC;;AAkBpB,AAAO,IAEHW,UAAU,SAAVA,OAAU;WAAKhD,aAAa8C,KAAlB;CAFP;IAIHC,SAAS,SAATA,MAAS;WAAK/C,aAAa6C,IAAlB;CAJN;IAMHI,SAASzC,UAAM,UAAC0C,YAAD,EAAeC,aAAf,EAA8BtC,KAA9B,EAAwC;QAC7CuC,WAAWnD,cAAcY,KAAd,EAAqBhB,GAArB,CAAyB+C,MAAzB,CAAjB;YACQQ,SAASzD,WAAjB;aACSkD,IAAL;mBACWO,SAASvD,GAAT,CAAaC,WAAWoD,YAAX,CAAb,EAAuC5C,IAAvC,EAAP;aACCwC,KAAL;mBACWM,SAASvD,GAAT,CAAaC,WAAWqD,aAAX,CAAb,EAAwC7C,IAAxC,EAAP;;mBAEOuC,KAAKlB,EAAL,CAAQd,KAAR,EAAehB,GAAf,CAAmBqD,YAAnB,EAAiC5C,IAAjC,EAAP;;CARH,CANN;;AC/BP;;;;AAIA,AAGA;;IAEqB+C;;;;iCACAC,IAAI;gBACb,CAACD,GAAGE,IAAH,CAAQD,EAAR,CAAL,EAAkB;uBAASA,EAAP;;mBACbjD,MAAMa,iBAAN,CAAwBmC,EAAxB,EAA4BC,EAA5B,CAAP;;;;2BAEM5D,IAAI;mBACH,IAAI2D,EAAJ,CAAO3D,EAAP,CAAP;;;;6BAESM,GAAG;mBACLA,aAAaqD,EAApB;;;;4BAEOC,IAAa;gBACdE,WAAW,CAACH,GAAGE,IAAH,CAAQD,EAAR,CAAD,GAAe,IAAID,EAAJ,CAAOC,EAAP,CAAf,GAA4BA,EAA7C;;8CADcjC,IAAM;oBAAA;;;mBAEboC,YACHJ,GAAG1B,EADA,EAEH0B,GAAGK,QAFA,EAIH5D,WAAW0D,SAASlD,IAAT,EAAX,mBAA+Be,IAA/B,CAJG,CAAP;;;;gBAQQ3B,EAAZ,EAAgB;;sGACNI,WAAWJ,EAAX,CADM;;;;;;;mCAMPA,IAAI;mBACF+D,YACH,KAAK9D,WAAL,CAAiBgC,EADd,EAEH0B,GAAGK,QAFA,EAEUhE,EAFV,EAGH2D,GAAGK,QAHA,EAKH5D,WAAW,KAAKQ,IAAL,EAAX,GALG,CAAP;;;;4BASCZ,IAAI;mBACE+D,YACH,KAAK9D,WAAL,CAAiBgC,EADd,EAEHjC,EAFG,EAIHI,WAAW,KAAKF,OAAL,EAAX,GAJG,CAAP;;;;EAtCwBS;;ACThC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}