{"version":3,"file":"fjl-data-core.js","sources":["../../src/functor/Functor.js","../../src/functor/Apply.js","../../src/functor/Applicative.js","../../src/functor/Bifunctor.js","../../src/monad/Monad.js","../../src/io/IO.js","../../src/maybe/Nothing.js","../../src/maybe/Just.js","../../src/maybe/Maybe.js","../../src/either/Either.js","../../src/fjlDataCore.js"],"sourcesContent":["/**\r\n * Functor class and associated operations.\r\n * Created by edlc on 12/9/16.\r\n * @module functor\r\n */\r\n\r\n\r\n/**\r\n * Always returns a functor;  If given value is not\r\n * a functor creates one and passes given value to it.\r\n * @function module:functor.alwaysFunctor\r\n * @param x {{map: Function}|any} - Functor or any.\r\n * @returns {any}\r\n */\r\nexport const alwaysFunctor = x => !x.map ? new Functor(x) : x;\r\n\r\n/**\r\n * Plain old functor class.\r\n * @class module:functor.Functor\r\n * @param value {any}\r\n * @property value {any}\r\n */\r\nexport default class Functor {\r\n\r\n    /**\r\n     * @memberOf module:functor.Functor\r\n     * @param value {any}\r\n     */\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Extracts value of functor (same as monadic `join`).\r\n     * @memberOf module:functor.Functor\r\n     * @returns {any}\r\n     */\r\n    valueOf() {\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * Maps a function over contents of functor.\r\n     * @memberOf module:functor.Functor\r\n     * @param fn {Function} - Function that takes one `any` and returns one `any`.\r\n     * @returns {Functor}\r\n     */\r\n    map(fn) {\r\n        return new this.constructor(fn(this.valueOf()));\r\n    }\r\n\r\n    /**\r\n     * Same as `#Functor.map`.\r\n     * @memberOf module:functor.Functor\r\n     * @param fn {Function}\r\n     * @returns {Functor}\r\n     */\r\n    fmap (fn) {\r\n        return this.map(fn);\r\n    }\r\n}\r\n","/**\r\n * Contains `Applicative`'s `Apply` class (class that contains `ap` (a.k.a. `pure`) method).\r\n * Created by edlc on 12/9/16.\r\n * @memberOf module:functor\r\n */\r\n\r\nimport {toFunction} from 'fjl';\r\nimport Functor from './Functor';\r\n\r\n/**\r\n * Apply construct.\r\n * @class module:functor.Apply\r\n * @param fn {Function|*}\r\n * @property value {any}\r\n * @extends module:functor.Functor\r\n */\r\nexport default class Apply extends Functor {\r\n    /**\r\n     * Applicative apply operation - applies contained function over passed in functor.\r\n     * @memberOf module:functor.Apply\r\n     * @param x {Functor}\r\n     * @returns {Apply}\r\n     */\r\n    ap (x) {\r\n        return x.map(toFunction(this.valueOf()));\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n * Applicative class module.\r\n * @memberOf module:functor\r\n */\r\nimport Apply from './Apply';\r\n\r\n/**\r\n * @class module:functor.Applicative\r\n * @extends module:functor.Apply\r\n */\r\nexport default class Applicative extends Apply {\r\n    /**\r\n     * Constructs an applicative with given `value`.\r\n     * @function module:functor.Applicative.of\r\n     * @static\r\n     * @param value {any}\r\n     * @returns {Applicative}\r\n     */\r\n    static of (value) {\r\n        return new Applicative(value);\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n * @memberOf module:functor\r\n */\r\nimport Functor from './Functor';\r\n\r\nexport default class Bifunctor extends Functor {\r\n    constructor(value1, value2) {\r\n        super(value1);\r\n        this.value2 = value2;\r\n    }\r\n\r\n    value2Of() {\r\n        return this.value2;\r\n    }\r\n\r\n    first (fn) {\r\n        return new this.constructor(fn(this.valueOf()), this.value2Of());\r\n    }\r\n\r\n    second (fn) {\r\n        return new this.constructor(this.valueOf(), fn(this.value2Of()));\r\n    }\r\n\r\n    bimap (fn1, fn2) {\r\n        return new this.constructor(\r\n            fn1(this.valueOf()),\r\n            fn2(this.value2Of())\r\n        );\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n * Contains basic `Monad` class and associated methods.\r\n * For 'what is a monad'/back-story\r\n * @see `Maybe` reference: [http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Maybe.html](http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Maybe.html)\r\n * @see `Either` reference: [http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Either.html](http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Either.html)\r\n * @module monad\r\n */\r\n\r\nimport {isset, curry, instanceOf, trampoline} from 'fjl';\r\nimport Applicative from '../functor/Applicative';\r\nimport Functor from '../functor/Functor';\r\n\r\nexport const\r\n\r\n    /**\r\n     * Returns boolean indicating whether given value is an\r\n     * instance of monad or not.\r\n     * @function module:monad.isMonad\r\n     * @param value {any}\r\n     * @returns {boolean}\r\n     */\r\n    isMonad = value => value && value instanceof Monad,\r\n\r\n    /**\r\n     * Always returns a monad;  If given value is not\r\n     * a monad creates using given value.\r\n     * @function module:functor.alwaysMonad\r\n     * @param x {Monad|any} - Monad or any.\r\n     * @returns {any}\r\n     */\r\n    alwaysMonad = x => !x.map ? new Monad(x) : x,\r\n\r\n    /**\r\n     * Calls `valueOf` on value (use for functional composition).\r\n     * @function module.fjlDataCore.valueOf\r\n     * @param x {any}\r\n     * @returns {any}\r\n     */\r\n    valueOf = x => x.valueOf(),\r\n\r\n    /**\r\n     * Calls `valueOf` on given value.  Same as\r\n     * monadic `join` operation (extracts inner value of\r\n     * container/object).\r\n     * @function module.fjlDataCore.join\r\n     * @param x {any}\r\n     * @returns {any}\r\n     */\r\n    join = valueOf,\r\n\r\n    /**\r\n     * Maps given function over given functor.\r\n     * @function module.fjlDataCore.fmap\r\n     * @param fn {Function}\r\n     * @param x {Functor}\r\n     * @returns {Functor}\r\n     */\r\n    fmap = curry((fn, x) => x.map(fn)),\r\n\r\n    /**\r\n     * Applies function contained by applicative to contents of given functor.\r\n     * (Same as functional applicative `apply`).\r\n     * @function module.fjlDataCore.ap\r\n     * @param applicative {Applicative}\r\n     * @param functor {Functor}\r\n     * @returns {Applicative}\r\n     */\r\n    ap = curry((applicative, functor) => applicative.ap(functor)),\r\n\r\n    /**\r\n     * Flat maps a function over given monad's contained value.\r\n     * @function module.fjlDataCore.flatMap\r\n     * @param fn {Function}\r\n     * @param monad {Monad}\r\n     * @returns {Monad}\r\n     */\r\n    flatMap = curry((fn, monad) => monad.flatMap(fn)),\r\n\r\n    /**\r\n     * A recursive monad un-wrapper (doesn't work on promises (for promises use `async` `await` (to unwrap))).  Unwraps monad to most inner contents (final inner value).\r\n     * @function module:monad.getMonadUnWrapper\r\n     * @param Type {Function}\r\n     * @returns {Array.<any>} - [unWrapFunction, tailCallFuncName (used by `trampoline` @see module:fjl.trampoline)]\r\n     */\r\n    getMonadUnWrapper = Type => {\r\n        return [ function unWrapMonadByType(monad) {\r\n                return instanceOf(Type, monad) ?\r\n                    function trampolineCall() {\r\n                        return unWrapMonadByType(monad.valueOf());\r\n                    } :\r\n                    monad;\r\n            }, 'trampolineCall' ];\r\n    };\r\n\r\n/**\r\n * @class module:monad.Monad\r\n * @param x {any}\r\n * @property value {any}\r\n */\r\nexport default class Monad extends Applicative {\r\n    static unWrapMonadByType (Type, monad) {\r\n        if (!isset(monad)) { return monad; }\r\n        const [unWrapper, tailCallName] = getMonadUnWrapper(Type),\r\n            unwrap = trampoline(unWrapper, tailCallName);\r\n        return unwrap(monad);\r\n    }\r\n\r\n    /**\r\n     * Monadic join - Removes one layer of monadic structure from value.\r\n     * @memberOf module:monad.Monad\r\n     * @returns {any}\r\n     */\r\n    join () {\r\n        return this.valueOf();\r\n    }\r\n\r\n    /**\r\n     * Flat map operation.\r\n     * @memberOf module:monad.Monad\r\n     * @param fn {Function}\r\n     * @returns {Monad}\r\n     */\r\n    flatMap (fn) {\r\n        const out = Monad.unWrapMonadByType(this.constructor, fn(this.join()));\r\n        return this.constructor.of(out);\r\n    }\r\n\r\n    /**\r\n     * Same as `Monad.flatMap`.\r\n     * @memberOf module:monad.Monad\r\n     * @param fn {Function}\r\n     * @returns {Monad}\r\n     */\r\n    chain (fn) {\r\n        return this.flatMap(fn);\r\n    }\r\n\r\n    /**\r\n     * Same as `new Monad(...)` just in 'static' function\r\n     * format.\r\n     * @memberOf module:monad.Monad\r\n     * @static\r\n     * @param x {any}\r\n     * @returns {Monad}\r\n     */\r\n    static of (x) { return new Monad(x); }\r\n\r\n    /**\r\n     * Checks for monad.\r\n     * @memberOf module:monad.Monad\r\n     * @static\r\n     * @param x {any}\r\n     * @returns {boolean}\r\n     */\r\n    static isMonad (x) { return isMonad(x); }\r\n}\r\n","/**\r\n * Created by elydelacruz on 2/19/2017.\r\n */\r\n\r\nimport Monad from '../monad/Monad';\r\nimport {compose, toFunction} from 'fjl';\r\n\r\nexport default class IO extends Monad {\r\n    static unWrapIO (io) {\r\n        if (!IO.isIO(io)) { return io; }\r\n        return Monad.unWrapMonadByType(IO, io);\r\n    }\r\n    static of(fn) {\r\n        return new IO(fn);\r\n    }\r\n    static isIO (x) {\r\n        return x instanceof IO;\r\n    }\r\n    static do (io, ...args) {\r\n        const instance = !IO.isIO(io) ? new IO(io) : io;\r\n        return compose(\r\n            IO.of,\r\n            IO.unWrapIO\r\n        )(\r\n            toFunction(instance.join())(...args)\r\n        );\r\n    }\r\n\r\n    constructor(fn) {\r\n        super(toFunction(fn));\r\n    }\r\n\r\n    flatMap (fn) {\r\n        return compose(\r\n            this.constructor.of,\r\n            IO.unWrapIO, fn,\r\n            IO.unWrapIO\r\n        )(\r\n            toFunction(this.join())()\r\n        );\r\n    }\r\n\r\n    map (fn) {\r\n        return compose(\r\n            this.constructor.of,\r\n            fn\r\n        )(\r\n            toFunction(this.valueOf())()\r\n        );\r\n    }\r\n}\r\n","let NothingSingleton;\r\n\r\nfunction Nothing () {\r\n    if (NothingSingleton) {\r\n        return NothingSingleton;\r\n    }\r\n    else if (!(this instanceof Nothing)) {\r\n        return new Nothing();\r\n    }\r\n    NothingSingleton = this;\r\n    Object.freeze(NothingSingleton);\r\n}\r\n\r\nconst isNothing = x => x === NothingSingleton,\r\n\r\n    nothing = () => new Nothing(),\r\n\r\n    // Prototypical stuff\r\n    returnThis = function () { return this; },\r\n    {prototype} = Nothing;\r\n\r\n// Methods\r\nprototype.valueOf   = returnThis;\r\nprototype.join      = returnThis;\r\nprototype.map       = returnThis;\r\nprototype.ap        = returnThis;\r\nprototype.flatMap   = returnThis;\r\n\r\n// Set statics\r\nNothing.of  = () => new Nothing();\r\nNothing.isNothing = isNothing;\r\nNothing.nothing = nothing;\r\n\r\n// Object.freeze makes properties on object immutable\r\n// @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\r\n// Saves us from having to do the following (great!):\r\n// Object.defineProperties(Nothing, {\r\n//     of: {value: () => new Nothing(), enumerable: true},\r\n//     isNothing: {value: isNothing, enumerable: true}\r\n// });\r\nObject.freeze(Nothing);\r\n\r\nexport {isNothing, nothing};\r\n\r\nexport default Nothing;\r\n","import Nothing, {isNothing} from './Nothing';\r\nimport Monad from '../monad/Monad';\r\nimport {isset} from 'fjl';\r\n\r\nexport const\r\n    isJust = x => x instanceof Just,\r\n    just = x => new Just(x)\r\n;\r\n\r\nexport default class Just extends Monad {\r\n    map (fn) {\r\n        const {constructor} = this,\r\n            value = this.valueOf();\r\n        return isset(value) && !isNothing(value) ? constructor.of(fn(value)) :\r\n            constructor.counterConstructor.of(value);\r\n    }\r\n    static of (x) { return just(x); }\r\n    static isJust (x) { return isJust(x); }\r\n}\r\n\r\nJust.counterConstructor = Nothing;\r\n","import Just, {isJust, just} from './Just';\r\nimport Nothing, {isNothing, nothing} from './Nothing';\r\nimport {isset, curry, id, trampoline} from 'fjl';\r\nimport {getMonadUnWrapper} from '../monad/Monad';\r\n\r\nexport {Just, isJust, isNothing, Nothing, just, nothing};\r\n\r\nconst\r\n    /**\r\n     * @private\r\n     */\r\n    [justUnWrapper, justUnWrapperTailCallName] = getMonadUnWrapper(Just)\r\n;\r\n\r\nexport const\r\n    /**\r\n     * @param replacement {*}\r\n     * @param fn {Function} - Some operation.\r\n     * @param maybeInst {(Nothing|Just|*)} - Maybe instance or non\r\n     */\r\n    maybe = curry((replacement, fn, maybeInst) => {\r\n        const subject = isset(maybeInst) && isMaybe(maybeInst) ? maybeInst.map(id) : Nothing.of();\r\n        return isNothing(subject) ? replacement : subject.map(fn).join();\r\n    }),\r\n\r\n    unWrapJust = trampoline(justUnWrapper, justUnWrapperTailCallName),\r\n\r\n    unWrapMaybe = x => isNothing(x) ? nothing() : unWrapJust(x),\r\n\r\n    maybeEqual = curry((a, b) => unWrapMaybe(a) === unWrapMaybe(b)),\r\n\r\n    isMaybe = x => isNothing(x) || isJust(x),\r\n\r\n    toMaybe = x => isset(x) ? just(x) : nothing()\r\n\r\n;\r\n","/**\r\n * Contains `Either` constructs (`Right`, `Left`,  `either` etc.) and associated operations.\r\n * Created by elyde on 12/10/2016.\r\n * @module either\r\n */\r\nimport {isset, curry, id, toFunction} from 'fjl';\r\nimport {Just} from '../maybe/Maybe';\r\nimport Monad, {alwaysMonad} from '../monad/Monad';\r\n\r\n/**\r\n * `Left` representation of `Either` construct.\r\n * @class Left\r\n * @param x {any}\r\n * @property value {any}\r\n */\r\nexport class Left extends Monad {\r\n    static of (x) { return new Left(x); }\r\n}\r\n\r\n/**\r\n * @class Right\r\n * @param x {any}\r\n * @property value {any}\r\n */\r\nexport class Right extends Just {\r\n    map (fn) {\r\n        const value = this.valueOf();\r\n        if (isLeft(value)) {\r\n            return value;\r\n        }\r\n        else if (!isset(value)) {\r\n            return Left.of(\r\n                `TypeError: Cannot operate on \\`${value}\\`.`\r\n            );\r\n        }\r\n        return Right.of(fn(value));\r\n    }\r\n\r\n    static of (x) { return new Right(x); }\r\n}\r\n\r\nexport const\r\n    /**\r\n     * Checks for instance of `Right` constructor.\r\n     * @function module:either.isRight\r\n     * @param x {any}\r\n     * @returns {boolean}\r\n     */\r\n    isRight = x => x instanceof Right,\r\n\r\n    /**\r\n     * Checks for instance of `Left` constructor.\r\n     * @function module:either.isLeft\r\n     * @param x {any}\r\n     * @returns {boolean}\r\n     */\r\n    isLeft = x => x instanceof Left,\r\n\r\n    /**\r\n     * Calls matching callback on incoming `Either`'s type;  If is a `Left` (after mapping identity func on it) then calls left-callback and unwraps result\r\n     * else calls right-callback and does the same.  Think of it like a functional\r\n     * ternary statement (lol).\r\n     * @function module:either.either\r\n     * @param leftCallback {Function} - Mapped over value of `monad`'s identity.\r\n     * @param rightCallback {Function} - \"\".\r\n     * @return {any} - Value of unwrapped resulting value of `flatMap`ped, passed-in callback's on passed in monad.\r\n     * @example\r\n     * expect(\r\n         either(() => 404, () => 200, compose(right, right, right, right)(true))\r\n       ).toEqual(undefined);\r\n     */\r\n    either = curry((leftCallback, rightCallback, monad) => {\r\n        const identity = alwaysMonad(monad).flatMap(id),\r\n            out = isRight(monad) ?\r\n                identity.flatMap(toFunction(rightCallback)) :\r\n                Left.of(identity).flatMap(leftCallback)\r\n            ;\r\n        return isset(out) ? out.join() : out;\r\n    }),\r\n\r\n    toRight = x => isRight(x) ? x : new Right(x),\r\n\r\n    toLeft = x => isLeft(x) ? x : new Left(x)\r\n\r\n;\r\n","/**\r\n * Makes all module members in library accessible via itself (is also the main export of the library).\r\n * Created by elydelacruz on 2/19/2017.\r\n * @module fjlDataCore\r\n */\r\nimport Functor from './functor/Functor';\r\nimport Apply from './functor/Apply';\r\nimport Applicative from './functor/Applicative';\r\nimport Bifunctor from './functor/Bifunctor';\r\nimport Monad, {isMonad, valueOf, join, fmap,\r\n    ap, flatMap, getMonadUnWrapper} from './monad/Monad';\r\nimport IO from './io/IO';\r\n\r\nexport {\r\n    Functor, Apply, Applicative, Bifunctor, IO, Monad,\r\n    isMonad, valueOf, join, fmap, ap, flatMap, getMonadUnWrapper\r\n};\r\n\r\nexport * from './maybe/Maybe';\r\nexport * from './either/Either';\r\n\r\n/* ==================================== */\r\n/* Virtual types */\r\n/* ==================================== */\r\n/**\r\n * @typedef {Function} UnaryOperation\r\n */\r\n"],"names":["Functor","constructor","value","valueOf","map","fn","fmap","Apply","ap","x","toFunction","Applicative","of","Bifunctor","value1","value2","value2Of","first","second","bimap","fn1","fn2","isMonad","Monad","alwaysMonad","join","curry","applicative","functor","flatMap","monad","getMonadUnWrapper","Type","unWrapMonadByType","instanceOf","trampolineCall","isset","unWrapper","tailCallName","unwrap","trampoline","out","chain","IO","unWrapIO","io","isIO","do","args","instance","compose","NothingSingleton","Nothing","Object","freeze","isNothing","nothing","returnThis","prototype","isJust","Just","just","counterConstructor","justUnWrapper","justUnWrapperTailCallName","maybe","replacement","maybeInst","subject","isMaybe","id","unWrapJust","unWrapMaybe","maybeEqual","a","b","toMaybe","Left","Right","isLeft","isRight","either","leftCallback","rightCallback","identity","toRight","toLeft"],"mappings":"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"}