{"version":3,"file":"fjl-data-core.js","sources":["../../src/functor/Functor.js","../../src/utils.js","../../src/functor/Apply.js","../../src/functor/Applicative.js","../../src/monad/Monad.js","../../src/maybe/Nothing.js","../../src/maybe/Just.js","../../src/maybe/Maybe.js","../../src/either/Either.js","../../src/io/IO.js","../../src/fjlDataCore.js"],"sourcesContent":["/**\r\n * Created by edlc on 12/9/16.\r\n */\r\nexport default class Functor {\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n    valueOf() {\r\n        return this.value;\r\n    }\r\n    map(fn) {\r\n        return new this.constructor(fn(this.valueOf()));\r\n    }\r\n    fmap (fn) {\r\n        return this.map(fn);\r\n    }\r\n}\r\n","import {isFunction} from 'fjl';\r\nimport Functor from './functor/Functor';\r\n\r\nexport const\r\n    toFunction = x => isFunction(x) ? x : () => x,\r\n    alwaysFunctor = x => !x.map ? new Functor(x) : x\r\n;\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\n\r\nimport {toFunction} from '../utils';\r\nimport Functor from './Functor';\r\n\r\nexport default class Apply extends Functor {\r\n    ap (x) {\r\n        return x.map(toFunction(this.valueOf()));\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\nimport Apply from './Apply';\r\n\r\nexport default class Applicative extends Apply {\r\n    static of (value) {\r\n        return new Applicative(value);\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n * Basic `Monad` class.  Used to extend from to create `Maybe` and `Either` module/classes.\r\n * @module Monad\r\n * @see `Maybe` reference: http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Maybe.html\r\n * @see `Either` reference: http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Either.html\r\n */\r\n\r\nimport {curry} from 'fjl';\r\nimport Applicative from '../functor/Applicative';\r\n\r\nexport const\r\n    isMonad = value => value instanceof Monad,\r\n    valueOf = x => x.valueOf(),\r\n    join = x => x.join(),\r\n    fmap = curry((fn, x) => x.map(fn)),\r\n    ap = curry((applicative, functor) => applicative.ap(functor)),\r\n    flatMap = curry((fn, monad) => monad.flatMap(fn));\r\n\r\nexport default class Monad extends Applicative {\r\n    join () {\r\n        return this.valueOf();\r\n    }\r\n    flatMap (fn) {\r\n        const out = fn(this.join());\r\n        return !(out instanceof this.constructor) ?\r\n            this.constructor.of(out) : out;\r\n    }\r\n    chain (fn) {\r\n        return this.flatMap(fn);\r\n    }\r\n    static of (x) { return new Monad(x); }\r\n    static isMonad (x) { return isMonad(x); }\r\n}\r\n","let NothingSingleton;\r\n\r\nfunction Nothing () {\r\n    if (NothingSingleton) {\r\n        return NothingSingleton;\r\n    }\r\n    else if (!(this instanceof Nothing)) {\r\n        return new Nothing();\r\n    }\r\n    NothingSingleton = this;\r\n    Object.freeze(NothingSingleton);\r\n}\r\n\r\nconst isNothing = x => x === NothingSingleton,\r\n\r\n    // Prototypical stuff\r\n    returnThis = function () { return this; },\r\n    {prototype} = Nothing;\r\n\r\n// Methods\r\nprototype.valueOf   = returnThis;\r\nprototype.join      = returnThis;\r\nprototype.map       = returnThis;\r\nprototype.ap        = returnThis;\r\nprototype.flatMap   = returnThis;\r\n\r\n// Set statics\r\nNothing.of  = () => new Nothing();\r\nNothing.isNothing = isNothing;\r\n\r\n// Object.freeze makes properties on object immutable\r\n// @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\r\n// Saves us from having to do the following (great!):\r\n// Object.defineProperties(Nothing, {\r\n//     of: {value: () => new Nothing(), enumerable: true},\r\n//     isNothing: {value: isNothing, enumerable: true}\r\n// });\r\nObject.freeze(Nothing);\r\n\r\nexport {isNothing};\r\n\r\nexport default Nothing;\r\n","import Nothing, {isNothing} from './Nothing';\r\nimport Monad from '../monad/Monad';\r\nimport {isset} from 'fjl';\r\n\r\nexport const isJust = x => x instanceof Just;\r\n\r\nexport default class Just extends Monad {\r\n    map (fn) {\r\n        const {constructor} = this,\r\n            value = this.valueOf();\r\n        return isset(value) && !isNothing(value) ? constructor.of(fn(value)) :\r\n            constructor.counterConstructor.of(value);\r\n    }\r\n    static of (x) { return new Just(x); }\r\n    static isJust (x) { return isJust(x); }\r\n}\r\n\r\nJust.counterConstructor = Nothing;\r\n","import Just, {isJust} from './Just';\r\nimport Nothing, {isNothing} from './Nothing';\r\nimport {isset, curry, id} from 'fjl';\r\n\r\nexport {Just, isJust, isNothing, Nothing};\r\n\r\nexport const\r\n    /**\r\n     * @param replacement {*}\r\n     * @param fn {Function} - Some operation.\r\n     * @param maybeInst {(Nothing|Just|*)} - Maybe instance or non\r\n     */\r\n    maybe = curry((replacement, fn, maybeInst) => {\r\n        const subject = isset(maybeInst) && isMaybe(maybeInst) ? maybeInst.map(id) : Nothing.of();\r\n        return isNothing(subject) ? replacement : subject.map(fn).join();\r\n    }),\r\n\r\n    isMaybe = x => isNothing(x) || isJust(x);\r\n\r\nfunction Maybe (x) {\r\n    return isset(x) ? Just.of(x) : Nothing.of();\r\n}\r\n\r\nMaybe.of = x => Maybe(x);\r\n\r\nexport default Maybe;\r\n","/**\r\n * Created by elyde on 12/10/2016.\r\n */\r\n\r\nimport {isset, curry, id} from 'fjl';\r\nimport {Just} from '../maybe/Maybe';\r\nimport Monad from '../monad/Monad';\r\nimport {alwaysFunctor, toFunction} from '../utils';\r\n\r\nclass Left extends Monad {\r\n    static of (x) { return new Left(x); }\r\n}\r\n\r\nclass Right extends Just {\r\n    map (fn) {\r\n        const value = this.valueOf();\r\n        if (isLeft(value)) {\r\n            return value;\r\n        }\r\n        else if (!isset(value)) {\r\n            return Left.of(\r\n                `TypeError: Cannot operate on \\`null\\` and/or \\`undefined\\`.  ` +\r\n                `Value given \\`${value}\\`.`\r\n            );\r\n        }\r\n        return Right.of(fn(value));\r\n    }\r\n\r\n    static of (x) { return new Right(x); }\r\n}\r\n\r\nexport const\r\n\r\n    isRight = x => x instanceof Right,\r\n\r\n    isLeft = x => x instanceof Left,\r\n\r\n    either = curry((leftCallback, rightCallback, monad) => {\r\n        const identity = alwaysFunctor(monad).map(id);\r\n        switch (identity.constructor) {\r\n            case Left:\r\n                return identity.map(toFunction(leftCallback)).join();\r\n            case Right:\r\n                return identity.map(toFunction(rightCallback)).join();\r\n            default:\r\n                return Left.of(monad).map(leftCallback).join();\r\n        }\r\n    });\r\n\r\nexport {Left, Right};\r\n\r\n","/**\r\n * Created by elydelacruz on 2/19/2017.\r\n */\r\n\r\n'use strict';\r\n\r\nimport Monad from '../monad/Monad';\r\nimport {toFunction} from '../utils';\r\n\r\nexport default class IO extends Monad {\r\n    constructor(fn) {\r\n        super(toFunction(fn));\r\n    }\r\n\r\n    static of(fn) {\r\n        return new IO(fn);\r\n    }\r\n\r\n    static isIO (x) {\r\n        return x instanceof IO;\r\n    }\r\n\r\n    flatMap (fn) {\r\n        const out = fn(this.join()());\r\n        return !(out instanceof this.constructor) ?\r\n            IO.of(out) : out;\r\n    }\r\n\r\n    // map (fn) {\r\n    //     return this.flatMap(x => IO.of(fn(x)));\r\n    // }\r\n\r\n    static do (io, ...args) {\r\n        return (IO.isIO(io) ? io : IO.of(io))\r\n            .unsafePerformIO.apply(io, args);\r\n    }\r\n\r\n    fork () {\r\n        return this.map(fn => fn());\r\n    }\r\n\r\n    unsafePerformIO (...args) {\r\n        return IO.of(this.join()(...args));\r\n    }\r\n}\r\n","/**\r\n * Created by elydelacruz on 2/19/2017.\r\n * @module fjlDataCore\r\n * Core monad types (useful for javascript).\r\n */\r\nexport * from './monad/Monad';\r\nexport * from './maybe/Maybe';\r\nexport * from './either/Either';\r\nexport * from './io/IO';\r\nexport * from './utils';\r\n"],"names":[],"mappings":";;AAAA;;;AAGA,AAAe,MAAM,OAAO,CAAC;IACzB,WAAW,CAAC,KAAK,EAAE;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;IACD,OAAO,GAAG;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;IACD,GAAG,CAAC,EAAE,EAAE;QACJ,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;KACnD;IACD,IAAI,CAAC,CAAC,EAAE,EAAE;QACN,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;KACvB;CACJ;;ACbM,MACH,UAAU,GAAG,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;MAC7C,aAAa,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;;ACLpD;;;;AAIA,AAGe,MAAM,KAAK,SAAS,OAAO,CAAC;IACvC,EAAE,CAAC,CAAC,CAAC,EAAE;QACH,OAAO,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;KAC5C;CACJ;;ACXD;;;AAGA,AAEe,MAAM,WAAW,SAAS,KAAK,CAAC;IAC3C,OAAO,EAAE,CAAC,CAAC,KAAK,EAAE;QACd,OAAO,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;KACjC;CACJ;;ACTD;;;;;;;;AAQA,AAGO,MACH,OAAO,GAAG,KAAK,IAAI,KAAK,YAAY,KAAK;MACzC,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;MAC1B,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;MACpB,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;MAClC,EAAE,GAAG,KAAK,CAAC,CAAC,WAAW,EAAE,OAAO,KAAK,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;MAC7D,OAAO,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,KAAK,KAAK,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEtD,AAAe,MAAM,KAAK,SAAS,WAAW,CAAC;IAC3C,IAAI,CAAC,GAAG;QACJ,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;KACzB;IACD,OAAO,CAAC,CAAC,EAAE,EAAE;QACT,MAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QAC5B,OAAO,EAAE,GAAG,YAAY,IAAI,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;KACtC;IACD,KAAK,CAAC,CAAC,EAAE,EAAE;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;KAC3B;IACD,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;IACtC,OAAO,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;CAC5C;;ACjCD,IAAI,gBAAgB,CAAC;;AAErB,SAAS,OAAO,IAAI;IAChB,IAAI,gBAAgB,EAAE;QAClB,OAAO,gBAAgB,CAAC;KAC3B;SACI,IAAI,EAAE,IAAI,YAAY,OAAO,CAAC,EAAE;QACjC,OAAO,IAAI,OAAO,EAAE,CAAC;KACxB;IACD,gBAAgB,GAAG,IAAI,CAAC;IACxB,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;CACnC;;AAED,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,KAAK,gBAAgB;MAGzC,UAAU,GAAG,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE;MACzC,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC;;;AAG1B,SAAS,CAAC,OAAO,KAAK,UAAU,CAAC;AACjC,SAAS,CAAC,IAAI,QAAQ,UAAU,CAAC;AACjC,SAAS,CAAC,GAAG,SAAS,UAAU,CAAC;AACjC,SAAS,CAAC,EAAE,UAAU,UAAU,CAAC;AACjC,SAAS,CAAC,OAAO,KAAK,UAAU,CAAC;;;AAGjC,OAAO,CAAC,EAAE,IAAI,MAAM,IAAI,OAAO,EAAE,CAAC;AAClC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;;;;;;;;;AAS9B,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;;ACjChB,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC;;AAE7C,AAAe,MAAM,IAAI,SAAS,KAAK,CAAC;IACpC,GAAG,CAAC,CAAC,EAAE,EAAE;QACL,MAAM,CAAC,WAAW,CAAC,GAAG,IAAI;YACtB,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAChE,WAAW,CAAC,kBAAkB,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;KAChD;IACD,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACrC,OAAO,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;CAC1C;;AAED,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC;;ACX3B,MAMH,KAAK,GAAG,KAAK,CAAC,CAAC,WAAW,EAAE,EAAE,EAAE,SAAS,KAAK;QAC1C,MAAM,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,CAAC;QAC1F,OAAO,SAAS,CAAC,OAAO,CAAC,GAAG,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;KACpE,CAAC;MAEF,OAAO,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;;ACjB5C;;;;AAIA,AAKA,MAAM,IAAI,SAAS,KAAK,CAAC;IACrB,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;CACxC;;AAED,MAAM,KAAK,SAAS,IAAI,CAAC;IACrB,GAAG,CAAC,CAAC,EAAE,EAAE;QACL,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC7B,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;YACf,OAAO,KAAK,CAAC;SAChB;aACI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACpB,OAAO,IAAI,CAAC,EAAE;gBACV,CAAC,6DAA6D,CAAC;gBAC/D,CAAC,cAAc,EAAE,KAAK,CAAC,GAAG,CAAC;aAC9B,CAAC;SACL;QACD,OAAO,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;KAC9B;;IAED,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;CACzC;;AAED,AAAO,MAEH,OAAO,GAAG,CAAC,IAAI,CAAC,YAAY,KAAK;MAEjC,MAAM,GAAG,CAAC,IAAI,CAAC,YAAY,IAAI;MAE/B,MAAM,GAAG,KAAK,CAAC,CAAC,YAAY,EAAE,aAAa,EAAE,KAAK,KAAK;QACnD,MAAM,QAAQ,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC9C,QAAQ,QAAQ,CAAC,WAAW;YACxB,KAAK,IAAI;gBACL,OAAO,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YACzD,KAAK,KAAK;gBACN,OAAO,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YAC1D;gBACI,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;SACtD;KACJ,CAAC;;AC/CN;;GAEG;;ACFH;;;;GAIG;;;;"}