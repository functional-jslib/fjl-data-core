{"version":3,"file":"fjl-data-core.mjs","sources":["../../src/functor/Functor.js","../../src/utils.js","../../src/functor/Apply.js","../../src/functor/Applicative.js","../../src/functor/Bifunctor.js","../../src/monad/Monad.js","../../src/io/IO.js","../../src/maybe/Nothing.js","../../src/maybe/Just.js","../../src/maybe/Maybe.js","../../src/either/Either.js","../../src/fjlDataCore.js"],"sourcesContent":["/**\r\n * Created by edlc on 12/9/16.\r\n */\r\nexport default class Functor {\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n    valueOf() {\r\n        return this.value;\r\n    }\r\n    map(fn) {\r\n        return new this.constructor(fn(this.valueOf()));\r\n    }\r\n    fmap (fn) {\r\n        return this.map(fn);\r\n    }\r\n}\r\n","import {isFunction} from 'fjl';\r\nimport Functor from './functor/Functor';\r\n\r\nexport const\r\n    toFunction = x => isFunction(x) ? x : () => x,\r\n    alwaysFunctor = x => !x.map ? new Functor(x) : x\r\n;\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\n\r\nimport {toFunction} from '../utils';\r\nimport Functor from './Functor';\r\n\r\nexport default class Apply extends Functor {\r\n    ap (x) {\r\n        return x.map(toFunction(this.valueOf()));\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\nimport Apply from './Apply';\r\n\r\nexport default class Applicative extends Apply {\r\n    static of (value) {\r\n        return new Applicative(value);\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n */\r\nimport Functor from './Functor';\r\n\r\nexport default class Bifunctor extends Functor {\r\n    constructor(value1, value2) {\r\n        super(value1);\r\n        this.value2 = value2;\r\n    }\r\n\r\n    value2Of() {\r\n        return this.value2;\r\n    }\r\n\r\n    first (fn) {\r\n        return new this.constructor(fn(this.valueOf()), this.value2Of());\r\n    }\r\n\r\n    second (fn) {\r\n        return new this.constructor(this.valueOf(), fn(this.value2Of()));\r\n    }\r\n\r\n    bimap (fn1, fn2) {\r\n        return new this.constructor(\r\n            fn1(this.valueOf()),\r\n            fn2(this.value2Of())\r\n        );\r\n    }\r\n}\r\n","/**\r\n * Created by edlc on 12/9/16.\r\n * Basic `Monad` class.  Used to extend from to create `Maybe` and `Either` module/classes.\r\n * @module Monad\r\n * @see `Maybe` reference: http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Maybe.html\r\n * @see `Either` reference: http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Either.html\r\n */\r\n\r\nimport {apply, isset, curry, isFunction, instanceOf} from 'fjl';\r\nimport Applicative from '../functor/Applicative';\r\n\r\nexport const\r\n    isMonad = value => value instanceof Monad,\r\n    valueOf = x => x.valueOf(),\r\n    join = x => x.join(),\r\n    fmap = curry((fn, x) => x.map(fn)),\r\n    ap = curry((applicative, functor) => applicative.ap(functor)),\r\n    flatMap = curry((fn, monad) => monad.flatMap(fn)),\r\n\r\n    getMonadUnWrapper = Type => {\r\n        const isTypeToUnWrap = instanceOf(Type);\r\n        return function unWrapMonadByType (monad) {\r\n            return isTypeToUnWrap(monad) ? function trampolineCall () {\r\n                return unWrapMonadByType(monad.valueOf());\r\n            } : monad;\r\n        };\r\n    },\r\n\r\n    trampoline = fn => {\r\n        return (...args) => {\r\n            let result = apply(fn, args);\r\n            while (isset(result) &&\r\n                result.name === 'trampolineCall' &&\r\n                isFunction(result)\r\n            ) {\r\n                result = result();\r\n            }\r\n            return result;\r\n        };\r\n    };\r\n\r\nexport default class Monad extends Applicative {\r\n    static unWrapMonadByType (Type, monad) {\r\n        if (!isset(monad)) { return monad; }\r\n        const unwrap = trampoline(getMonadUnWrapper(Type));\r\n        return unwrap(monad);\r\n    }\r\n    join () {\r\n        return Monad.unWrapMonadByType(this.constructor, this);\r\n    }\r\n    flatMap (fn) {\r\n        const out = Monad.unWrapMonadByType(this.constructor, fn(this.join()));\r\n        return this.constructor.of(out);\r\n    }\r\n    chain (fn) {\r\n        return this.flatMap(fn);\r\n    }\r\n    static of (x) { return new Monad(x); }\r\n    static isMonad (x) { return isMonad(x); }\r\n}\r\n","/**\r\n * Created by elydelacruz on 2/19/2017.\r\n */\r\n\r\nimport Monad from '../monad/Monad';\r\nimport {toFunction} from '../utils';\r\nimport {compose} from 'fjl';\r\n// import {defineEnumProps} from 'fjl-mutable';\r\n\r\nexport default class IO extends Monad {\r\n    static unWrapIO (io) {\r\n        if (!IO.isIO(io)) { return io; }\r\n        return Monad.unWrapMonadByType(IO, io);\r\n    }\r\n    static of(fn) {\r\n        return new IO(fn);\r\n    }\r\n    static isIO (x) {\r\n        return x instanceof IO;\r\n    }\r\n    static do (io, ...args) {\r\n        const instance = !IO.isIO(io) ? new IO(io) : io;\r\n        return compose(\r\n            IO.of,\r\n            IO.unWrapIO\r\n        )(\r\n            toFunction(instance.join())(...args)\r\n        );\r\n    }\r\n\r\n    constructor(fn) {\r\n        super(toFunction(fn));\r\n        // Enforce `value` field validation\r\n        // defineEnumProps([[Function, 'value', this.value]], this);\r\n    }\r\n\r\n    flatMap (fn) {\r\n        return compose(\r\n            this.constructor.of,\r\n            IO.unWrapIO, fn,\r\n            IO.unWrapIO\r\n        )(\r\n            toFunction(this.join())()\r\n        );\r\n    }\r\n\r\n    map (fn) {\r\n        return compose(\r\n            this.constructor.of,\r\n            fn\r\n        )(\r\n            toFunction(this.valueOf())()\r\n        );\r\n    }\r\n}\r\n","let NothingSingleton;\r\n\r\nfunction Nothing () {\r\n    if (NothingSingleton) {\r\n        return NothingSingleton;\r\n    }\r\n    else if (!(this instanceof Nothing)) {\r\n        return new Nothing();\r\n    }\r\n    NothingSingleton = this;\r\n    Object.freeze(NothingSingleton);\r\n}\r\n\r\nconst isNothing = x => x === NothingSingleton,\r\n\r\n    nothing = () => new Nothing(),\r\n\r\n    // Prototypical stuff\r\n    returnThis = function () { return this; },\r\n    {prototype} = Nothing;\r\n\r\n// Methods\r\nprototype.valueOf   = returnThis;\r\nprototype.join      = returnThis;\r\nprototype.map       = returnThis;\r\nprototype.ap        = returnThis;\r\nprototype.flatMap   = returnThis;\r\n\r\n// Set statics\r\nNothing.of  = () => new Nothing();\r\nNothing.isNothing = isNothing;\r\nNothing.nothing = nothing;\r\n\r\n// Object.freeze makes properties on object immutable\r\n// @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\r\n// Saves us from having to do the following (great!):\r\n// Object.defineProperties(Nothing, {\r\n//     of: {value: () => new Nothing(), enumerable: true},\r\n//     isNothing: {value: isNothing, enumerable: true}\r\n// });\r\nObject.freeze(Nothing);\r\n\r\nexport {isNothing, nothing};\r\n\r\nexport default Nothing;\r\n","import Nothing, {isNothing} from './Nothing';\r\nimport Monad from '../monad/Monad';\r\nimport {isset} from 'fjl';\r\n\r\nexport const\r\n    isJust = x => x instanceof Just,\r\n    just = x => new Just(x)\r\n;\r\n\r\nexport default class Just extends Monad {\r\n    map (fn) {\r\n        const {constructor} = this,\r\n            value = this.valueOf();\r\n        return isset(value) && !isNothing(value) ? constructor.of(fn(value)) :\r\n            constructor.counterConstructor.of(value);\r\n    }\r\n    static of (x) { return just(x); }\r\n    static isJust (x) { return isJust(x); }\r\n}\r\n\r\nJust.counterConstructor = Nothing;\r\n","import Just, {isJust, just} from './Just';\r\nimport Nothing, {isNothing, nothing} from './Nothing';\r\nimport {isset, curry, id} from 'fjl';\r\n\r\nexport {Just, isJust, isNothing, Nothing, just, nothing};\r\n\r\nexport const\r\n    /**\r\n     * @param replacement {*}\r\n     * @param fn {Function} - Some operation.\r\n     * @param maybeInst {(Nothing|Just|*)} - Maybe instance or non\r\n     */\r\n    maybe = curry((replacement, fn, maybeInst) => {\r\n        const subject = isset(maybeInst) && isMaybe(maybeInst) ? maybeInst.map(id) : Nothing.of();\r\n        return isNothing(subject) ? replacement : subject.map(fn).join();\r\n    }),\r\n\r\n    isMaybe = x => isNothing(x) || isJust(x),\r\n\r\n    toMaybe = x => isset(x) ? just(x) : nothing()\r\n\r\n;\r\n","/**\r\n * Created by elyde on 12/10/2016.\r\n */\r\nimport {isset, curry, id} from 'fjl';\r\nimport {Just} from '../maybe/Maybe';\r\nimport Monad from '../monad/Monad';\r\nimport {alwaysFunctor, toFunction} from '../utils';\r\n\r\nexport class Left extends Monad {\r\n    static of (x) { return new Left(x); }\r\n}\r\n\r\nexport class Right extends Just {\r\n    map (fn) {\r\n        const value = this.valueOf();\r\n        if (isLeft(value)) {\r\n            return value;\r\n        }\r\n        else if (!isset(value)) {\r\n            return Left.of(\r\n                `TypeError: Cannot operate on \\`null\\` and/or \\`undefined\\`.  ` +\r\n                `Value given \\`${value}\\`.`\r\n            );\r\n        }\r\n        return Right.of(fn(value));\r\n    }\r\n\r\n    static of (x) { return new Right(x); }\r\n}\r\n\r\nexport const\r\n\r\n    isRight = x => x instanceof Right,\r\n\r\n    isLeft = x => x instanceof Left,\r\n\r\n    either = curry((leftCallback, rightCallback, monad) => {\r\n        const identity = alwaysFunctor(monad).map(id);\r\n        switch (identity.constructor) {\r\n            case Left:\r\n                return identity.map(toFunction(leftCallback)).join();\r\n            case Right:\r\n                return identity.map(toFunction(rightCallback)).join();\r\n            default:\r\n                return Left.of(monad).map(leftCallback).join();\r\n        }\r\n    });\r\n","/**\r\n * Created by elydelacruz on 2/19/2017.\r\n * @module fjlDataCore\r\n * Core monad types (useful for javascript).\r\n */\r\nimport Functor from './functor/Functor';\r\nimport Apply from './functor/Apply';\r\nimport Applicative from './functor/Applicative';\r\nimport Bifunctor from './functor/Bifunctor';\r\nimport Monad, {isMonad, valueOf, join, fmap,\r\n    ap, flatMap, getMonadUnWrapper, trampoline} from './monad/Monad';\r\nimport IO from './io/IO';\r\n\r\nexport {\r\n    Functor, Apply, Applicative, Bifunctor, IO, Monad,\r\n    isMonad, valueOf, join, fmap, ap, flatMap, getMonadUnWrapper,\r\n    trampoline\r\n};\r\n\r\nexport * from './maybe/Maybe';\r\nexport * from './either/Either';\r\nexport * from './utils';\r\n"],"names":["Functor","constructor","value","valueOf","map","fn","fmap","toFunction","x","isFunction","alwaysFunctor","Apply","ap","Applicative","of","Bifunctor","value1","value2","value2Of","first","second","bimap","fn1","fn2","isMonad","Monad","join","curry","applicative","functor","flatMap","monad","getMonadUnWrapper","Type","isTypeToUnWrap","instanceOf","unWrapMonadByType","trampolineCall","trampoline","args","result","apply","isset","name","unwrap","out","chain","IO","unWrapIO","io","isIO","do","instance","compose","NothingSingleton","Nothing","Object","freeze","isNothing","nothing","returnThis","prototype","isJust","Just","just","counterConstructor","maybe","replacement","maybeInst","subject","isMaybe","id","toMaybe","Left","Right","isLeft","isRight","either","leftCallback","rightCallback","identity"],"mappings":"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"}